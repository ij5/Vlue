
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULDIVrightUMINUSDIV ELSE EQUAL FLOAT IDENTIFIER IF INT LMB LSB MINUS MUL NEWLINE PLUS RMB RSB STRING TAB VAR\n    expression : expression variable_declaration NEWLINE\n        | expression variable_value_change NEWLINE\n        | variable_declaration NEWLINE\n        | variable_value_change\n        | NEWLINE\n    \n    variable_value_change : IDENTIFIER EQUAL calculate\n    \n    variable_declaration : VAR IDENTIFIER EQUAL calculate\n        | VAR IDENTIFIER EQUAL STRING\n    \n    variable_declaration : VAR IDENTIFIER\n    \n\n    calculate : calculate PLUS calculatecalculate : calculate MINUS calculatecalculate : MINUS calculate %prec UMINUS\n    calculate : calculate MUL calculate\n        | calculate DIV calculate\n    \n    calculate : INT\n        | FLOAT\n    \n    calculate : IDENTIFIER\n    calculate : LSB calculate RSB'
    
_lr_action_items = {'NEWLINE':([0,2,7,8,10,15,16,18,19,21,22,27,29,30,31,32,33,],[3,9,12,13,-9,-17,-6,-15,-16,-7,-8,-12,-10,-11,-13,-14,-18,]),'VAR':([0,1,3,4,9,12,13,15,16,18,19,27,29,30,31,32,33,],[5,5,-5,-4,-3,-1,-2,-17,-6,-15,-16,-12,-10,-11,-13,-14,-18,]),'IDENTIFIER':([0,1,3,4,5,9,11,12,13,14,15,16,17,18,19,20,23,24,25,26,27,29,30,31,32,33,],[6,6,-5,-4,10,-3,15,-1,-2,15,-17,-6,15,-15,-16,15,15,15,15,15,-12,-10,-11,-13,-14,-18,]),'$end':([1,3,4,9,12,13,15,16,18,19,27,29,30,31,32,33,],[0,-5,-4,-3,-1,-2,-17,-6,-15,-16,-12,-10,-11,-13,-14,-18,]),'EQUAL':([6,10,],[11,14,]),'MINUS':([11,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,],[17,17,-17,24,17,-15,-16,17,24,17,17,17,17,-12,24,-10,-11,-13,-14,-18,]),'INT':([11,14,17,20,23,24,25,26,],[18,18,18,18,18,18,18,18,]),'FLOAT':([11,14,17,20,23,24,25,26,],[19,19,19,19,19,19,19,19,]),'LSB':([11,14,17,20,23,24,25,26,],[20,20,20,20,20,20,20,20,]),'STRING':([14,],[22,]),'PLUS':([15,16,18,19,21,27,28,29,30,31,32,33,],[-17,23,-15,-16,23,-12,23,-10,-11,-13,-14,-18,]),'MUL':([15,16,18,19,21,27,28,29,30,31,32,33,],[-17,25,-15,-16,25,-12,25,25,25,-13,-14,-18,]),'DIV':([15,16,18,19,21,27,28,29,30,31,32,33,],[-17,26,-15,-16,26,-12,26,26,26,-13,-14,-18,]),'RSB':([15,18,19,27,28,29,30,31,32,33,],[-17,-15,-16,-12,33,-10,-11,-13,-14,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,],[1,]),'variable_declaration':([0,1,],[2,7,]),'variable_value_change':([0,1,],[4,8,]),'calculate':([11,14,17,20,23,24,25,26,],[16,21,27,28,29,30,31,32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression variable_declaration NEWLINE','expression',3,'p_expression','main.py',112),
  ('expression -> expression variable_value_change NEWLINE','expression',3,'p_expression','main.py',113),
  ('expression -> variable_declaration NEWLINE','expression',2,'p_expression','main.py',114),
  ('expression -> variable_value_change','expression',1,'p_expression','main.py',115),
  ('expression -> NEWLINE','expression',1,'p_expression','main.py',116),
  ('variable_value_change -> IDENTIFIER EQUAL calculate','variable_value_change',3,'p_variable_value_change','main.py',123),
  ('variable_declaration -> VAR IDENTIFIER EQUAL calculate','variable_declaration',4,'p_variable_declaration_2','main.py',135),
  ('variable_declaration -> VAR IDENTIFIER EQUAL STRING','variable_declaration',4,'p_variable_declaration_2','main.py',136),
  ('variable_declaration -> VAR IDENTIFIER','variable_declaration',2,'p_variable_declaration_1','main.py',143),
  ('calculate -> calculate PLUS calculate','calculate',3,'p_add','main.py',157),
  ('calculate -> calculate MINUS calculate','calculate',3,'p_sub','main.py',161),
  ('calculate -> MINUS calculate','calculate',2,'p_calculate2uminus','main.py',165),
  ('calculate -> calculate MUL calculate','calculate',3,'p_mul_div','main.py',170),
  ('calculate -> calculate DIV calculate','calculate',3,'p_mul_div','main.py',171),
  ('calculate -> INT','calculate',1,'p_calculate2num','main.py',182),
  ('calculate -> FLOAT','calculate',1,'p_calculate2num','main.py',183),
  ('calculate -> IDENTIFIER','calculate',1,'p_calculate2str','main.py',189),
  ('calculate -> LSB calculate RSB','calculate',3,'p_parens','main.py',197),
]
