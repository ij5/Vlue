Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    ELSE

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression variable_declaration SEMI
Rule 2     expression -> expression variable_value_change SEMI
Rule 3     expression -> expression if_statement SEMI
Rule 4     expression -> variable_declaration SEMI
Rule 5     expression -> variable_value_change SEMI
Rule 6     expression -> if_statement SEMI
Rule 7     if_statement -> if_statement_head if_statement_body
Rule 8     if_statement_head -> IF LSB condition RSB
Rule 9     if_statement_body -> LMB expression RMB
Rule 10    condition -> condition LB calculate
Rule 11    condition -> condition RB calculate
Rule 12    condition -> condition LB EQUAL calculate
Rule 13    condition -> condition RB EQUAL calculate
Rule 14    condition -> calculate
Rule 15    variable_value_change -> IDENTIFIER EQUAL calculate
Rule 16    variable_declaration -> VAR IDENTIFIER EQUAL calculate
Rule 17    variable_declaration -> VAR IDENTIFIER
Rule 18    calculate -> calculate PLUS calculate
Rule 19    calculate -> calculate MINUS calculate
Rule 20    calculate -> MINUS calculate
Rule 21    calculate -> calculate MUL calculate
Rule 22    calculate -> calculate DIV calculate
Rule 23    calculate -> INT
Rule 24    calculate -> FLOAT
Rule 25    calculate -> STRING
Rule 26    calculate -> IDENTIFIER
Rule 27    calculate -> LSB calculate RSB

Terminals, with rules where they appear

COLON                : 
DIV                  : 22
ELSE                 : 
EQUAL                : 12 13 15 16
FLOAT                : 24
IDENTIFIER           : 15 16 17 26
IF                   : 8
INT                  : 23
LB                   : 10 12
LMB                  : 9
LSB                  : 8 27
MINUS                : 19 20
MUL                  : 21
PLUS                 : 18
RB                   : 11 13
RMB                  : 9
RSB                  : 8 27
SEMI                 : 1 2 3 4 5 6
STRING               : 25
VAR                  : 16 17
error                : 

Nonterminals, with rules where they appear

calculate            : 10 11 12 13 14 15 16 18 18 19 19 20 21 21 22 22 27
condition            : 8 10 11 12 13
expression           : 1 2 3 9 0
if_statement         : 3 6
if_statement_body    : 7
if_statement_head    : 7
variable_declaration : 1 4
variable_value_change : 2 5

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression variable_declaration SEMI
    (2) expression -> . expression variable_value_change SEMI
    (3) expression -> . expression if_statement SEMI
    (4) expression -> . variable_declaration SEMI
    (5) expression -> . variable_value_change SEMI
    (6) expression -> . if_statement SEMI
    (16) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (17) variable_declaration -> . VAR IDENTIFIER
    (15) variable_value_change -> . IDENTIFIER EQUAL calculate
    (7) if_statement -> . if_statement_head if_statement_body
    (8) if_statement_head -> . IF LSB condition RSB

    VAR             shift and go to state 5
    IDENTIFIER      shift and go to state 6
    IF              shift and go to state 8

    expression                     shift and go to state 1
    variable_declaration           shift and go to state 2
    variable_value_change          shift and go to state 3
    if_statement                   shift and go to state 4
    if_statement_head              shift and go to state 7

state 1

    (0) S' -> expression .
    (1) expression -> expression . variable_declaration SEMI
    (2) expression -> expression . variable_value_change SEMI
    (3) expression -> expression . if_statement SEMI
    (16) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (17) variable_declaration -> . VAR IDENTIFIER
    (15) variable_value_change -> . IDENTIFIER EQUAL calculate
    (7) if_statement -> . if_statement_head if_statement_body
    (8) if_statement_head -> . IF LSB condition RSB

    VAR             shift and go to state 5
    IDENTIFIER      shift and go to state 6
    IF              shift and go to state 8

    variable_declaration           shift and go to state 9
    variable_value_change          shift and go to state 10
    if_statement                   shift and go to state 11
    if_statement_head              shift and go to state 7

state 2

    (4) expression -> variable_declaration . SEMI

    SEMI            shift and go to state 12


state 3

    (5) expression -> variable_value_change . SEMI

    SEMI            shift and go to state 13


state 4

    (6) expression -> if_statement . SEMI

    SEMI            shift and go to state 14


state 5

    (16) variable_declaration -> VAR . IDENTIFIER EQUAL calculate
    (17) variable_declaration -> VAR . IDENTIFIER

    IDENTIFIER      shift and go to state 15


state 6

    (15) variable_value_change -> IDENTIFIER . EQUAL calculate

    EQUAL           shift and go to state 16


state 7

    (7) if_statement -> if_statement_head . if_statement_body
    (9) if_statement_body -> . LMB expression RMB

    LMB             shift and go to state 18

    if_statement_body              shift and go to state 17

state 8

    (8) if_statement_head -> IF . LSB condition RSB

    LSB             shift and go to state 19


state 9

    (1) expression -> expression variable_declaration . SEMI

    SEMI            shift and go to state 20


state 10

    (2) expression -> expression variable_value_change . SEMI

    SEMI            shift and go to state 21


state 11

    (3) expression -> expression if_statement . SEMI

    SEMI            shift and go to state 22


state 12

    (4) expression -> variable_declaration SEMI .

    VAR             reduce using rule 4 (expression -> variable_declaration SEMI .)
    IDENTIFIER      reduce using rule 4 (expression -> variable_declaration SEMI .)
    IF              reduce using rule 4 (expression -> variable_declaration SEMI .)
    $end            reduce using rule 4 (expression -> variable_declaration SEMI .)
    RMB             reduce using rule 4 (expression -> variable_declaration SEMI .)


state 13

    (5) expression -> variable_value_change SEMI .

    VAR             reduce using rule 5 (expression -> variable_value_change SEMI .)
    IDENTIFIER      reduce using rule 5 (expression -> variable_value_change SEMI .)
    IF              reduce using rule 5 (expression -> variable_value_change SEMI .)
    $end            reduce using rule 5 (expression -> variable_value_change SEMI .)
    RMB             reduce using rule 5 (expression -> variable_value_change SEMI .)


state 14

    (6) expression -> if_statement SEMI .

    VAR             reduce using rule 6 (expression -> if_statement SEMI .)
    IDENTIFIER      reduce using rule 6 (expression -> if_statement SEMI .)
    IF              reduce using rule 6 (expression -> if_statement SEMI .)
    $end            reduce using rule 6 (expression -> if_statement SEMI .)
    RMB             reduce using rule 6 (expression -> if_statement SEMI .)


state 15

    (16) variable_declaration -> VAR IDENTIFIER . EQUAL calculate
    (17) variable_declaration -> VAR IDENTIFIER .

    EQUAL           shift and go to state 23
    SEMI            reduce using rule 17 (variable_declaration -> VAR IDENTIFIER .)


state 16

    (15) variable_value_change -> IDENTIFIER EQUAL . calculate
    (18) calculate -> . calculate PLUS calculate
    (19) calculate -> . calculate MINUS calculate
    (20) calculate -> . MINUS calculate
    (21) calculate -> . calculate MUL calculate
    (22) calculate -> . calculate DIV calculate
    (23) calculate -> . INT
    (24) calculate -> . FLOAT
    (25) calculate -> . STRING
    (26) calculate -> . IDENTIFIER
    (27) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 25

state 17

    (7) if_statement -> if_statement_head if_statement_body .

    SEMI            reduce using rule 7 (if_statement -> if_statement_head if_statement_body .)


state 18

    (9) if_statement_body -> LMB . expression RMB
    (1) expression -> . expression variable_declaration SEMI
    (2) expression -> . expression variable_value_change SEMI
    (3) expression -> . expression if_statement SEMI
    (4) expression -> . variable_declaration SEMI
    (5) expression -> . variable_value_change SEMI
    (6) expression -> . if_statement SEMI
    (16) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (17) variable_declaration -> . VAR IDENTIFIER
    (15) variable_value_change -> . IDENTIFIER EQUAL calculate
    (7) if_statement -> . if_statement_head if_statement_body
    (8) if_statement_head -> . IF LSB condition RSB

    VAR             shift and go to state 5
    IDENTIFIER      shift and go to state 6
    IF              shift and go to state 8

    expression                     shift and go to state 31
    variable_declaration           shift and go to state 2
    variable_value_change          shift and go to state 3
    if_statement                   shift and go to state 4
    if_statement_head              shift and go to state 7

state 19

    (8) if_statement_head -> IF LSB . condition RSB
    (10) condition -> . condition LB calculate
    (11) condition -> . condition RB calculate
    (12) condition -> . condition LB EQUAL calculate
    (13) condition -> . condition RB EQUAL calculate
    (14) condition -> . calculate
    (18) calculate -> . calculate PLUS calculate
    (19) calculate -> . calculate MINUS calculate
    (20) calculate -> . MINUS calculate
    (21) calculate -> . calculate MUL calculate
    (22) calculate -> . calculate DIV calculate
    (23) calculate -> . INT
    (24) calculate -> . FLOAT
    (25) calculate -> . STRING
    (26) calculate -> . IDENTIFIER
    (27) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    condition                      shift and go to state 32
    calculate                      shift and go to state 33

state 20

    (1) expression -> expression variable_declaration SEMI .

    VAR             reduce using rule 1 (expression -> expression variable_declaration SEMI .)
    IDENTIFIER      reduce using rule 1 (expression -> expression variable_declaration SEMI .)
    IF              reduce using rule 1 (expression -> expression variable_declaration SEMI .)
    $end            reduce using rule 1 (expression -> expression variable_declaration SEMI .)
    RMB             reduce using rule 1 (expression -> expression variable_declaration SEMI .)


state 21

    (2) expression -> expression variable_value_change SEMI .

    VAR             reduce using rule 2 (expression -> expression variable_value_change SEMI .)
    IDENTIFIER      reduce using rule 2 (expression -> expression variable_value_change SEMI .)
    IF              reduce using rule 2 (expression -> expression variable_value_change SEMI .)
    $end            reduce using rule 2 (expression -> expression variable_value_change SEMI .)
    RMB             reduce using rule 2 (expression -> expression variable_value_change SEMI .)


state 22

    (3) expression -> expression if_statement SEMI .

    VAR             reduce using rule 3 (expression -> expression if_statement SEMI .)
    IDENTIFIER      reduce using rule 3 (expression -> expression if_statement SEMI .)
    IF              reduce using rule 3 (expression -> expression if_statement SEMI .)
    $end            reduce using rule 3 (expression -> expression if_statement SEMI .)
    RMB             reduce using rule 3 (expression -> expression if_statement SEMI .)


state 23

    (16) variable_declaration -> VAR IDENTIFIER EQUAL . calculate
    (18) calculate -> . calculate PLUS calculate
    (19) calculate -> . calculate MINUS calculate
    (20) calculate -> . MINUS calculate
    (21) calculate -> . calculate MUL calculate
    (22) calculate -> . calculate DIV calculate
    (23) calculate -> . INT
    (24) calculate -> . FLOAT
    (25) calculate -> . STRING
    (26) calculate -> . IDENTIFIER
    (27) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 34

state 24

    (26) calculate -> IDENTIFIER .

    PLUS            reduce using rule 26 (calculate -> IDENTIFIER .)
    MINUS           reduce using rule 26 (calculate -> IDENTIFIER .)
    MUL             reduce using rule 26 (calculate -> IDENTIFIER .)
    DIV             reduce using rule 26 (calculate -> IDENTIFIER .)
    SEMI            reduce using rule 26 (calculate -> IDENTIFIER .)
    RSB             reduce using rule 26 (calculate -> IDENTIFIER .)
    LB              reduce using rule 26 (calculate -> IDENTIFIER .)
    RB              reduce using rule 26 (calculate -> IDENTIFIER .)


state 25

    (15) variable_value_change -> IDENTIFIER EQUAL calculate .
    (18) calculate -> calculate . PLUS calculate
    (19) calculate -> calculate . MINUS calculate
    (21) calculate -> calculate . MUL calculate
    (22) calculate -> calculate . DIV calculate

    SEMI            reduce using rule 15 (variable_value_change -> IDENTIFIER EQUAL calculate .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MUL             shift and go to state 37
    DIV             shift and go to state 38


state 26

    (20) calculate -> MINUS . calculate
    (18) calculate -> . calculate PLUS calculate
    (19) calculate -> . calculate MINUS calculate
    (20) calculate -> . MINUS calculate
    (21) calculate -> . calculate MUL calculate
    (22) calculate -> . calculate DIV calculate
    (23) calculate -> . INT
    (24) calculate -> . FLOAT
    (25) calculate -> . STRING
    (26) calculate -> . IDENTIFIER
    (27) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 39

state 27

    (23) calculate -> INT .

    PLUS            reduce using rule 23 (calculate -> INT .)
    MINUS           reduce using rule 23 (calculate -> INT .)
    MUL             reduce using rule 23 (calculate -> INT .)
    DIV             reduce using rule 23 (calculate -> INT .)
    SEMI            reduce using rule 23 (calculate -> INT .)
    RSB             reduce using rule 23 (calculate -> INT .)
    LB              reduce using rule 23 (calculate -> INT .)
    RB              reduce using rule 23 (calculate -> INT .)


state 28

    (24) calculate -> FLOAT .

    PLUS            reduce using rule 24 (calculate -> FLOAT .)
    MINUS           reduce using rule 24 (calculate -> FLOAT .)
    MUL             reduce using rule 24 (calculate -> FLOAT .)
    DIV             reduce using rule 24 (calculate -> FLOAT .)
    SEMI            reduce using rule 24 (calculate -> FLOAT .)
    RSB             reduce using rule 24 (calculate -> FLOAT .)
    LB              reduce using rule 24 (calculate -> FLOAT .)
    RB              reduce using rule 24 (calculate -> FLOAT .)


state 29

    (25) calculate -> STRING .

    PLUS            reduce using rule 25 (calculate -> STRING .)
    MINUS           reduce using rule 25 (calculate -> STRING .)
    MUL             reduce using rule 25 (calculate -> STRING .)
    DIV             reduce using rule 25 (calculate -> STRING .)
    SEMI            reduce using rule 25 (calculate -> STRING .)
    RSB             reduce using rule 25 (calculate -> STRING .)
    LB              reduce using rule 25 (calculate -> STRING .)
    RB              reduce using rule 25 (calculate -> STRING .)


state 30

    (27) calculate -> LSB . calculate RSB
    (18) calculate -> . calculate PLUS calculate
    (19) calculate -> . calculate MINUS calculate
    (20) calculate -> . MINUS calculate
    (21) calculate -> . calculate MUL calculate
    (22) calculate -> . calculate DIV calculate
    (23) calculate -> . INT
    (24) calculate -> . FLOAT
    (25) calculate -> . STRING
    (26) calculate -> . IDENTIFIER
    (27) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 40

state 31

    (9) if_statement_body -> LMB expression . RMB
    (1) expression -> expression . variable_declaration SEMI
    (2) expression -> expression . variable_value_change SEMI
    (3) expression -> expression . if_statement SEMI
    (16) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (17) variable_declaration -> . VAR IDENTIFIER
    (15) variable_value_change -> . IDENTIFIER EQUAL calculate
    (7) if_statement -> . if_statement_head if_statement_body
    (8) if_statement_head -> . IF LSB condition RSB

    RMB             shift and go to state 41
    VAR             shift and go to state 5
    IDENTIFIER      shift and go to state 6
    IF              shift and go to state 8

    variable_declaration           shift and go to state 9
    variable_value_change          shift and go to state 10
    if_statement                   shift and go to state 11
    if_statement_head              shift and go to state 7

state 32

    (8) if_statement_head -> IF LSB condition . RSB
    (10) condition -> condition . LB calculate
    (11) condition -> condition . RB calculate
    (12) condition -> condition . LB EQUAL calculate
    (13) condition -> condition . RB EQUAL calculate

    RSB             shift and go to state 42
    LB              shift and go to state 43
    RB              shift and go to state 44


state 33

    (14) condition -> calculate .
    (18) calculate -> calculate . PLUS calculate
    (19) calculate -> calculate . MINUS calculate
    (21) calculate -> calculate . MUL calculate
    (22) calculate -> calculate . DIV calculate

    RSB             reduce using rule 14 (condition -> calculate .)
    LB              reduce using rule 14 (condition -> calculate .)
    RB              reduce using rule 14 (condition -> calculate .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MUL             shift and go to state 37
    DIV             shift and go to state 38


state 34

    (16) variable_declaration -> VAR IDENTIFIER EQUAL calculate .
    (18) calculate -> calculate . PLUS calculate
    (19) calculate -> calculate . MINUS calculate
    (21) calculate -> calculate . MUL calculate
    (22) calculate -> calculate . DIV calculate

    SEMI            reduce using rule 16 (variable_declaration -> VAR IDENTIFIER EQUAL calculate .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MUL             shift and go to state 37
    DIV             shift and go to state 38


state 35

    (18) calculate -> calculate PLUS . calculate
    (18) calculate -> . calculate PLUS calculate
    (19) calculate -> . calculate MINUS calculate
    (20) calculate -> . MINUS calculate
    (21) calculate -> . calculate MUL calculate
    (22) calculate -> . calculate DIV calculate
    (23) calculate -> . INT
    (24) calculate -> . FLOAT
    (25) calculate -> . STRING
    (26) calculate -> . IDENTIFIER
    (27) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 45

state 36

    (19) calculate -> calculate MINUS . calculate
    (18) calculate -> . calculate PLUS calculate
    (19) calculate -> . calculate MINUS calculate
    (20) calculate -> . MINUS calculate
    (21) calculate -> . calculate MUL calculate
    (22) calculate -> . calculate DIV calculate
    (23) calculate -> . INT
    (24) calculate -> . FLOAT
    (25) calculate -> . STRING
    (26) calculate -> . IDENTIFIER
    (27) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 46

state 37

    (21) calculate -> calculate MUL . calculate
    (18) calculate -> . calculate PLUS calculate
    (19) calculate -> . calculate MINUS calculate
    (20) calculate -> . MINUS calculate
    (21) calculate -> . calculate MUL calculate
    (22) calculate -> . calculate DIV calculate
    (23) calculate -> . INT
    (24) calculate -> . FLOAT
    (25) calculate -> . STRING
    (26) calculate -> . IDENTIFIER
    (27) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 47

state 38

    (22) calculate -> calculate DIV . calculate
    (18) calculate -> . calculate PLUS calculate
    (19) calculate -> . calculate MINUS calculate
    (20) calculate -> . MINUS calculate
    (21) calculate -> . calculate MUL calculate
    (22) calculate -> . calculate DIV calculate
    (23) calculate -> . INT
    (24) calculate -> . FLOAT
    (25) calculate -> . STRING
    (26) calculate -> . IDENTIFIER
    (27) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 48

state 39

    (20) calculate -> MINUS calculate .
    (18) calculate -> calculate . PLUS calculate
    (19) calculate -> calculate . MINUS calculate
    (21) calculate -> calculate . MUL calculate
    (22) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 20 (calculate -> MINUS calculate .)
    MINUS           reduce using rule 20 (calculate -> MINUS calculate .)
    MUL             reduce using rule 20 (calculate -> MINUS calculate .)
    DIV             reduce using rule 20 (calculate -> MINUS calculate .)
    SEMI            reduce using rule 20 (calculate -> MINUS calculate .)
    RSB             reduce using rule 20 (calculate -> MINUS calculate .)
    LB              reduce using rule 20 (calculate -> MINUS calculate .)
    RB              reduce using rule 20 (calculate -> MINUS calculate .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MUL             [ shift and go to state 37 ]
  ! DIV             [ shift and go to state 38 ]


state 40

    (27) calculate -> LSB calculate . RSB
    (18) calculate -> calculate . PLUS calculate
    (19) calculate -> calculate . MINUS calculate
    (21) calculate -> calculate . MUL calculate
    (22) calculate -> calculate . DIV calculate

    RSB             shift and go to state 49
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MUL             shift and go to state 37
    DIV             shift and go to state 38


state 41

    (9) if_statement_body -> LMB expression RMB .

    SEMI            reduce using rule 9 (if_statement_body -> LMB expression RMB .)


state 42

    (8) if_statement_head -> IF LSB condition RSB .

    LMB             reduce using rule 8 (if_statement_head -> IF LSB condition RSB .)


state 43

    (10) condition -> condition LB . calculate
    (12) condition -> condition LB . EQUAL calculate
    (18) calculate -> . calculate PLUS calculate
    (19) calculate -> . calculate MINUS calculate
    (20) calculate -> . MINUS calculate
    (21) calculate -> . calculate MUL calculate
    (22) calculate -> . calculate DIV calculate
    (23) calculate -> . INT
    (24) calculate -> . FLOAT
    (25) calculate -> . STRING
    (26) calculate -> . IDENTIFIER
    (27) calculate -> . LSB calculate RSB

    EQUAL           shift and go to state 51
    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 50

state 44

    (11) condition -> condition RB . calculate
    (13) condition -> condition RB . EQUAL calculate
    (18) calculate -> . calculate PLUS calculate
    (19) calculate -> . calculate MINUS calculate
    (20) calculate -> . MINUS calculate
    (21) calculate -> . calculate MUL calculate
    (22) calculate -> . calculate DIV calculate
    (23) calculate -> . INT
    (24) calculate -> . FLOAT
    (25) calculate -> . STRING
    (26) calculate -> . IDENTIFIER
    (27) calculate -> . LSB calculate RSB

    EQUAL           shift and go to state 53
    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 52

state 45

    (18) calculate -> calculate PLUS calculate .
    (18) calculate -> calculate . PLUS calculate
    (19) calculate -> calculate . MINUS calculate
    (21) calculate -> calculate . MUL calculate
    (22) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 18 (calculate -> calculate PLUS calculate .)
    MINUS           reduce using rule 18 (calculate -> calculate PLUS calculate .)
    SEMI            reduce using rule 18 (calculate -> calculate PLUS calculate .)
    RSB             reduce using rule 18 (calculate -> calculate PLUS calculate .)
    LB              reduce using rule 18 (calculate -> calculate PLUS calculate .)
    RB              reduce using rule 18 (calculate -> calculate PLUS calculate .)
    MUL             shift and go to state 37
    DIV             shift and go to state 38

  ! MUL             [ reduce using rule 18 (calculate -> calculate PLUS calculate .) ]
  ! DIV             [ reduce using rule 18 (calculate -> calculate PLUS calculate .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]


state 46

    (19) calculate -> calculate MINUS calculate .
    (18) calculate -> calculate . PLUS calculate
    (19) calculate -> calculate . MINUS calculate
    (21) calculate -> calculate . MUL calculate
    (22) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 19 (calculate -> calculate MINUS calculate .)
    MINUS           reduce using rule 19 (calculate -> calculate MINUS calculate .)
    SEMI            reduce using rule 19 (calculate -> calculate MINUS calculate .)
    RSB             reduce using rule 19 (calculate -> calculate MINUS calculate .)
    LB              reduce using rule 19 (calculate -> calculate MINUS calculate .)
    RB              reduce using rule 19 (calculate -> calculate MINUS calculate .)
    MUL             shift and go to state 37
    DIV             shift and go to state 38

  ! MUL             [ reduce using rule 19 (calculate -> calculate MINUS calculate .) ]
  ! DIV             [ reduce using rule 19 (calculate -> calculate MINUS calculate .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]


state 47

    (21) calculate -> calculate MUL calculate .
    (18) calculate -> calculate . PLUS calculate
    (19) calculate -> calculate . MINUS calculate
    (21) calculate -> calculate . MUL calculate
    (22) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 21 (calculate -> calculate MUL calculate .)
    MINUS           reduce using rule 21 (calculate -> calculate MUL calculate .)
    MUL             reduce using rule 21 (calculate -> calculate MUL calculate .)
    DIV             reduce using rule 21 (calculate -> calculate MUL calculate .)
    SEMI            reduce using rule 21 (calculate -> calculate MUL calculate .)
    RSB             reduce using rule 21 (calculate -> calculate MUL calculate .)
    LB              reduce using rule 21 (calculate -> calculate MUL calculate .)
    RB              reduce using rule 21 (calculate -> calculate MUL calculate .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MUL             [ shift and go to state 37 ]
  ! DIV             [ shift and go to state 38 ]


state 48

    (22) calculate -> calculate DIV calculate .
    (18) calculate -> calculate . PLUS calculate
    (19) calculate -> calculate . MINUS calculate
    (21) calculate -> calculate . MUL calculate
    (22) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 22 (calculate -> calculate DIV calculate .)
    MINUS           reduce using rule 22 (calculate -> calculate DIV calculate .)
    MUL             reduce using rule 22 (calculate -> calculate DIV calculate .)
    DIV             reduce using rule 22 (calculate -> calculate DIV calculate .)
    SEMI            reduce using rule 22 (calculate -> calculate DIV calculate .)
    RSB             reduce using rule 22 (calculate -> calculate DIV calculate .)
    LB              reduce using rule 22 (calculate -> calculate DIV calculate .)
    RB              reduce using rule 22 (calculate -> calculate DIV calculate .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MUL             [ shift and go to state 37 ]
  ! DIV             [ shift and go to state 38 ]


state 49

    (27) calculate -> LSB calculate RSB .

    PLUS            reduce using rule 27 (calculate -> LSB calculate RSB .)
    MINUS           reduce using rule 27 (calculate -> LSB calculate RSB .)
    MUL             reduce using rule 27 (calculate -> LSB calculate RSB .)
    DIV             reduce using rule 27 (calculate -> LSB calculate RSB .)
    SEMI            reduce using rule 27 (calculate -> LSB calculate RSB .)
    RSB             reduce using rule 27 (calculate -> LSB calculate RSB .)
    LB              reduce using rule 27 (calculate -> LSB calculate RSB .)
    RB              reduce using rule 27 (calculate -> LSB calculate RSB .)


state 50

    (10) condition -> condition LB calculate .
    (18) calculate -> calculate . PLUS calculate
    (19) calculate -> calculate . MINUS calculate
    (21) calculate -> calculate . MUL calculate
    (22) calculate -> calculate . DIV calculate

    RSB             reduce using rule 10 (condition -> condition LB calculate .)
    LB              reduce using rule 10 (condition -> condition LB calculate .)
    RB              reduce using rule 10 (condition -> condition LB calculate .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MUL             shift and go to state 37
    DIV             shift and go to state 38


state 51

    (12) condition -> condition LB EQUAL . calculate
    (18) calculate -> . calculate PLUS calculate
    (19) calculate -> . calculate MINUS calculate
    (20) calculate -> . MINUS calculate
    (21) calculate -> . calculate MUL calculate
    (22) calculate -> . calculate DIV calculate
    (23) calculate -> . INT
    (24) calculate -> . FLOAT
    (25) calculate -> . STRING
    (26) calculate -> . IDENTIFIER
    (27) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 54

state 52

    (11) condition -> condition RB calculate .
    (18) calculate -> calculate . PLUS calculate
    (19) calculate -> calculate . MINUS calculate
    (21) calculate -> calculate . MUL calculate
    (22) calculate -> calculate . DIV calculate

    RSB             reduce using rule 11 (condition -> condition RB calculate .)
    LB              reduce using rule 11 (condition -> condition RB calculate .)
    RB              reduce using rule 11 (condition -> condition RB calculate .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MUL             shift and go to state 37
    DIV             shift and go to state 38


state 53

    (13) condition -> condition RB EQUAL . calculate
    (18) calculate -> . calculate PLUS calculate
    (19) calculate -> . calculate MINUS calculate
    (20) calculate -> . MINUS calculate
    (21) calculate -> . calculate MUL calculate
    (22) calculate -> . calculate DIV calculate
    (23) calculate -> . INT
    (24) calculate -> . FLOAT
    (25) calculate -> . STRING
    (26) calculate -> . IDENTIFIER
    (27) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 55

state 54

    (12) condition -> condition LB EQUAL calculate .
    (18) calculate -> calculate . PLUS calculate
    (19) calculate -> calculate . MINUS calculate
    (21) calculate -> calculate . MUL calculate
    (22) calculate -> calculate . DIV calculate

    RSB             reduce using rule 12 (condition -> condition LB EQUAL calculate .)
    LB              reduce using rule 12 (condition -> condition LB EQUAL calculate .)
    RB              reduce using rule 12 (condition -> condition LB EQUAL calculate .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MUL             shift and go to state 37
    DIV             shift and go to state 38


state 55

    (13) condition -> condition RB EQUAL calculate .
    (18) calculate -> calculate . PLUS calculate
    (19) calculate -> calculate . MINUS calculate
    (21) calculate -> calculate . MUL calculate
    (22) calculate -> calculate . DIV calculate

    RSB             reduce using rule 13 (condition -> condition RB EQUAL calculate .)
    LB              reduce using rule 13 (condition -> condition RB EQUAL calculate .)
    RB              reduce using rule 13 (condition -> condition RB EQUAL calculate .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MUL             shift and go to state 37
    DIV             shift and go to state 38

