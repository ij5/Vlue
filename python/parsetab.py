
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA EQUAL IDENTIFIER LMB LSB OTHER RMB RSBroot : head_expr inside\n    inside : LMB inside_content RMB\n        | LMB root RMB\n    \n    inside_content : attr\n        | empty\n    \n    head_expr : IDENTIFIER elements_outside\n    \n    elements_outside : LSB elements_inside_comma RSB\n    \n    elements_inside_comma : elements_inside_equal COMMA elements_inside_equal\n    \n    elements_inside_comma : elements_inside_equal\n        | empty\n    \n    elements_inside_equal : attr_root EQUAL attr_root\n    \n    attr_root : attr attr\n    attr_root : attr\n    attr : attr IDENTIFIER\n        | attr OTHER\n    \n    attr : IDENTIFIER\n        | OTHER\n    empty : '
    
_lr_action_items = {'IDENTIFIER':([0,5,7,10,12,13,18,19,22,23,25,26,27,28,29,],[3,12,19,22,-16,-17,28,-16,-14,-15,19,19,22,-14,-15,]),'$end':([1,4,20,21,],[0,-1,-2,-3,]),'LMB':([2,6,24,],[5,-6,-7,]),'LSB':([3,12,],[7,7,]),'RMB':([4,5,8,9,10,11,12,13,20,21,22,23,],[-1,-18,20,21,-4,-5,-16,-17,-2,-3,-14,-15,]),'OTHER':([5,7,10,12,13,18,19,22,23,25,26,27,28,29,],[13,13,23,-16,-17,29,-16,-14,-15,13,13,23,-14,-15,]),'RSB':([7,13,14,15,16,18,19,22,23,27,28,29,30,31,],[-18,-17,24,-9,-10,-13,-16,-14,-15,-12,-14,-15,-8,-11,]),'EQUAL':([13,17,18,19,22,23,27,28,29,],[-17,26,-13,-16,-14,-15,-12,-14,-15,]),'COMMA':([13,15,18,19,22,23,27,28,29,31,],[-17,25,-13,-16,-14,-15,-12,-14,-15,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'root':([0,5,],[1,9,]),'head_expr':([0,5,],[2,2,]),'inside':([2,],[4,]),'elements_outside':([3,12,],[6,6,]),'inside_content':([5,],[8,]),'attr':([5,7,18,25,26,],[10,18,27,18,18,]),'empty':([5,7,],[11,16,]),'elements_inside_comma':([7,],[14,]),'elements_inside_equal':([7,25,],[15,30,]),'attr_root':([7,25,26,],[17,17,31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> root","S'",1,None,None,None),
  ('root -> head_expr inside','root',2,'p_root','parser.py',7),
  ('inside -> LMB inside_content RMB','inside',3,'p_inside','parser.py',12),
  ('inside -> LMB root RMB','inside',3,'p_inside','parser.py',13),
  ('inside_content -> attr','inside_content',1,'p_inside_content','parser.py',19),
  ('inside_content -> empty','inside_content',1,'p_inside_content','parser.py',20),
  ('head_expr -> IDENTIFIER elements_outside','head_expr',2,'p_head','parser.py',26),
  ('elements_outside -> LSB elements_inside_comma RSB','elements_outside',3,'p_elements_outside','parser.py',33),
  ('elements_inside_comma -> elements_inside_equal COMMA elements_inside_equal','elements_inside_comma',3,'p_elements_inside_comma1','parser.py',39),
  ('elements_inside_comma -> elements_inside_equal','elements_inside_comma',1,'p_elements_inside_comma2','parser.py',45),
  ('elements_inside_comma -> empty','elements_inside_comma',1,'p_elements_inside_comma2','parser.py',46),
  ('elements_inside_equal -> attr_root EQUAL attr_root','elements_inside_equal',3,'p_elements_inside_equal','parser.py',52),
  ('attr_root -> attr attr','attr_root',2,'p_attr0','parser.py',58),
  ('attr_root -> attr','attr_root',1,'p_attr00','parser.py',63),
  ('attr -> attr IDENTIFIER','attr',2,'p_attr1','parser.py',68),
  ('attr -> attr OTHER','attr',2,'p_attr1','parser.py',69),
  ('attr -> IDENTIFIER','attr',1,'p_attr2','parser.py',75),
  ('attr -> OTHER','attr',1,'p_attr2','parser.py',76),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',83),
]
