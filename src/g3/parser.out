Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    ELSE

Grammar

Rule 0     S' -> root
Rule 1     root -> expression
Rule 2     expression -> expression variable_declaration SEMI
Rule 3     expression -> expression variable_value_change SEMI
Rule 4     expression -> expression if_statement
Rule 5     expression -> variable_declaration SEMI
Rule 6     expression -> variable_value_change SEMI
Rule 7     expression -> if_statement
Rule 8     expression -> empty
Rule 9     function -> FUNCTION IDENTIFIER LSB empty RSB LMB expression RMB
Rule 10    function -> FUNCTION IDENTIFIER LSB parameter RSB LMB expression RMB
Rule 11    function_call -> IDENTIFIER LSB parameter RSB
Rule 12    parameter -> parameter COMMA calculate
Rule 13    parameter -> calculate
Rule 14    if_statement -> if_statement_head if_statement_body
Rule 15    if_statement_head -> IF LSB condition RSB
Rule 16    if_statement_body -> LMB expression RMB
Rule 17    condition -> condition LB calculate
Rule 18    condition -> condition RB calculate
Rule 19    condition -> condition LB EQUAL calculate
Rule 20    condition -> condition RB EQUAL calculate
Rule 21    condition -> condition EQUAL calculate
Rule 22    condition -> calculate
Rule 23    variable_value_change -> IDENTIFIER EQUAL calculate
Rule 24    variable_declaration -> VAR IDENTIFIER EQUAL calculate
Rule 25    variable_declaration -> VAR IDENTIFIER
Rule 26    calculate -> calculate PLUS calculate
Rule 27    calculate -> calculate MINUS calculate
Rule 28    calculate -> MINUS calculate
Rule 29    calculate -> calculate MUL calculate
Rule 30    calculate -> calculate DIV calculate
Rule 31    calculate -> INT
Rule 32    calculate -> FLOAT
Rule 33    calculate -> STRING
Rule 34    calculate -> IDENTIFIER
Rule 35    calculate -> LSB calculate RSB
Rule 36    empty -> <empty>

Terminals, with rules where they appear

COLON                : 
COMMA                : 12
DIV                  : 30
ELSE                 : 
EQUAL                : 19 20 21 23 24
FLOAT                : 32
FUNCTION             : 9 10
IDENTIFIER           : 9 10 11 23 24 25 34
IF                   : 15
INT                  : 31
LB                   : 17 19
LMB                  : 9 10 16
LSB                  : 9 10 11 15 35
MINUS                : 27 28
MUL                  : 29
PLUS                 : 26
RB                   : 18 20
RMB                  : 9 10 16
RSB                  : 9 10 11 15 35
SEMI                 : 2 3 5 6
STRING               : 33
VAR                  : 24 25
error                : 

Nonterminals, with rules where they appear

calculate            : 12 13 17 18 19 20 21 22 23 24 26 26 27 27 28 29 29 30 30 35
condition            : 15 17 18 19 20 21
empty                : 8 9
expression           : 1 2 3 4 9 10 16
function             : 
function_call        : 
if_statement         : 4 7
if_statement_body    : 14
if_statement_head    : 14
parameter            : 10 11 12
root                 : 0
variable_declaration : 2 5
variable_value_change : 3 6

Parsing method: LALR

state 0

    (0) S' -> . root
    (1) root -> . expression
    (2) expression -> . expression variable_declaration SEMI
    (3) expression -> . expression variable_value_change SEMI
    (4) expression -> . expression if_statement
    (5) expression -> . variable_declaration SEMI
    (6) expression -> . variable_value_change SEMI
    (7) expression -> . if_statement
    (8) expression -> . empty
    (24) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (25) variable_declaration -> . VAR IDENTIFIER
    (23) variable_value_change -> . IDENTIFIER EQUAL calculate
    (14) if_statement -> . if_statement_head if_statement_body
    (36) empty -> .
    (15) if_statement_head -> . IF LSB condition RSB

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    VAR             shift and go to state 7
    IDENTIFIER      shift and go to state 8
    $end            reduce using rule 36 (empty -> .)
    IF              shift and go to state 10

  ! VAR             [ reduce using rule 36 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 36 (empty -> .) ]
  ! IF              [ reduce using rule 36 (empty -> .) ]

    root                           shift and go to state 1
    expression                     shift and go to state 2
    variable_declaration           shift and go to state 3
    variable_value_change          shift and go to state 4
    if_statement                   shift and go to state 5
    empty                          shift and go to state 6
    if_statement_head              shift and go to state 9

state 1

    (0) S' -> root .



state 2

    (1) root -> expression .
    (2) expression -> expression . variable_declaration SEMI
    (3) expression -> expression . variable_value_change SEMI
    (4) expression -> expression . if_statement
    (24) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (25) variable_declaration -> . VAR IDENTIFIER
    (23) variable_value_change -> . IDENTIFIER EQUAL calculate
    (14) if_statement -> . if_statement_head if_statement_body
    (15) if_statement_head -> . IF LSB condition RSB

    $end            reduce using rule 1 (root -> expression .)
    VAR             shift and go to state 7
    IDENTIFIER      shift and go to state 8
    IF              shift and go to state 10

    variable_declaration           shift and go to state 11
    variable_value_change          shift and go to state 12
    if_statement                   shift and go to state 13
    if_statement_head              shift and go to state 9

state 3

    (5) expression -> variable_declaration . SEMI

    SEMI            shift and go to state 14


state 4

    (6) expression -> variable_value_change . SEMI

    SEMI            shift and go to state 15


state 5

    (7) expression -> if_statement .

    VAR             reduce using rule 7 (expression -> if_statement .)
    IDENTIFIER      reduce using rule 7 (expression -> if_statement .)
    IF              reduce using rule 7 (expression -> if_statement .)
    $end            reduce using rule 7 (expression -> if_statement .)
    RMB             reduce using rule 7 (expression -> if_statement .)


state 6

    (8) expression -> empty .

    VAR             reduce using rule 8 (expression -> empty .)
    IDENTIFIER      reduce using rule 8 (expression -> empty .)
    IF              reduce using rule 8 (expression -> empty .)
    $end            reduce using rule 8 (expression -> empty .)
    RMB             reduce using rule 8 (expression -> empty .)


state 7

    (24) variable_declaration -> VAR . IDENTIFIER EQUAL calculate
    (25) variable_declaration -> VAR . IDENTIFIER

    IDENTIFIER      shift and go to state 16


state 8

    (23) variable_value_change -> IDENTIFIER . EQUAL calculate

    EQUAL           shift and go to state 17


state 9

    (14) if_statement -> if_statement_head . if_statement_body
    (16) if_statement_body -> . LMB expression RMB

    LMB             shift and go to state 19

    if_statement_body              shift and go to state 18

state 10

    (15) if_statement_head -> IF . LSB condition RSB

    LSB             shift and go to state 20


state 11

    (2) expression -> expression variable_declaration . SEMI

    SEMI            shift and go to state 21


state 12

    (3) expression -> expression variable_value_change . SEMI

    SEMI            shift and go to state 22


state 13

    (4) expression -> expression if_statement .

    VAR             reduce using rule 4 (expression -> expression if_statement .)
    IDENTIFIER      reduce using rule 4 (expression -> expression if_statement .)
    IF              reduce using rule 4 (expression -> expression if_statement .)
    $end            reduce using rule 4 (expression -> expression if_statement .)
    RMB             reduce using rule 4 (expression -> expression if_statement .)


state 14

    (5) expression -> variable_declaration SEMI .

    VAR             reduce using rule 5 (expression -> variable_declaration SEMI .)
    IDENTIFIER      reduce using rule 5 (expression -> variable_declaration SEMI .)
    IF              reduce using rule 5 (expression -> variable_declaration SEMI .)
    $end            reduce using rule 5 (expression -> variable_declaration SEMI .)
    RMB             reduce using rule 5 (expression -> variable_declaration SEMI .)


state 15

    (6) expression -> variable_value_change SEMI .

    VAR             reduce using rule 6 (expression -> variable_value_change SEMI .)
    IDENTIFIER      reduce using rule 6 (expression -> variable_value_change SEMI .)
    IF              reduce using rule 6 (expression -> variable_value_change SEMI .)
    $end            reduce using rule 6 (expression -> variable_value_change SEMI .)
    RMB             reduce using rule 6 (expression -> variable_value_change SEMI .)


state 16

    (24) variable_declaration -> VAR IDENTIFIER . EQUAL calculate
    (25) variable_declaration -> VAR IDENTIFIER .

    EQUAL           shift and go to state 23
    SEMI            reduce using rule 25 (variable_declaration -> VAR IDENTIFIER .)


state 17

    (23) variable_value_change -> IDENTIFIER EQUAL . calculate
    (26) calculate -> . calculate PLUS calculate
    (27) calculate -> . calculate MINUS calculate
    (28) calculate -> . MINUS calculate
    (29) calculate -> . calculate MUL calculate
    (30) calculate -> . calculate DIV calculate
    (31) calculate -> . INT
    (32) calculate -> . FLOAT
    (33) calculate -> . STRING
    (34) calculate -> . IDENTIFIER
    (35) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 25

state 18

    (14) if_statement -> if_statement_head if_statement_body .

    VAR             reduce using rule 14 (if_statement -> if_statement_head if_statement_body .)
    IDENTIFIER      reduce using rule 14 (if_statement -> if_statement_head if_statement_body .)
    IF              reduce using rule 14 (if_statement -> if_statement_head if_statement_body .)
    $end            reduce using rule 14 (if_statement -> if_statement_head if_statement_body .)
    RMB             reduce using rule 14 (if_statement -> if_statement_head if_statement_body .)


state 19

    (16) if_statement_body -> LMB . expression RMB
    (2) expression -> . expression variable_declaration SEMI
    (3) expression -> . expression variable_value_change SEMI
    (4) expression -> . expression if_statement
    (5) expression -> . variable_declaration SEMI
    (6) expression -> . variable_value_change SEMI
    (7) expression -> . if_statement
    (8) expression -> . empty
    (24) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (25) variable_declaration -> . VAR IDENTIFIER
    (23) variable_value_change -> . IDENTIFIER EQUAL calculate
    (14) if_statement -> . if_statement_head if_statement_body
    (36) empty -> .
    (15) if_statement_head -> . IF LSB condition RSB

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    VAR             shift and go to state 7
    IDENTIFIER      shift and go to state 8
    RMB             reduce using rule 36 (empty -> .)
    IF              shift and go to state 10

  ! VAR             [ reduce using rule 36 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 36 (empty -> .) ]
  ! IF              [ reduce using rule 36 (empty -> .) ]

    expression                     shift and go to state 31
    variable_declaration           shift and go to state 3
    variable_value_change          shift and go to state 4
    if_statement                   shift and go to state 5
    empty                          shift and go to state 6
    if_statement_head              shift and go to state 9

state 20

    (15) if_statement_head -> IF LSB . condition RSB
    (17) condition -> . condition LB calculate
    (18) condition -> . condition RB calculate
    (19) condition -> . condition LB EQUAL calculate
    (20) condition -> . condition RB EQUAL calculate
    (21) condition -> . condition EQUAL calculate
    (22) condition -> . calculate
    (26) calculate -> . calculate PLUS calculate
    (27) calculate -> . calculate MINUS calculate
    (28) calculate -> . MINUS calculate
    (29) calculate -> . calculate MUL calculate
    (30) calculate -> . calculate DIV calculate
    (31) calculate -> . INT
    (32) calculate -> . FLOAT
    (33) calculate -> . STRING
    (34) calculate -> . IDENTIFIER
    (35) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    condition                      shift and go to state 32
    calculate                      shift and go to state 33

state 21

    (2) expression -> expression variable_declaration SEMI .

    VAR             reduce using rule 2 (expression -> expression variable_declaration SEMI .)
    IDENTIFIER      reduce using rule 2 (expression -> expression variable_declaration SEMI .)
    IF              reduce using rule 2 (expression -> expression variable_declaration SEMI .)
    $end            reduce using rule 2 (expression -> expression variable_declaration SEMI .)
    RMB             reduce using rule 2 (expression -> expression variable_declaration SEMI .)


state 22

    (3) expression -> expression variable_value_change SEMI .

    VAR             reduce using rule 3 (expression -> expression variable_value_change SEMI .)
    IDENTIFIER      reduce using rule 3 (expression -> expression variable_value_change SEMI .)
    IF              reduce using rule 3 (expression -> expression variable_value_change SEMI .)
    $end            reduce using rule 3 (expression -> expression variable_value_change SEMI .)
    RMB             reduce using rule 3 (expression -> expression variable_value_change SEMI .)


state 23

    (24) variable_declaration -> VAR IDENTIFIER EQUAL . calculate
    (26) calculate -> . calculate PLUS calculate
    (27) calculate -> . calculate MINUS calculate
    (28) calculate -> . MINUS calculate
    (29) calculate -> . calculate MUL calculate
    (30) calculate -> . calculate DIV calculate
    (31) calculate -> . INT
    (32) calculate -> . FLOAT
    (33) calculate -> . STRING
    (34) calculate -> . IDENTIFIER
    (35) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 34

state 24

    (34) calculate -> IDENTIFIER .

    PLUS            reduce using rule 34 (calculate -> IDENTIFIER .)
    MINUS           reduce using rule 34 (calculate -> IDENTIFIER .)
    MUL             reduce using rule 34 (calculate -> IDENTIFIER .)
    DIV             reduce using rule 34 (calculate -> IDENTIFIER .)
    SEMI            reduce using rule 34 (calculate -> IDENTIFIER .)
    RSB             reduce using rule 34 (calculate -> IDENTIFIER .)
    LB              reduce using rule 34 (calculate -> IDENTIFIER .)
    RB              reduce using rule 34 (calculate -> IDENTIFIER .)
    EQUAL           reduce using rule 34 (calculate -> IDENTIFIER .)


state 25

    (23) variable_value_change -> IDENTIFIER EQUAL calculate .
    (26) calculate -> calculate . PLUS calculate
    (27) calculate -> calculate . MINUS calculate
    (29) calculate -> calculate . MUL calculate
    (30) calculate -> calculate . DIV calculate

    SEMI            reduce using rule 23 (variable_value_change -> IDENTIFIER EQUAL calculate .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MUL             shift and go to state 37
    DIV             shift and go to state 38


state 26

    (28) calculate -> MINUS . calculate
    (26) calculate -> . calculate PLUS calculate
    (27) calculate -> . calculate MINUS calculate
    (28) calculate -> . MINUS calculate
    (29) calculate -> . calculate MUL calculate
    (30) calculate -> . calculate DIV calculate
    (31) calculate -> . INT
    (32) calculate -> . FLOAT
    (33) calculate -> . STRING
    (34) calculate -> . IDENTIFIER
    (35) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 39

state 27

    (31) calculate -> INT .

    PLUS            reduce using rule 31 (calculate -> INT .)
    MINUS           reduce using rule 31 (calculate -> INT .)
    MUL             reduce using rule 31 (calculate -> INT .)
    DIV             reduce using rule 31 (calculate -> INT .)
    SEMI            reduce using rule 31 (calculate -> INT .)
    RSB             reduce using rule 31 (calculate -> INT .)
    LB              reduce using rule 31 (calculate -> INT .)
    RB              reduce using rule 31 (calculate -> INT .)
    EQUAL           reduce using rule 31 (calculate -> INT .)


state 28

    (32) calculate -> FLOAT .

    PLUS            reduce using rule 32 (calculate -> FLOAT .)
    MINUS           reduce using rule 32 (calculate -> FLOAT .)
    MUL             reduce using rule 32 (calculate -> FLOAT .)
    DIV             reduce using rule 32 (calculate -> FLOAT .)
    SEMI            reduce using rule 32 (calculate -> FLOAT .)
    RSB             reduce using rule 32 (calculate -> FLOAT .)
    LB              reduce using rule 32 (calculate -> FLOAT .)
    RB              reduce using rule 32 (calculate -> FLOAT .)
    EQUAL           reduce using rule 32 (calculate -> FLOAT .)


state 29

    (33) calculate -> STRING .

    PLUS            reduce using rule 33 (calculate -> STRING .)
    MINUS           reduce using rule 33 (calculate -> STRING .)
    MUL             reduce using rule 33 (calculate -> STRING .)
    DIV             reduce using rule 33 (calculate -> STRING .)
    SEMI            reduce using rule 33 (calculate -> STRING .)
    RSB             reduce using rule 33 (calculate -> STRING .)
    LB              reduce using rule 33 (calculate -> STRING .)
    RB              reduce using rule 33 (calculate -> STRING .)
    EQUAL           reduce using rule 33 (calculate -> STRING .)


state 30

    (35) calculate -> LSB . calculate RSB
    (26) calculate -> . calculate PLUS calculate
    (27) calculate -> . calculate MINUS calculate
    (28) calculate -> . MINUS calculate
    (29) calculate -> . calculate MUL calculate
    (30) calculate -> . calculate DIV calculate
    (31) calculate -> . INT
    (32) calculate -> . FLOAT
    (33) calculate -> . STRING
    (34) calculate -> . IDENTIFIER
    (35) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 40

state 31

    (16) if_statement_body -> LMB expression . RMB
    (2) expression -> expression . variable_declaration SEMI
    (3) expression -> expression . variable_value_change SEMI
    (4) expression -> expression . if_statement
    (24) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (25) variable_declaration -> . VAR IDENTIFIER
    (23) variable_value_change -> . IDENTIFIER EQUAL calculate
    (14) if_statement -> . if_statement_head if_statement_body
    (15) if_statement_head -> . IF LSB condition RSB

    RMB             shift and go to state 41
    VAR             shift and go to state 7
    IDENTIFIER      shift and go to state 8
    IF              shift and go to state 10

    variable_declaration           shift and go to state 11
    variable_value_change          shift and go to state 12
    if_statement                   shift and go to state 13
    if_statement_head              shift and go to state 9

state 32

    (15) if_statement_head -> IF LSB condition . RSB
    (17) condition -> condition . LB calculate
    (18) condition -> condition . RB calculate
    (19) condition -> condition . LB EQUAL calculate
    (20) condition -> condition . RB EQUAL calculate
    (21) condition -> condition . EQUAL calculate

    RSB             shift and go to state 42
    LB              shift and go to state 43
    RB              shift and go to state 44
    EQUAL           shift and go to state 45


state 33

    (22) condition -> calculate .
    (26) calculate -> calculate . PLUS calculate
    (27) calculate -> calculate . MINUS calculate
    (29) calculate -> calculate . MUL calculate
    (30) calculate -> calculate . DIV calculate

    RSB             reduce using rule 22 (condition -> calculate .)
    LB              reduce using rule 22 (condition -> calculate .)
    RB              reduce using rule 22 (condition -> calculate .)
    EQUAL           reduce using rule 22 (condition -> calculate .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MUL             shift and go to state 37
    DIV             shift and go to state 38


state 34

    (24) variable_declaration -> VAR IDENTIFIER EQUAL calculate .
    (26) calculate -> calculate . PLUS calculate
    (27) calculate -> calculate . MINUS calculate
    (29) calculate -> calculate . MUL calculate
    (30) calculate -> calculate . DIV calculate

    SEMI            reduce using rule 24 (variable_declaration -> VAR IDENTIFIER EQUAL calculate .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MUL             shift and go to state 37
    DIV             shift and go to state 38


state 35

    (26) calculate -> calculate PLUS . calculate
    (26) calculate -> . calculate PLUS calculate
    (27) calculate -> . calculate MINUS calculate
    (28) calculate -> . MINUS calculate
    (29) calculate -> . calculate MUL calculate
    (30) calculate -> . calculate DIV calculate
    (31) calculate -> . INT
    (32) calculate -> . FLOAT
    (33) calculate -> . STRING
    (34) calculate -> . IDENTIFIER
    (35) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 46

state 36

    (27) calculate -> calculate MINUS . calculate
    (26) calculate -> . calculate PLUS calculate
    (27) calculate -> . calculate MINUS calculate
    (28) calculate -> . MINUS calculate
    (29) calculate -> . calculate MUL calculate
    (30) calculate -> . calculate DIV calculate
    (31) calculate -> . INT
    (32) calculate -> . FLOAT
    (33) calculate -> . STRING
    (34) calculate -> . IDENTIFIER
    (35) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 47

state 37

    (29) calculate -> calculate MUL . calculate
    (26) calculate -> . calculate PLUS calculate
    (27) calculate -> . calculate MINUS calculate
    (28) calculate -> . MINUS calculate
    (29) calculate -> . calculate MUL calculate
    (30) calculate -> . calculate DIV calculate
    (31) calculate -> . INT
    (32) calculate -> . FLOAT
    (33) calculate -> . STRING
    (34) calculate -> . IDENTIFIER
    (35) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 48

state 38

    (30) calculate -> calculate DIV . calculate
    (26) calculate -> . calculate PLUS calculate
    (27) calculate -> . calculate MINUS calculate
    (28) calculate -> . MINUS calculate
    (29) calculate -> . calculate MUL calculate
    (30) calculate -> . calculate DIV calculate
    (31) calculate -> . INT
    (32) calculate -> . FLOAT
    (33) calculate -> . STRING
    (34) calculate -> . IDENTIFIER
    (35) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 49

state 39

    (28) calculate -> MINUS calculate .
    (26) calculate -> calculate . PLUS calculate
    (27) calculate -> calculate . MINUS calculate
    (29) calculate -> calculate . MUL calculate
    (30) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 28 (calculate -> MINUS calculate .)
    MINUS           reduce using rule 28 (calculate -> MINUS calculate .)
    MUL             reduce using rule 28 (calculate -> MINUS calculate .)
    DIV             reduce using rule 28 (calculate -> MINUS calculate .)
    SEMI            reduce using rule 28 (calculate -> MINUS calculate .)
    RSB             reduce using rule 28 (calculate -> MINUS calculate .)
    LB              reduce using rule 28 (calculate -> MINUS calculate .)
    RB              reduce using rule 28 (calculate -> MINUS calculate .)
    EQUAL           reduce using rule 28 (calculate -> MINUS calculate .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MUL             [ shift and go to state 37 ]
  ! DIV             [ shift and go to state 38 ]


state 40

    (35) calculate -> LSB calculate . RSB
    (26) calculate -> calculate . PLUS calculate
    (27) calculate -> calculate . MINUS calculate
    (29) calculate -> calculate . MUL calculate
    (30) calculate -> calculate . DIV calculate

    RSB             shift and go to state 50
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MUL             shift and go to state 37
    DIV             shift and go to state 38


state 41

    (16) if_statement_body -> LMB expression RMB .

    VAR             reduce using rule 16 (if_statement_body -> LMB expression RMB .)
    IDENTIFIER      reduce using rule 16 (if_statement_body -> LMB expression RMB .)
    IF              reduce using rule 16 (if_statement_body -> LMB expression RMB .)
    $end            reduce using rule 16 (if_statement_body -> LMB expression RMB .)
    RMB             reduce using rule 16 (if_statement_body -> LMB expression RMB .)


state 42

    (15) if_statement_head -> IF LSB condition RSB .

    LMB             reduce using rule 15 (if_statement_head -> IF LSB condition RSB .)


state 43

    (17) condition -> condition LB . calculate
    (19) condition -> condition LB . EQUAL calculate
    (26) calculate -> . calculate PLUS calculate
    (27) calculate -> . calculate MINUS calculate
    (28) calculate -> . MINUS calculate
    (29) calculate -> . calculate MUL calculate
    (30) calculate -> . calculate DIV calculate
    (31) calculate -> . INT
    (32) calculate -> . FLOAT
    (33) calculate -> . STRING
    (34) calculate -> . IDENTIFIER
    (35) calculate -> . LSB calculate RSB

    EQUAL           shift and go to state 52
    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 51

state 44

    (18) condition -> condition RB . calculate
    (20) condition -> condition RB . EQUAL calculate
    (26) calculate -> . calculate PLUS calculate
    (27) calculate -> . calculate MINUS calculate
    (28) calculate -> . MINUS calculate
    (29) calculate -> . calculate MUL calculate
    (30) calculate -> . calculate DIV calculate
    (31) calculate -> . INT
    (32) calculate -> . FLOAT
    (33) calculate -> . STRING
    (34) calculate -> . IDENTIFIER
    (35) calculate -> . LSB calculate RSB

    EQUAL           shift and go to state 54
    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 53

state 45

    (21) condition -> condition EQUAL . calculate
    (26) calculate -> . calculate PLUS calculate
    (27) calculate -> . calculate MINUS calculate
    (28) calculate -> . MINUS calculate
    (29) calculate -> . calculate MUL calculate
    (30) calculate -> . calculate DIV calculate
    (31) calculate -> . INT
    (32) calculate -> . FLOAT
    (33) calculate -> . STRING
    (34) calculate -> . IDENTIFIER
    (35) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 55

state 46

    (26) calculate -> calculate PLUS calculate .
    (26) calculate -> calculate . PLUS calculate
    (27) calculate -> calculate . MINUS calculate
    (29) calculate -> calculate . MUL calculate
    (30) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 26 (calculate -> calculate PLUS calculate .)
    MINUS           reduce using rule 26 (calculate -> calculate PLUS calculate .)
    SEMI            reduce using rule 26 (calculate -> calculate PLUS calculate .)
    RSB             reduce using rule 26 (calculate -> calculate PLUS calculate .)
    LB              reduce using rule 26 (calculate -> calculate PLUS calculate .)
    RB              reduce using rule 26 (calculate -> calculate PLUS calculate .)
    EQUAL           reduce using rule 26 (calculate -> calculate PLUS calculate .)
    MUL             shift and go to state 37
    DIV             shift and go to state 38

  ! MUL             [ reduce using rule 26 (calculate -> calculate PLUS calculate .) ]
  ! DIV             [ reduce using rule 26 (calculate -> calculate PLUS calculate .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]


state 47

    (27) calculate -> calculate MINUS calculate .
    (26) calculate -> calculate . PLUS calculate
    (27) calculate -> calculate . MINUS calculate
    (29) calculate -> calculate . MUL calculate
    (30) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 27 (calculate -> calculate MINUS calculate .)
    MINUS           reduce using rule 27 (calculate -> calculate MINUS calculate .)
    SEMI            reduce using rule 27 (calculate -> calculate MINUS calculate .)
    RSB             reduce using rule 27 (calculate -> calculate MINUS calculate .)
    LB              reduce using rule 27 (calculate -> calculate MINUS calculate .)
    RB              reduce using rule 27 (calculate -> calculate MINUS calculate .)
    EQUAL           reduce using rule 27 (calculate -> calculate MINUS calculate .)
    MUL             shift and go to state 37
    DIV             shift and go to state 38

  ! MUL             [ reduce using rule 27 (calculate -> calculate MINUS calculate .) ]
  ! DIV             [ reduce using rule 27 (calculate -> calculate MINUS calculate .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]


state 48

    (29) calculate -> calculate MUL calculate .
    (26) calculate -> calculate . PLUS calculate
    (27) calculate -> calculate . MINUS calculate
    (29) calculate -> calculate . MUL calculate
    (30) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 29 (calculate -> calculate MUL calculate .)
    MINUS           reduce using rule 29 (calculate -> calculate MUL calculate .)
    MUL             reduce using rule 29 (calculate -> calculate MUL calculate .)
    DIV             reduce using rule 29 (calculate -> calculate MUL calculate .)
    SEMI            reduce using rule 29 (calculate -> calculate MUL calculate .)
    RSB             reduce using rule 29 (calculate -> calculate MUL calculate .)
    LB              reduce using rule 29 (calculate -> calculate MUL calculate .)
    RB              reduce using rule 29 (calculate -> calculate MUL calculate .)
    EQUAL           reduce using rule 29 (calculate -> calculate MUL calculate .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MUL             [ shift and go to state 37 ]
  ! DIV             [ shift and go to state 38 ]


state 49

    (30) calculate -> calculate DIV calculate .
    (26) calculate -> calculate . PLUS calculate
    (27) calculate -> calculate . MINUS calculate
    (29) calculate -> calculate . MUL calculate
    (30) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 30 (calculate -> calculate DIV calculate .)
    MINUS           reduce using rule 30 (calculate -> calculate DIV calculate .)
    MUL             reduce using rule 30 (calculate -> calculate DIV calculate .)
    DIV             reduce using rule 30 (calculate -> calculate DIV calculate .)
    SEMI            reduce using rule 30 (calculate -> calculate DIV calculate .)
    RSB             reduce using rule 30 (calculate -> calculate DIV calculate .)
    LB              reduce using rule 30 (calculate -> calculate DIV calculate .)
    RB              reduce using rule 30 (calculate -> calculate DIV calculate .)
    EQUAL           reduce using rule 30 (calculate -> calculate DIV calculate .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MUL             [ shift and go to state 37 ]
  ! DIV             [ shift and go to state 38 ]


state 50

    (35) calculate -> LSB calculate RSB .

    PLUS            reduce using rule 35 (calculate -> LSB calculate RSB .)
    MINUS           reduce using rule 35 (calculate -> LSB calculate RSB .)
    MUL             reduce using rule 35 (calculate -> LSB calculate RSB .)
    DIV             reduce using rule 35 (calculate -> LSB calculate RSB .)
    SEMI            reduce using rule 35 (calculate -> LSB calculate RSB .)
    RSB             reduce using rule 35 (calculate -> LSB calculate RSB .)
    LB              reduce using rule 35 (calculate -> LSB calculate RSB .)
    RB              reduce using rule 35 (calculate -> LSB calculate RSB .)
    EQUAL           reduce using rule 35 (calculate -> LSB calculate RSB .)


state 51

    (17) condition -> condition LB calculate .
    (26) calculate -> calculate . PLUS calculate
    (27) calculate -> calculate . MINUS calculate
    (29) calculate -> calculate . MUL calculate
    (30) calculate -> calculate . DIV calculate

    RSB             reduce using rule 17 (condition -> condition LB calculate .)
    LB              reduce using rule 17 (condition -> condition LB calculate .)
    RB              reduce using rule 17 (condition -> condition LB calculate .)
    EQUAL           reduce using rule 17 (condition -> condition LB calculate .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MUL             shift and go to state 37
    DIV             shift and go to state 38


state 52

    (19) condition -> condition LB EQUAL . calculate
    (26) calculate -> . calculate PLUS calculate
    (27) calculate -> . calculate MINUS calculate
    (28) calculate -> . MINUS calculate
    (29) calculate -> . calculate MUL calculate
    (30) calculate -> . calculate DIV calculate
    (31) calculate -> . INT
    (32) calculate -> . FLOAT
    (33) calculate -> . STRING
    (34) calculate -> . IDENTIFIER
    (35) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 56

state 53

    (18) condition -> condition RB calculate .
    (26) calculate -> calculate . PLUS calculate
    (27) calculate -> calculate . MINUS calculate
    (29) calculate -> calculate . MUL calculate
    (30) calculate -> calculate . DIV calculate

    RSB             reduce using rule 18 (condition -> condition RB calculate .)
    LB              reduce using rule 18 (condition -> condition RB calculate .)
    RB              reduce using rule 18 (condition -> condition RB calculate .)
    EQUAL           reduce using rule 18 (condition -> condition RB calculate .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MUL             shift and go to state 37
    DIV             shift and go to state 38


state 54

    (20) condition -> condition RB EQUAL . calculate
    (26) calculate -> . calculate PLUS calculate
    (27) calculate -> . calculate MINUS calculate
    (28) calculate -> . MINUS calculate
    (29) calculate -> . calculate MUL calculate
    (30) calculate -> . calculate DIV calculate
    (31) calculate -> . INT
    (32) calculate -> . FLOAT
    (33) calculate -> . STRING
    (34) calculate -> . IDENTIFIER
    (35) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 26
    INT             shift and go to state 27
    FLOAT           shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30

    calculate                      shift and go to state 57

state 55

    (21) condition -> condition EQUAL calculate .
    (26) calculate -> calculate . PLUS calculate
    (27) calculate -> calculate . MINUS calculate
    (29) calculate -> calculate . MUL calculate
    (30) calculate -> calculate . DIV calculate

    RSB             reduce using rule 21 (condition -> condition EQUAL calculate .)
    LB              reduce using rule 21 (condition -> condition EQUAL calculate .)
    RB              reduce using rule 21 (condition -> condition EQUAL calculate .)
    EQUAL           reduce using rule 21 (condition -> condition EQUAL calculate .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MUL             shift and go to state 37
    DIV             shift and go to state 38


state 56

    (19) condition -> condition LB EQUAL calculate .
    (26) calculate -> calculate . PLUS calculate
    (27) calculate -> calculate . MINUS calculate
    (29) calculate -> calculate . MUL calculate
    (30) calculate -> calculate . DIV calculate

    RSB             reduce using rule 19 (condition -> condition LB EQUAL calculate .)
    LB              reduce using rule 19 (condition -> condition LB EQUAL calculate .)
    RB              reduce using rule 19 (condition -> condition LB EQUAL calculate .)
    EQUAL           reduce using rule 19 (condition -> condition LB EQUAL calculate .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MUL             shift and go to state 37
    DIV             shift and go to state 38


state 57

    (20) condition -> condition RB EQUAL calculate .
    (26) calculate -> calculate . PLUS calculate
    (27) calculate -> calculate . MINUS calculate
    (29) calculate -> calculate . MUL calculate
    (30) calculate -> calculate . DIV calculate

    RSB             reduce using rule 20 (condition -> condition RB EQUAL calculate .)
    LB              reduce using rule 20 (condition -> condition RB EQUAL calculate .)
    RB              reduce using rule 20 (condition -> condition RB EQUAL calculate .)
    EQUAL           reduce using rule 20 (condition -> condition RB EQUAL calculate .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MUL             shift and go to state 37
    DIV             shift and go to state 38

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 0 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for VAR in state 19 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 19 resolved as shift
WARNING: shift/reduce conflict for IF in state 19 resolved as shift
