Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    ELSE

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression variable_declaration SEMI
Rule 2     expression -> expression variable_value_change SEMI
Rule 3     expression -> expression if_statement
Rule 4     expression -> variable_declaration SEMI
Rule 5     expression -> variable_value_change SEMI
Rule 6     expression -> if_statement
Rule 7     expression -> empty
Rule 8     if_statement -> if_statement_head if_statement_body
Rule 9     if_statement_head -> IF LSB condition RSB
Rule 10    if_statement_body -> LMB expression RMB
Rule 11    condition -> condition LB calculate
Rule 12    condition -> condition RB calculate
Rule 13    condition -> condition LB EQUAL calculate
Rule 14    condition -> condition RB EQUAL calculate
Rule 15    condition -> condition EQUAL calculate
Rule 16    condition -> calculate
Rule 17    variable_value_change -> IDENTIFIER EQUAL calculate
Rule 18    variable_declaration -> VAR IDENTIFIER EQUAL calculate
Rule 19    variable_declaration -> VAR IDENTIFIER
Rule 20    calculate -> calculate PLUS calculate
Rule 21    calculate -> calculate MINUS calculate
Rule 22    calculate -> MINUS calculate
Rule 23    calculate -> calculate MUL calculate
Rule 24    calculate -> calculate DIV calculate
Rule 25    calculate -> INT
Rule 26    calculate -> FLOAT
Rule 27    calculate -> STRING
Rule 28    calculate -> IDENTIFIER
Rule 29    calculate -> LSB calculate RSB
Rule 30    empty -> <empty>

Terminals, with rules where they appear

COLON                : 
DIV                  : 24
ELSE                 : 
EQUAL                : 13 14 15 17 18
FLOAT                : 26
IDENTIFIER           : 17 18 19 28
IF                   : 9
INT                  : 25
LB                   : 11 13
LMB                  : 10
LSB                  : 9 29
MINUS                : 21 22
MUL                  : 23
PLUS                 : 20
RB                   : 12 14
RMB                  : 10
RSB                  : 9 29
SEMI                 : 1 2 4 5
STRING               : 27
VAR                  : 18 19
error                : 

Nonterminals, with rules where they appear

calculate            : 11 12 13 14 15 16 17 18 20 20 21 21 22 23 23 24 24 29
condition            : 9 11 12 13 14 15
empty                : 7
expression           : 1 2 3 10 0
if_statement         : 3 6
if_statement_body    : 8
if_statement_head    : 8
variable_declaration : 1 4
variable_value_change : 2 5

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression variable_declaration SEMI
    (2) expression -> . expression variable_value_change SEMI
    (3) expression -> . expression if_statement
    (4) expression -> . variable_declaration SEMI
    (5) expression -> . variable_value_change SEMI
    (6) expression -> . if_statement
    (7) expression -> . empty
    (18) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (19) variable_declaration -> . VAR IDENTIFIER
    (17) variable_value_change -> . IDENTIFIER EQUAL calculate
    (8) if_statement -> . if_statement_head if_statement_body
    (30) empty -> .
    (9) if_statement_head -> . IF LSB condition RSB

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    VAR             shift and go to state 6
    IDENTIFIER      shift and go to state 7
    $end            reduce using rule 30 (empty -> .)
    IF              shift and go to state 9

  ! VAR             [ reduce using rule 30 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 30 (empty -> .) ]
  ! IF              [ reduce using rule 30 (empty -> .) ]

    expression                     shift and go to state 1
    variable_declaration           shift and go to state 2
    variable_value_change          shift and go to state 3
    if_statement                   shift and go to state 4
    empty                          shift and go to state 5
    if_statement_head              shift and go to state 8

state 1

    (0) S' -> expression .
    (1) expression -> expression . variable_declaration SEMI
    (2) expression -> expression . variable_value_change SEMI
    (3) expression -> expression . if_statement
    (18) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (19) variable_declaration -> . VAR IDENTIFIER
    (17) variable_value_change -> . IDENTIFIER EQUAL calculate
    (8) if_statement -> . if_statement_head if_statement_body
    (9) if_statement_head -> . IF LSB condition RSB

    VAR             shift and go to state 6
    IDENTIFIER      shift and go to state 7
    IF              shift and go to state 9

    variable_declaration           shift and go to state 10
    variable_value_change          shift and go to state 11
    if_statement                   shift and go to state 12
    if_statement_head              shift and go to state 8

state 2

    (4) expression -> variable_declaration . SEMI

    SEMI            shift and go to state 13


state 3

    (5) expression -> variable_value_change . SEMI

    SEMI            shift and go to state 14


state 4

    (6) expression -> if_statement .

    VAR             reduce using rule 6 (expression -> if_statement .)
    IDENTIFIER      reduce using rule 6 (expression -> if_statement .)
    IF              reduce using rule 6 (expression -> if_statement .)
    $end            reduce using rule 6 (expression -> if_statement .)
    RMB             reduce using rule 6 (expression -> if_statement .)


state 5

    (7) expression -> empty .

    VAR             reduce using rule 7 (expression -> empty .)
    IDENTIFIER      reduce using rule 7 (expression -> empty .)
    IF              reduce using rule 7 (expression -> empty .)
    $end            reduce using rule 7 (expression -> empty .)
    RMB             reduce using rule 7 (expression -> empty .)


state 6

    (18) variable_declaration -> VAR . IDENTIFIER EQUAL calculate
    (19) variable_declaration -> VAR . IDENTIFIER

    IDENTIFIER      shift and go to state 15


state 7

    (17) variable_value_change -> IDENTIFIER . EQUAL calculate

    EQUAL           shift and go to state 16


state 8

    (8) if_statement -> if_statement_head . if_statement_body
    (10) if_statement_body -> . LMB expression RMB

    LMB             shift and go to state 18

    if_statement_body              shift and go to state 17

state 9

    (9) if_statement_head -> IF . LSB condition RSB

    LSB             shift and go to state 19


state 10

    (1) expression -> expression variable_declaration . SEMI

    SEMI            shift and go to state 20


state 11

    (2) expression -> expression variable_value_change . SEMI

    SEMI            shift and go to state 21


state 12

    (3) expression -> expression if_statement .

    VAR             reduce using rule 3 (expression -> expression if_statement .)
    IDENTIFIER      reduce using rule 3 (expression -> expression if_statement .)
    IF              reduce using rule 3 (expression -> expression if_statement .)
    $end            reduce using rule 3 (expression -> expression if_statement .)
    RMB             reduce using rule 3 (expression -> expression if_statement .)


state 13

    (4) expression -> variable_declaration SEMI .

    VAR             reduce using rule 4 (expression -> variable_declaration SEMI .)
    IDENTIFIER      reduce using rule 4 (expression -> variable_declaration SEMI .)
    IF              reduce using rule 4 (expression -> variable_declaration SEMI .)
    $end            reduce using rule 4 (expression -> variable_declaration SEMI .)
    RMB             reduce using rule 4 (expression -> variable_declaration SEMI .)


state 14

    (5) expression -> variable_value_change SEMI .

    VAR             reduce using rule 5 (expression -> variable_value_change SEMI .)
    IDENTIFIER      reduce using rule 5 (expression -> variable_value_change SEMI .)
    IF              reduce using rule 5 (expression -> variable_value_change SEMI .)
    $end            reduce using rule 5 (expression -> variable_value_change SEMI .)
    RMB             reduce using rule 5 (expression -> variable_value_change SEMI .)


state 15

    (18) variable_declaration -> VAR IDENTIFIER . EQUAL calculate
    (19) variable_declaration -> VAR IDENTIFIER .

    EQUAL           shift and go to state 22
    SEMI            reduce using rule 19 (variable_declaration -> VAR IDENTIFIER .)


state 16

    (17) variable_value_change -> IDENTIFIER EQUAL . calculate
    (20) calculate -> . calculate PLUS calculate
    (21) calculate -> . calculate MINUS calculate
    (22) calculate -> . MINUS calculate
    (23) calculate -> . calculate MUL calculate
    (24) calculate -> . calculate DIV calculate
    (25) calculate -> . INT
    (26) calculate -> . FLOAT
    (27) calculate -> . STRING
    (28) calculate -> . IDENTIFIER
    (29) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENTIFIER      shift and go to state 23
    LSB             shift and go to state 29

    calculate                      shift and go to state 24

state 17

    (8) if_statement -> if_statement_head if_statement_body .

    VAR             reduce using rule 8 (if_statement -> if_statement_head if_statement_body .)
    IDENTIFIER      reduce using rule 8 (if_statement -> if_statement_head if_statement_body .)
    IF              reduce using rule 8 (if_statement -> if_statement_head if_statement_body .)
    $end            reduce using rule 8 (if_statement -> if_statement_head if_statement_body .)
    RMB             reduce using rule 8 (if_statement -> if_statement_head if_statement_body .)


state 18

    (10) if_statement_body -> LMB . expression RMB
    (1) expression -> . expression variable_declaration SEMI
    (2) expression -> . expression variable_value_change SEMI
    (3) expression -> . expression if_statement
    (4) expression -> . variable_declaration SEMI
    (5) expression -> . variable_value_change SEMI
    (6) expression -> . if_statement
    (7) expression -> . empty
    (18) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (19) variable_declaration -> . VAR IDENTIFIER
    (17) variable_value_change -> . IDENTIFIER EQUAL calculate
    (8) if_statement -> . if_statement_head if_statement_body
    (30) empty -> .
    (9) if_statement_head -> . IF LSB condition RSB

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    VAR             shift and go to state 6
    IDENTIFIER      shift and go to state 7
    RMB             reduce using rule 30 (empty -> .)
    IF              shift and go to state 9

  ! VAR             [ reduce using rule 30 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 30 (empty -> .) ]
  ! IF              [ reduce using rule 30 (empty -> .) ]

    expression                     shift and go to state 30
    variable_declaration           shift and go to state 2
    variable_value_change          shift and go to state 3
    if_statement                   shift and go to state 4
    empty                          shift and go to state 5
    if_statement_head              shift and go to state 8

state 19

    (9) if_statement_head -> IF LSB . condition RSB
    (11) condition -> . condition LB calculate
    (12) condition -> . condition RB calculate
    (13) condition -> . condition LB EQUAL calculate
    (14) condition -> . condition RB EQUAL calculate
    (15) condition -> . condition EQUAL calculate
    (16) condition -> . calculate
    (20) calculate -> . calculate PLUS calculate
    (21) calculate -> . calculate MINUS calculate
    (22) calculate -> . MINUS calculate
    (23) calculate -> . calculate MUL calculate
    (24) calculate -> . calculate DIV calculate
    (25) calculate -> . INT
    (26) calculate -> . FLOAT
    (27) calculate -> . STRING
    (28) calculate -> . IDENTIFIER
    (29) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENTIFIER      shift and go to state 23
    LSB             shift and go to state 29

    condition                      shift and go to state 31
    calculate                      shift and go to state 32

state 20

    (1) expression -> expression variable_declaration SEMI .

    VAR             reduce using rule 1 (expression -> expression variable_declaration SEMI .)
    IDENTIFIER      reduce using rule 1 (expression -> expression variable_declaration SEMI .)
    IF              reduce using rule 1 (expression -> expression variable_declaration SEMI .)
    $end            reduce using rule 1 (expression -> expression variable_declaration SEMI .)
    RMB             reduce using rule 1 (expression -> expression variable_declaration SEMI .)


state 21

    (2) expression -> expression variable_value_change SEMI .

    VAR             reduce using rule 2 (expression -> expression variable_value_change SEMI .)
    IDENTIFIER      reduce using rule 2 (expression -> expression variable_value_change SEMI .)
    IF              reduce using rule 2 (expression -> expression variable_value_change SEMI .)
    $end            reduce using rule 2 (expression -> expression variable_value_change SEMI .)
    RMB             reduce using rule 2 (expression -> expression variable_value_change SEMI .)


state 22

    (18) variable_declaration -> VAR IDENTIFIER EQUAL . calculate
    (20) calculate -> . calculate PLUS calculate
    (21) calculate -> . calculate MINUS calculate
    (22) calculate -> . MINUS calculate
    (23) calculate -> . calculate MUL calculate
    (24) calculate -> . calculate DIV calculate
    (25) calculate -> . INT
    (26) calculate -> . FLOAT
    (27) calculate -> . STRING
    (28) calculate -> . IDENTIFIER
    (29) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENTIFIER      shift and go to state 23
    LSB             shift and go to state 29

    calculate                      shift and go to state 33

state 23

    (28) calculate -> IDENTIFIER .

    PLUS            reduce using rule 28 (calculate -> IDENTIFIER .)
    MINUS           reduce using rule 28 (calculate -> IDENTIFIER .)
    MUL             reduce using rule 28 (calculate -> IDENTIFIER .)
    DIV             reduce using rule 28 (calculate -> IDENTIFIER .)
    SEMI            reduce using rule 28 (calculate -> IDENTIFIER .)
    RSB             reduce using rule 28 (calculate -> IDENTIFIER .)
    LB              reduce using rule 28 (calculate -> IDENTIFIER .)
    RB              reduce using rule 28 (calculate -> IDENTIFIER .)
    EQUAL           reduce using rule 28 (calculate -> IDENTIFIER .)


state 24

    (17) variable_value_change -> IDENTIFIER EQUAL calculate .
    (20) calculate -> calculate . PLUS calculate
    (21) calculate -> calculate . MINUS calculate
    (23) calculate -> calculate . MUL calculate
    (24) calculate -> calculate . DIV calculate

    SEMI            reduce using rule 17 (variable_value_change -> IDENTIFIER EQUAL calculate .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37


state 25

    (22) calculate -> MINUS . calculate
    (20) calculate -> . calculate PLUS calculate
    (21) calculate -> . calculate MINUS calculate
    (22) calculate -> . MINUS calculate
    (23) calculate -> . calculate MUL calculate
    (24) calculate -> . calculate DIV calculate
    (25) calculate -> . INT
    (26) calculate -> . FLOAT
    (27) calculate -> . STRING
    (28) calculate -> . IDENTIFIER
    (29) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENTIFIER      shift and go to state 23
    LSB             shift and go to state 29

    calculate                      shift and go to state 38

state 26

    (25) calculate -> INT .

    PLUS            reduce using rule 25 (calculate -> INT .)
    MINUS           reduce using rule 25 (calculate -> INT .)
    MUL             reduce using rule 25 (calculate -> INT .)
    DIV             reduce using rule 25 (calculate -> INT .)
    SEMI            reduce using rule 25 (calculate -> INT .)
    RSB             reduce using rule 25 (calculate -> INT .)
    LB              reduce using rule 25 (calculate -> INT .)
    RB              reduce using rule 25 (calculate -> INT .)
    EQUAL           reduce using rule 25 (calculate -> INT .)


state 27

    (26) calculate -> FLOAT .

    PLUS            reduce using rule 26 (calculate -> FLOAT .)
    MINUS           reduce using rule 26 (calculate -> FLOAT .)
    MUL             reduce using rule 26 (calculate -> FLOAT .)
    DIV             reduce using rule 26 (calculate -> FLOAT .)
    SEMI            reduce using rule 26 (calculate -> FLOAT .)
    RSB             reduce using rule 26 (calculate -> FLOAT .)
    LB              reduce using rule 26 (calculate -> FLOAT .)
    RB              reduce using rule 26 (calculate -> FLOAT .)
    EQUAL           reduce using rule 26 (calculate -> FLOAT .)


state 28

    (27) calculate -> STRING .

    PLUS            reduce using rule 27 (calculate -> STRING .)
    MINUS           reduce using rule 27 (calculate -> STRING .)
    MUL             reduce using rule 27 (calculate -> STRING .)
    DIV             reduce using rule 27 (calculate -> STRING .)
    SEMI            reduce using rule 27 (calculate -> STRING .)
    RSB             reduce using rule 27 (calculate -> STRING .)
    LB              reduce using rule 27 (calculate -> STRING .)
    RB              reduce using rule 27 (calculate -> STRING .)
    EQUAL           reduce using rule 27 (calculate -> STRING .)


state 29

    (29) calculate -> LSB . calculate RSB
    (20) calculate -> . calculate PLUS calculate
    (21) calculate -> . calculate MINUS calculate
    (22) calculate -> . MINUS calculate
    (23) calculate -> . calculate MUL calculate
    (24) calculate -> . calculate DIV calculate
    (25) calculate -> . INT
    (26) calculate -> . FLOAT
    (27) calculate -> . STRING
    (28) calculate -> . IDENTIFIER
    (29) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENTIFIER      shift and go to state 23
    LSB             shift and go to state 29

    calculate                      shift and go to state 39

state 30

    (10) if_statement_body -> LMB expression . RMB
    (1) expression -> expression . variable_declaration SEMI
    (2) expression -> expression . variable_value_change SEMI
    (3) expression -> expression . if_statement
    (18) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (19) variable_declaration -> . VAR IDENTIFIER
    (17) variable_value_change -> . IDENTIFIER EQUAL calculate
    (8) if_statement -> . if_statement_head if_statement_body
    (9) if_statement_head -> . IF LSB condition RSB

    RMB             shift and go to state 40
    VAR             shift and go to state 6
    IDENTIFIER      shift and go to state 7
    IF              shift and go to state 9

    variable_declaration           shift and go to state 10
    variable_value_change          shift and go to state 11
    if_statement                   shift and go to state 12
    if_statement_head              shift and go to state 8

state 31

    (9) if_statement_head -> IF LSB condition . RSB
    (11) condition -> condition . LB calculate
    (12) condition -> condition . RB calculate
    (13) condition -> condition . LB EQUAL calculate
    (14) condition -> condition . RB EQUAL calculate
    (15) condition -> condition . EQUAL calculate

    RSB             shift and go to state 41
    LB              shift and go to state 42
    RB              shift and go to state 43
    EQUAL           shift and go to state 44


state 32

    (16) condition -> calculate .
    (20) calculate -> calculate . PLUS calculate
    (21) calculate -> calculate . MINUS calculate
    (23) calculate -> calculate . MUL calculate
    (24) calculate -> calculate . DIV calculate

    RSB             reduce using rule 16 (condition -> calculate .)
    LB              reduce using rule 16 (condition -> calculate .)
    RB              reduce using rule 16 (condition -> calculate .)
    EQUAL           reduce using rule 16 (condition -> calculate .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37


state 33

    (18) variable_declaration -> VAR IDENTIFIER EQUAL calculate .
    (20) calculate -> calculate . PLUS calculate
    (21) calculate -> calculate . MINUS calculate
    (23) calculate -> calculate . MUL calculate
    (24) calculate -> calculate . DIV calculate

    SEMI            reduce using rule 18 (variable_declaration -> VAR IDENTIFIER EQUAL calculate .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37


state 34

    (20) calculate -> calculate PLUS . calculate
    (20) calculate -> . calculate PLUS calculate
    (21) calculate -> . calculate MINUS calculate
    (22) calculate -> . MINUS calculate
    (23) calculate -> . calculate MUL calculate
    (24) calculate -> . calculate DIV calculate
    (25) calculate -> . INT
    (26) calculate -> . FLOAT
    (27) calculate -> . STRING
    (28) calculate -> . IDENTIFIER
    (29) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENTIFIER      shift and go to state 23
    LSB             shift and go to state 29

    calculate                      shift and go to state 45

state 35

    (21) calculate -> calculate MINUS . calculate
    (20) calculate -> . calculate PLUS calculate
    (21) calculate -> . calculate MINUS calculate
    (22) calculate -> . MINUS calculate
    (23) calculate -> . calculate MUL calculate
    (24) calculate -> . calculate DIV calculate
    (25) calculate -> . INT
    (26) calculate -> . FLOAT
    (27) calculate -> . STRING
    (28) calculate -> . IDENTIFIER
    (29) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENTIFIER      shift and go to state 23
    LSB             shift and go to state 29

    calculate                      shift and go to state 46

state 36

    (23) calculate -> calculate MUL . calculate
    (20) calculate -> . calculate PLUS calculate
    (21) calculate -> . calculate MINUS calculate
    (22) calculate -> . MINUS calculate
    (23) calculate -> . calculate MUL calculate
    (24) calculate -> . calculate DIV calculate
    (25) calculate -> . INT
    (26) calculate -> . FLOAT
    (27) calculate -> . STRING
    (28) calculate -> . IDENTIFIER
    (29) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENTIFIER      shift and go to state 23
    LSB             shift and go to state 29

    calculate                      shift and go to state 47

state 37

    (24) calculate -> calculate DIV . calculate
    (20) calculate -> . calculate PLUS calculate
    (21) calculate -> . calculate MINUS calculate
    (22) calculate -> . MINUS calculate
    (23) calculate -> . calculate MUL calculate
    (24) calculate -> . calculate DIV calculate
    (25) calculate -> . INT
    (26) calculate -> . FLOAT
    (27) calculate -> . STRING
    (28) calculate -> . IDENTIFIER
    (29) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENTIFIER      shift and go to state 23
    LSB             shift and go to state 29

    calculate                      shift and go to state 48

state 38

    (22) calculate -> MINUS calculate .
    (20) calculate -> calculate . PLUS calculate
    (21) calculate -> calculate . MINUS calculate
    (23) calculate -> calculate . MUL calculate
    (24) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 22 (calculate -> MINUS calculate .)
    MINUS           reduce using rule 22 (calculate -> MINUS calculate .)
    MUL             reduce using rule 22 (calculate -> MINUS calculate .)
    DIV             reduce using rule 22 (calculate -> MINUS calculate .)
    SEMI            reduce using rule 22 (calculate -> MINUS calculate .)
    RSB             reduce using rule 22 (calculate -> MINUS calculate .)
    LB              reduce using rule 22 (calculate -> MINUS calculate .)
    RB              reduce using rule 22 (calculate -> MINUS calculate .)
    EQUAL           reduce using rule 22 (calculate -> MINUS calculate .)

  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! MUL             [ shift and go to state 36 ]
  ! DIV             [ shift and go to state 37 ]


state 39

    (29) calculate -> LSB calculate . RSB
    (20) calculate -> calculate . PLUS calculate
    (21) calculate -> calculate . MINUS calculate
    (23) calculate -> calculate . MUL calculate
    (24) calculate -> calculate . DIV calculate

    RSB             shift and go to state 49
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37


state 40

    (10) if_statement_body -> LMB expression RMB .

    VAR             reduce using rule 10 (if_statement_body -> LMB expression RMB .)
    IDENTIFIER      reduce using rule 10 (if_statement_body -> LMB expression RMB .)
    IF              reduce using rule 10 (if_statement_body -> LMB expression RMB .)
    $end            reduce using rule 10 (if_statement_body -> LMB expression RMB .)
    RMB             reduce using rule 10 (if_statement_body -> LMB expression RMB .)


state 41

    (9) if_statement_head -> IF LSB condition RSB .

    LMB             reduce using rule 9 (if_statement_head -> IF LSB condition RSB .)


state 42

    (11) condition -> condition LB . calculate
    (13) condition -> condition LB . EQUAL calculate
    (20) calculate -> . calculate PLUS calculate
    (21) calculate -> . calculate MINUS calculate
    (22) calculate -> . MINUS calculate
    (23) calculate -> . calculate MUL calculate
    (24) calculate -> . calculate DIV calculate
    (25) calculate -> . INT
    (26) calculate -> . FLOAT
    (27) calculate -> . STRING
    (28) calculate -> . IDENTIFIER
    (29) calculate -> . LSB calculate RSB

    EQUAL           shift and go to state 51
    MINUS           shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENTIFIER      shift and go to state 23
    LSB             shift and go to state 29

    calculate                      shift and go to state 50

state 43

    (12) condition -> condition RB . calculate
    (14) condition -> condition RB . EQUAL calculate
    (20) calculate -> . calculate PLUS calculate
    (21) calculate -> . calculate MINUS calculate
    (22) calculate -> . MINUS calculate
    (23) calculate -> . calculate MUL calculate
    (24) calculate -> . calculate DIV calculate
    (25) calculate -> . INT
    (26) calculate -> . FLOAT
    (27) calculate -> . STRING
    (28) calculate -> . IDENTIFIER
    (29) calculate -> . LSB calculate RSB

    EQUAL           shift and go to state 53
    MINUS           shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENTIFIER      shift and go to state 23
    LSB             shift and go to state 29

    calculate                      shift and go to state 52

state 44

    (15) condition -> condition EQUAL . calculate
    (20) calculate -> . calculate PLUS calculate
    (21) calculate -> . calculate MINUS calculate
    (22) calculate -> . MINUS calculate
    (23) calculate -> . calculate MUL calculate
    (24) calculate -> . calculate DIV calculate
    (25) calculate -> . INT
    (26) calculate -> . FLOAT
    (27) calculate -> . STRING
    (28) calculate -> . IDENTIFIER
    (29) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENTIFIER      shift and go to state 23
    LSB             shift and go to state 29

    calculate                      shift and go to state 54

state 45

    (20) calculate -> calculate PLUS calculate .
    (20) calculate -> calculate . PLUS calculate
    (21) calculate -> calculate . MINUS calculate
    (23) calculate -> calculate . MUL calculate
    (24) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 20 (calculate -> calculate PLUS calculate .)
    MINUS           reduce using rule 20 (calculate -> calculate PLUS calculate .)
    SEMI            reduce using rule 20 (calculate -> calculate PLUS calculate .)
    RSB             reduce using rule 20 (calculate -> calculate PLUS calculate .)
    LB              reduce using rule 20 (calculate -> calculate PLUS calculate .)
    RB              reduce using rule 20 (calculate -> calculate PLUS calculate .)
    EQUAL           reduce using rule 20 (calculate -> calculate PLUS calculate .)
    MUL             shift and go to state 36
    DIV             shift and go to state 37

  ! MUL             [ reduce using rule 20 (calculate -> calculate PLUS calculate .) ]
  ! DIV             [ reduce using rule 20 (calculate -> calculate PLUS calculate .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 46

    (21) calculate -> calculate MINUS calculate .
    (20) calculate -> calculate . PLUS calculate
    (21) calculate -> calculate . MINUS calculate
    (23) calculate -> calculate . MUL calculate
    (24) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 21 (calculate -> calculate MINUS calculate .)
    MINUS           reduce using rule 21 (calculate -> calculate MINUS calculate .)
    SEMI            reduce using rule 21 (calculate -> calculate MINUS calculate .)
    RSB             reduce using rule 21 (calculate -> calculate MINUS calculate .)
    LB              reduce using rule 21 (calculate -> calculate MINUS calculate .)
    RB              reduce using rule 21 (calculate -> calculate MINUS calculate .)
    EQUAL           reduce using rule 21 (calculate -> calculate MINUS calculate .)
    MUL             shift and go to state 36
    DIV             shift and go to state 37

  ! MUL             [ reduce using rule 21 (calculate -> calculate MINUS calculate .) ]
  ! DIV             [ reduce using rule 21 (calculate -> calculate MINUS calculate .) ]
  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]


state 47

    (23) calculate -> calculate MUL calculate .
    (20) calculate -> calculate . PLUS calculate
    (21) calculate -> calculate . MINUS calculate
    (23) calculate -> calculate . MUL calculate
    (24) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 23 (calculate -> calculate MUL calculate .)
    MINUS           reduce using rule 23 (calculate -> calculate MUL calculate .)
    MUL             reduce using rule 23 (calculate -> calculate MUL calculate .)
    DIV             reduce using rule 23 (calculate -> calculate MUL calculate .)
    SEMI            reduce using rule 23 (calculate -> calculate MUL calculate .)
    RSB             reduce using rule 23 (calculate -> calculate MUL calculate .)
    LB              reduce using rule 23 (calculate -> calculate MUL calculate .)
    RB              reduce using rule 23 (calculate -> calculate MUL calculate .)
    EQUAL           reduce using rule 23 (calculate -> calculate MUL calculate .)

  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! MUL             [ shift and go to state 36 ]
  ! DIV             [ shift and go to state 37 ]


state 48

    (24) calculate -> calculate DIV calculate .
    (20) calculate -> calculate . PLUS calculate
    (21) calculate -> calculate . MINUS calculate
    (23) calculate -> calculate . MUL calculate
    (24) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 24 (calculate -> calculate DIV calculate .)
    MINUS           reduce using rule 24 (calculate -> calculate DIV calculate .)
    MUL             reduce using rule 24 (calculate -> calculate DIV calculate .)
    DIV             reduce using rule 24 (calculate -> calculate DIV calculate .)
    SEMI            reduce using rule 24 (calculate -> calculate DIV calculate .)
    RSB             reduce using rule 24 (calculate -> calculate DIV calculate .)
    LB              reduce using rule 24 (calculate -> calculate DIV calculate .)
    RB              reduce using rule 24 (calculate -> calculate DIV calculate .)
    EQUAL           reduce using rule 24 (calculate -> calculate DIV calculate .)

  ! PLUS            [ shift and go to state 34 ]
  ! MINUS           [ shift and go to state 35 ]
  ! MUL             [ shift and go to state 36 ]
  ! DIV             [ shift and go to state 37 ]


state 49

    (29) calculate -> LSB calculate RSB .

    PLUS            reduce using rule 29 (calculate -> LSB calculate RSB .)
    MINUS           reduce using rule 29 (calculate -> LSB calculate RSB .)
    MUL             reduce using rule 29 (calculate -> LSB calculate RSB .)
    DIV             reduce using rule 29 (calculate -> LSB calculate RSB .)
    SEMI            reduce using rule 29 (calculate -> LSB calculate RSB .)
    RSB             reduce using rule 29 (calculate -> LSB calculate RSB .)
    LB              reduce using rule 29 (calculate -> LSB calculate RSB .)
    RB              reduce using rule 29 (calculate -> LSB calculate RSB .)
    EQUAL           reduce using rule 29 (calculate -> LSB calculate RSB .)


state 50

    (11) condition -> condition LB calculate .
    (20) calculate -> calculate . PLUS calculate
    (21) calculate -> calculate . MINUS calculate
    (23) calculate -> calculate . MUL calculate
    (24) calculate -> calculate . DIV calculate

    RSB             reduce using rule 11 (condition -> condition LB calculate .)
    LB              reduce using rule 11 (condition -> condition LB calculate .)
    RB              reduce using rule 11 (condition -> condition LB calculate .)
    EQUAL           reduce using rule 11 (condition -> condition LB calculate .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37


state 51

    (13) condition -> condition LB EQUAL . calculate
    (20) calculate -> . calculate PLUS calculate
    (21) calculate -> . calculate MINUS calculate
    (22) calculate -> . MINUS calculate
    (23) calculate -> . calculate MUL calculate
    (24) calculate -> . calculate DIV calculate
    (25) calculate -> . INT
    (26) calculate -> . FLOAT
    (27) calculate -> . STRING
    (28) calculate -> . IDENTIFIER
    (29) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENTIFIER      shift and go to state 23
    LSB             shift and go to state 29

    calculate                      shift and go to state 55

state 52

    (12) condition -> condition RB calculate .
    (20) calculate -> calculate . PLUS calculate
    (21) calculate -> calculate . MINUS calculate
    (23) calculate -> calculate . MUL calculate
    (24) calculate -> calculate . DIV calculate

    RSB             reduce using rule 12 (condition -> condition RB calculate .)
    LB              reduce using rule 12 (condition -> condition RB calculate .)
    RB              reduce using rule 12 (condition -> condition RB calculate .)
    EQUAL           reduce using rule 12 (condition -> condition RB calculate .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37


state 53

    (14) condition -> condition RB EQUAL . calculate
    (20) calculate -> . calculate PLUS calculate
    (21) calculate -> . calculate MINUS calculate
    (22) calculate -> . MINUS calculate
    (23) calculate -> . calculate MUL calculate
    (24) calculate -> . calculate DIV calculate
    (25) calculate -> . INT
    (26) calculate -> . FLOAT
    (27) calculate -> . STRING
    (28) calculate -> . IDENTIFIER
    (29) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    IDENTIFIER      shift and go to state 23
    LSB             shift and go to state 29

    calculate                      shift and go to state 56

state 54

    (15) condition -> condition EQUAL calculate .
    (20) calculate -> calculate . PLUS calculate
    (21) calculate -> calculate . MINUS calculate
    (23) calculate -> calculate . MUL calculate
    (24) calculate -> calculate . DIV calculate

    RSB             reduce using rule 15 (condition -> condition EQUAL calculate .)
    LB              reduce using rule 15 (condition -> condition EQUAL calculate .)
    RB              reduce using rule 15 (condition -> condition EQUAL calculate .)
    EQUAL           reduce using rule 15 (condition -> condition EQUAL calculate .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37


state 55

    (13) condition -> condition LB EQUAL calculate .
    (20) calculate -> calculate . PLUS calculate
    (21) calculate -> calculate . MINUS calculate
    (23) calculate -> calculate . MUL calculate
    (24) calculate -> calculate . DIV calculate

    RSB             reduce using rule 13 (condition -> condition LB EQUAL calculate .)
    LB              reduce using rule 13 (condition -> condition LB EQUAL calculate .)
    RB              reduce using rule 13 (condition -> condition LB EQUAL calculate .)
    EQUAL           reduce using rule 13 (condition -> condition LB EQUAL calculate .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37


state 56

    (14) condition -> condition RB EQUAL calculate .
    (20) calculate -> calculate . PLUS calculate
    (21) calculate -> calculate . MINUS calculate
    (23) calculate -> calculate . MUL calculate
    (24) calculate -> calculate . DIV calculate

    RSB             reduce using rule 14 (condition -> condition RB EQUAL calculate .)
    LB              reduce using rule 14 (condition -> condition RB EQUAL calculate .)
    RB              reduce using rule 14 (condition -> condition RB EQUAL calculate .)
    EQUAL           reduce using rule 14 (condition -> condition RB EQUAL calculate .)
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    MUL             shift and go to state 36
    DIV             shift and go to state 37

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 0 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for VAR in state 18 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 18 resolved as shift
WARNING: shift/reduce conflict for IF in state 18 resolved as shift
