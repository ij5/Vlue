Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ELSE
    LB
    LMB
    RB
    RMB
    TAB

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression variable_declaration NEWLINE
Rule 2     expression -> expression variable_value_change NEWLINE
Rule 3     expression -> variable_declaration NEWLINE
Rule 4     expression -> variable_value_change
Rule 5     expression -> NEWLINE
Rule 6     if_statement_head -> IF condition COLON
Rule 7     condition -> <empty>
Rule 8     variable_value_change -> IDENTIFIER EQUAL calculate
Rule 9     variable_value_change -> IDENTIFIER EQUAL string_plus
Rule 10    variable_declaration -> VAR IDENTIFIER EQUAL calculate
Rule 11    variable_declaration -> VAR IDENTIFIER EQUAL STRING
Rule 12    variable_declaration -> VAR IDENTIFIER EQUAL string_plus
Rule 13    variable_declaration -> VAR IDENTIFIER
Rule 14    string_plus -> string_plus PLUS STRING
Rule 15    string_plus -> STRING
Rule 16    calculate -> calculate PLUS calculate
Rule 17    calculate -> calculate MINUS calculate
Rule 18    calculate -> MINUS calculate
Rule 19    calculate -> calculate MUL calculate
Rule 20    calculate -> calculate DIV calculate
Rule 21    calculate -> INT
Rule 22    calculate -> FLOAT
Rule 23    calculate -> IDENTIFIER
Rule 24    calculate -> LSB calculate RSB

Terminals, with rules where they appear

COLON                : 6
DIV                  : 20
ELSE                 : 
EQUAL                : 8 9 10 11 12
FLOAT                : 22
IDENTIFIER           : 8 9 10 11 12 13 23
IF                   : 6
INT                  : 21
LB                   : 
LMB                  : 
LSB                  : 24
MINUS                : 17 18
MUL                  : 19
NEWLINE              : 1 2 3 5
PLUS                 : 14 16
RB                   : 
RMB                  : 
RSB                  : 24
STRING               : 11 14 15
TAB                  : 
VAR                  : 10 11 12 13
error                : 

Nonterminals, with rules where they appear

calculate            : 8 10 16 16 17 17 18 19 19 20 20 24
condition            : 6
expression           : 1 2 0
if_statement_head    : 
string_plus          : 9 12 14
variable_declaration : 1 3
variable_value_change : 2 4

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression variable_declaration NEWLINE
    (2) expression -> . expression variable_value_change NEWLINE
    (3) expression -> . variable_declaration NEWLINE
    (4) expression -> . variable_value_change
    (5) expression -> . NEWLINE
    (10) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (11) variable_declaration -> . VAR IDENTIFIER EQUAL STRING
    (12) variable_declaration -> . VAR IDENTIFIER EQUAL string_plus
    (13) variable_declaration -> . VAR IDENTIFIER
    (8) variable_value_change -> . IDENTIFIER EQUAL calculate
    (9) variable_value_change -> . IDENTIFIER EQUAL string_plus

    NEWLINE         shift and go to state 3
    VAR             shift and go to state 5
    IDENTIFIER      shift and go to state 6

    expression                     shift and go to state 1
    variable_declaration           shift and go to state 2
    variable_value_change          shift and go to state 4

state 1

    (0) S' -> expression .
    (1) expression -> expression . variable_declaration NEWLINE
    (2) expression -> expression . variable_value_change NEWLINE
    (10) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (11) variable_declaration -> . VAR IDENTIFIER EQUAL STRING
    (12) variable_declaration -> . VAR IDENTIFIER EQUAL string_plus
    (13) variable_declaration -> . VAR IDENTIFIER
    (8) variable_value_change -> . IDENTIFIER EQUAL calculate
    (9) variable_value_change -> . IDENTIFIER EQUAL string_plus

    VAR             shift and go to state 5
    IDENTIFIER      shift and go to state 6

    variable_declaration           shift and go to state 7
    variable_value_change          shift and go to state 8

state 2

    (3) expression -> variable_declaration . NEWLINE

    NEWLINE         shift and go to state 9


state 3

    (5) expression -> NEWLINE .

    VAR             reduce using rule 5 (expression -> NEWLINE .)
    IDENTIFIER      reduce using rule 5 (expression -> NEWLINE .)
    $end            reduce using rule 5 (expression -> NEWLINE .)


state 4

    (4) expression -> variable_value_change .

    VAR             reduce using rule 4 (expression -> variable_value_change .)
    IDENTIFIER      reduce using rule 4 (expression -> variable_value_change .)
    $end            reduce using rule 4 (expression -> variable_value_change .)


state 5

    (10) variable_declaration -> VAR . IDENTIFIER EQUAL calculate
    (11) variable_declaration -> VAR . IDENTIFIER EQUAL STRING
    (12) variable_declaration -> VAR . IDENTIFIER EQUAL string_plus
    (13) variable_declaration -> VAR . IDENTIFIER

    IDENTIFIER      shift and go to state 10


state 6

    (8) variable_value_change -> IDENTIFIER . EQUAL calculate
    (9) variable_value_change -> IDENTIFIER . EQUAL string_plus

    EQUAL           shift and go to state 11


state 7

    (1) expression -> expression variable_declaration . NEWLINE

    NEWLINE         shift and go to state 12


state 8

    (2) expression -> expression variable_value_change . NEWLINE

    NEWLINE         shift and go to state 13


state 9

    (3) expression -> variable_declaration NEWLINE .

    VAR             reduce using rule 3 (expression -> variable_declaration NEWLINE .)
    IDENTIFIER      reduce using rule 3 (expression -> variable_declaration NEWLINE .)
    $end            reduce using rule 3 (expression -> variable_declaration NEWLINE .)


state 10

    (10) variable_declaration -> VAR IDENTIFIER . EQUAL calculate
    (11) variable_declaration -> VAR IDENTIFIER . EQUAL STRING
    (12) variable_declaration -> VAR IDENTIFIER . EQUAL string_plus
    (13) variable_declaration -> VAR IDENTIFIER .

    EQUAL           shift and go to state 14
    NEWLINE         reduce using rule 13 (variable_declaration -> VAR IDENTIFIER .)


state 11

    (8) variable_value_change -> IDENTIFIER EQUAL . calculate
    (9) variable_value_change -> IDENTIFIER EQUAL . string_plus
    (16) calculate -> . calculate PLUS calculate
    (17) calculate -> . calculate MINUS calculate
    (18) calculate -> . MINUS calculate
    (19) calculate -> . calculate MUL calculate
    (20) calculate -> . calculate DIV calculate
    (21) calculate -> . INT
    (22) calculate -> . FLOAT
    (23) calculate -> . IDENTIFIER
    (24) calculate -> . LSB calculate RSB
    (14) string_plus -> . string_plus PLUS STRING
    (15) string_plus -> . STRING

    MINUS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 15
    LSB             shift and go to state 21
    STRING          shift and go to state 22

    calculate                      shift and go to state 16
    string_plus                    shift and go to state 17

state 12

    (1) expression -> expression variable_declaration NEWLINE .

    VAR             reduce using rule 1 (expression -> expression variable_declaration NEWLINE .)
    IDENTIFIER      reduce using rule 1 (expression -> expression variable_declaration NEWLINE .)
    $end            reduce using rule 1 (expression -> expression variable_declaration NEWLINE .)


state 13

    (2) expression -> expression variable_value_change NEWLINE .

    VAR             reduce using rule 2 (expression -> expression variable_value_change NEWLINE .)
    IDENTIFIER      reduce using rule 2 (expression -> expression variable_value_change NEWLINE .)
    $end            reduce using rule 2 (expression -> expression variable_value_change NEWLINE .)


state 14

    (10) variable_declaration -> VAR IDENTIFIER EQUAL . calculate
    (11) variable_declaration -> VAR IDENTIFIER EQUAL . STRING
    (12) variable_declaration -> VAR IDENTIFIER EQUAL . string_plus
    (16) calculate -> . calculate PLUS calculate
    (17) calculate -> . calculate MINUS calculate
    (18) calculate -> . MINUS calculate
    (19) calculate -> . calculate MUL calculate
    (20) calculate -> . calculate DIV calculate
    (21) calculate -> . INT
    (22) calculate -> . FLOAT
    (23) calculate -> . IDENTIFIER
    (24) calculate -> . LSB calculate RSB
    (14) string_plus -> . string_plus PLUS STRING
    (15) string_plus -> . STRING

    STRING          shift and go to state 24
    MINUS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 15
    LSB             shift and go to state 21

    calculate                      shift and go to state 23
    string_plus                    shift and go to state 25

state 15

    (23) calculate -> IDENTIFIER .

    PLUS            reduce using rule 23 (calculate -> IDENTIFIER .)
    MINUS           reduce using rule 23 (calculate -> IDENTIFIER .)
    MUL             reduce using rule 23 (calculate -> IDENTIFIER .)
    DIV             reduce using rule 23 (calculate -> IDENTIFIER .)
    VAR             reduce using rule 23 (calculate -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 23 (calculate -> IDENTIFIER .)
    $end            reduce using rule 23 (calculate -> IDENTIFIER .)
    NEWLINE         reduce using rule 23 (calculate -> IDENTIFIER .)
    RSB             reduce using rule 23 (calculate -> IDENTIFIER .)


state 16

    (8) variable_value_change -> IDENTIFIER EQUAL calculate .
    (16) calculate -> calculate . PLUS calculate
    (17) calculate -> calculate . MINUS calculate
    (19) calculate -> calculate . MUL calculate
    (20) calculate -> calculate . DIV calculate

    VAR             reduce using rule 8 (variable_value_change -> IDENTIFIER EQUAL calculate .)
    IDENTIFIER      reduce using rule 8 (variable_value_change -> IDENTIFIER EQUAL calculate .)
    $end            reduce using rule 8 (variable_value_change -> IDENTIFIER EQUAL calculate .)
    NEWLINE         reduce using rule 8 (variable_value_change -> IDENTIFIER EQUAL calculate .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    MUL             shift and go to state 28
    DIV             shift and go to state 29


state 17

    (9) variable_value_change -> IDENTIFIER EQUAL string_plus .
    (14) string_plus -> string_plus . PLUS STRING

    VAR             reduce using rule 9 (variable_value_change -> IDENTIFIER EQUAL string_plus .)
    IDENTIFIER      reduce using rule 9 (variable_value_change -> IDENTIFIER EQUAL string_plus .)
    $end            reduce using rule 9 (variable_value_change -> IDENTIFIER EQUAL string_plus .)
    NEWLINE         reduce using rule 9 (variable_value_change -> IDENTIFIER EQUAL string_plus .)
    PLUS            shift and go to state 30


state 18

    (18) calculate -> MINUS . calculate
    (16) calculate -> . calculate PLUS calculate
    (17) calculate -> . calculate MINUS calculate
    (18) calculate -> . MINUS calculate
    (19) calculate -> . calculate MUL calculate
    (20) calculate -> . calculate DIV calculate
    (21) calculate -> . INT
    (22) calculate -> . FLOAT
    (23) calculate -> . IDENTIFIER
    (24) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 15
    LSB             shift and go to state 21

    calculate                      shift and go to state 31

state 19

    (21) calculate -> INT .

    PLUS            reduce using rule 21 (calculate -> INT .)
    MINUS           reduce using rule 21 (calculate -> INT .)
    MUL             reduce using rule 21 (calculate -> INT .)
    DIV             reduce using rule 21 (calculate -> INT .)
    VAR             reduce using rule 21 (calculate -> INT .)
    IDENTIFIER      reduce using rule 21 (calculate -> INT .)
    $end            reduce using rule 21 (calculate -> INT .)
    NEWLINE         reduce using rule 21 (calculate -> INT .)
    RSB             reduce using rule 21 (calculate -> INT .)


state 20

    (22) calculate -> FLOAT .

    PLUS            reduce using rule 22 (calculate -> FLOAT .)
    MINUS           reduce using rule 22 (calculate -> FLOAT .)
    MUL             reduce using rule 22 (calculate -> FLOAT .)
    DIV             reduce using rule 22 (calculate -> FLOAT .)
    VAR             reduce using rule 22 (calculate -> FLOAT .)
    IDENTIFIER      reduce using rule 22 (calculate -> FLOAT .)
    $end            reduce using rule 22 (calculate -> FLOAT .)
    NEWLINE         reduce using rule 22 (calculate -> FLOAT .)
    RSB             reduce using rule 22 (calculate -> FLOAT .)


state 21

    (24) calculate -> LSB . calculate RSB
    (16) calculate -> . calculate PLUS calculate
    (17) calculate -> . calculate MINUS calculate
    (18) calculate -> . MINUS calculate
    (19) calculate -> . calculate MUL calculate
    (20) calculate -> . calculate DIV calculate
    (21) calculate -> . INT
    (22) calculate -> . FLOAT
    (23) calculate -> . IDENTIFIER
    (24) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 15
    LSB             shift and go to state 21

    calculate                      shift and go to state 32

state 22

    (15) string_plus -> STRING .

    PLUS            reduce using rule 15 (string_plus -> STRING .)
    VAR             reduce using rule 15 (string_plus -> STRING .)
    IDENTIFIER      reduce using rule 15 (string_plus -> STRING .)
    $end            reduce using rule 15 (string_plus -> STRING .)
    NEWLINE         reduce using rule 15 (string_plus -> STRING .)


state 23

    (10) variable_declaration -> VAR IDENTIFIER EQUAL calculate .
    (16) calculate -> calculate . PLUS calculate
    (17) calculate -> calculate . MINUS calculate
    (19) calculate -> calculate . MUL calculate
    (20) calculate -> calculate . DIV calculate

    NEWLINE         reduce using rule 10 (variable_declaration -> VAR IDENTIFIER EQUAL calculate .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    MUL             shift and go to state 28
    DIV             shift and go to state 29


state 24

    (11) variable_declaration -> VAR IDENTIFIER EQUAL STRING .
    (15) string_plus -> STRING .

  ! reduce/reduce conflict for NEWLINE resolved using rule 11 (variable_declaration -> VAR IDENTIFIER EQUAL STRING .)
    NEWLINE         reduce using rule 11 (variable_declaration -> VAR IDENTIFIER EQUAL STRING .)
    PLUS            reduce using rule 15 (string_plus -> STRING .)

  ! NEWLINE         [ reduce using rule 15 (string_plus -> STRING .) ]


state 25

    (12) variable_declaration -> VAR IDENTIFIER EQUAL string_plus .
    (14) string_plus -> string_plus . PLUS STRING

    NEWLINE         reduce using rule 12 (variable_declaration -> VAR IDENTIFIER EQUAL string_plus .)
    PLUS            shift and go to state 30


state 26

    (16) calculate -> calculate PLUS . calculate
    (16) calculate -> . calculate PLUS calculate
    (17) calculate -> . calculate MINUS calculate
    (18) calculate -> . MINUS calculate
    (19) calculate -> . calculate MUL calculate
    (20) calculate -> . calculate DIV calculate
    (21) calculate -> . INT
    (22) calculate -> . FLOAT
    (23) calculate -> . IDENTIFIER
    (24) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 15
    LSB             shift and go to state 21

    calculate                      shift and go to state 33

state 27

    (17) calculate -> calculate MINUS . calculate
    (16) calculate -> . calculate PLUS calculate
    (17) calculate -> . calculate MINUS calculate
    (18) calculate -> . MINUS calculate
    (19) calculate -> . calculate MUL calculate
    (20) calculate -> . calculate DIV calculate
    (21) calculate -> . INT
    (22) calculate -> . FLOAT
    (23) calculate -> . IDENTIFIER
    (24) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 15
    LSB             shift and go to state 21

    calculate                      shift and go to state 34

state 28

    (19) calculate -> calculate MUL . calculate
    (16) calculate -> . calculate PLUS calculate
    (17) calculate -> . calculate MINUS calculate
    (18) calculate -> . MINUS calculate
    (19) calculate -> . calculate MUL calculate
    (20) calculate -> . calculate DIV calculate
    (21) calculate -> . INT
    (22) calculate -> . FLOAT
    (23) calculate -> . IDENTIFIER
    (24) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 15
    LSB             shift and go to state 21

    calculate                      shift and go to state 35

state 29

    (20) calculate -> calculate DIV . calculate
    (16) calculate -> . calculate PLUS calculate
    (17) calculate -> . calculate MINUS calculate
    (18) calculate -> . MINUS calculate
    (19) calculate -> . calculate MUL calculate
    (20) calculate -> . calculate DIV calculate
    (21) calculate -> . INT
    (22) calculate -> . FLOAT
    (23) calculate -> . IDENTIFIER
    (24) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 15
    LSB             shift and go to state 21

    calculate                      shift and go to state 36

state 30

    (14) string_plus -> string_plus PLUS . STRING

    STRING          shift and go to state 37


state 31

    (18) calculate -> MINUS calculate .
    (16) calculate -> calculate . PLUS calculate
    (17) calculate -> calculate . MINUS calculate
    (19) calculate -> calculate . MUL calculate
    (20) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 18 (calculate -> MINUS calculate .)
    MINUS           reduce using rule 18 (calculate -> MINUS calculate .)
    MUL             reduce using rule 18 (calculate -> MINUS calculate .)
    DIV             reduce using rule 18 (calculate -> MINUS calculate .)
    VAR             reduce using rule 18 (calculate -> MINUS calculate .)
    IDENTIFIER      reduce using rule 18 (calculate -> MINUS calculate .)
    $end            reduce using rule 18 (calculate -> MINUS calculate .)
    NEWLINE         reduce using rule 18 (calculate -> MINUS calculate .)
    RSB             reduce using rule 18 (calculate -> MINUS calculate .)

  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! MUL             [ shift and go to state 28 ]
  ! DIV             [ shift and go to state 29 ]


state 32

    (24) calculate -> LSB calculate . RSB
    (16) calculate -> calculate . PLUS calculate
    (17) calculate -> calculate . MINUS calculate
    (19) calculate -> calculate . MUL calculate
    (20) calculate -> calculate . DIV calculate

    RSB             shift and go to state 38
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    MUL             shift and go to state 28
    DIV             shift and go to state 29


state 33

    (16) calculate -> calculate PLUS calculate .
    (16) calculate -> calculate . PLUS calculate
    (17) calculate -> calculate . MINUS calculate
    (19) calculate -> calculate . MUL calculate
    (20) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 16 (calculate -> calculate PLUS calculate .)
    MINUS           reduce using rule 16 (calculate -> calculate PLUS calculate .)
    VAR             reduce using rule 16 (calculate -> calculate PLUS calculate .)
    IDENTIFIER      reduce using rule 16 (calculate -> calculate PLUS calculate .)
    $end            reduce using rule 16 (calculate -> calculate PLUS calculate .)
    NEWLINE         reduce using rule 16 (calculate -> calculate PLUS calculate .)
    RSB             reduce using rule 16 (calculate -> calculate PLUS calculate .)
    MUL             shift and go to state 28
    DIV             shift and go to state 29

  ! MUL             [ reduce using rule 16 (calculate -> calculate PLUS calculate .) ]
  ! DIV             [ reduce using rule 16 (calculate -> calculate PLUS calculate .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]


state 34

    (17) calculate -> calculate MINUS calculate .
    (16) calculate -> calculate . PLUS calculate
    (17) calculate -> calculate . MINUS calculate
    (19) calculate -> calculate . MUL calculate
    (20) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 17 (calculate -> calculate MINUS calculate .)
    MINUS           reduce using rule 17 (calculate -> calculate MINUS calculate .)
    VAR             reduce using rule 17 (calculate -> calculate MINUS calculate .)
    IDENTIFIER      reduce using rule 17 (calculate -> calculate MINUS calculate .)
    $end            reduce using rule 17 (calculate -> calculate MINUS calculate .)
    NEWLINE         reduce using rule 17 (calculate -> calculate MINUS calculate .)
    RSB             reduce using rule 17 (calculate -> calculate MINUS calculate .)
    MUL             shift and go to state 28
    DIV             shift and go to state 29

  ! MUL             [ reduce using rule 17 (calculate -> calculate MINUS calculate .) ]
  ! DIV             [ reduce using rule 17 (calculate -> calculate MINUS calculate .) ]
  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]


state 35

    (19) calculate -> calculate MUL calculate .
    (16) calculate -> calculate . PLUS calculate
    (17) calculate -> calculate . MINUS calculate
    (19) calculate -> calculate . MUL calculate
    (20) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 19 (calculate -> calculate MUL calculate .)
    MINUS           reduce using rule 19 (calculate -> calculate MUL calculate .)
    MUL             reduce using rule 19 (calculate -> calculate MUL calculate .)
    DIV             reduce using rule 19 (calculate -> calculate MUL calculate .)
    VAR             reduce using rule 19 (calculate -> calculate MUL calculate .)
    IDENTIFIER      reduce using rule 19 (calculate -> calculate MUL calculate .)
    $end            reduce using rule 19 (calculate -> calculate MUL calculate .)
    NEWLINE         reduce using rule 19 (calculate -> calculate MUL calculate .)
    RSB             reduce using rule 19 (calculate -> calculate MUL calculate .)

  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! MUL             [ shift and go to state 28 ]
  ! DIV             [ shift and go to state 29 ]


state 36

    (20) calculate -> calculate DIV calculate .
    (16) calculate -> calculate . PLUS calculate
    (17) calculate -> calculate . MINUS calculate
    (19) calculate -> calculate . MUL calculate
    (20) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 20 (calculate -> calculate DIV calculate .)
    MINUS           reduce using rule 20 (calculate -> calculate DIV calculate .)
    MUL             reduce using rule 20 (calculate -> calculate DIV calculate .)
    DIV             reduce using rule 20 (calculate -> calculate DIV calculate .)
    VAR             reduce using rule 20 (calculate -> calculate DIV calculate .)
    IDENTIFIER      reduce using rule 20 (calculate -> calculate DIV calculate .)
    $end            reduce using rule 20 (calculate -> calculate DIV calculate .)
    NEWLINE         reduce using rule 20 (calculate -> calculate DIV calculate .)
    RSB             reduce using rule 20 (calculate -> calculate DIV calculate .)

  ! PLUS            [ shift and go to state 26 ]
  ! MINUS           [ shift and go to state 27 ]
  ! MUL             [ shift and go to state 28 ]
  ! DIV             [ shift and go to state 29 ]


state 37

    (14) string_plus -> string_plus PLUS STRING .

    PLUS            reduce using rule 14 (string_plus -> string_plus PLUS STRING .)
    VAR             reduce using rule 14 (string_plus -> string_plus PLUS STRING .)
    IDENTIFIER      reduce using rule 14 (string_plus -> string_plus PLUS STRING .)
    $end            reduce using rule 14 (string_plus -> string_plus PLUS STRING .)
    NEWLINE         reduce using rule 14 (string_plus -> string_plus PLUS STRING .)


state 38

    (24) calculate -> LSB calculate RSB .

    PLUS            reduce using rule 24 (calculate -> LSB calculate RSB .)
    MINUS           reduce using rule 24 (calculate -> LSB calculate RSB .)
    MUL             reduce using rule 24 (calculate -> LSB calculate RSB .)
    DIV             reduce using rule 24 (calculate -> LSB calculate RSB .)
    VAR             reduce using rule 24 (calculate -> LSB calculate RSB .)
    IDENTIFIER      reduce using rule 24 (calculate -> LSB calculate RSB .)
    $end            reduce using rule 24 (calculate -> LSB calculate RSB .)
    NEWLINE         reduce using rule 24 (calculate -> LSB calculate RSB .)
    RSB             reduce using rule 24 (calculate -> LSB calculate RSB .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 24 resolved using rule (variable_declaration -> VAR IDENTIFIER EQUAL STRING)
WARNING: rejected rule (string_plus -> STRING) in state 24
