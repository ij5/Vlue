Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ELSE
    LMB
    RB
    RMB

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression variable_declaration NEWLINE
Rule 2     expression -> expression variable_value_change NEWLINE
Rule 3     expression -> expression if_statement NEWLINE
Rule 4     expression -> variable_declaration NEWLINE
Rule 5     expression -> variable_value_change
Rule 6     expression -> if_statement
Rule 7     expression -> NEWLINE
Rule 8     if_statement -> if_statement_head NEWLINE TAB expression
Rule 9     if_statement_head -> IF condition COLON
Rule 10    condition -> condition LB INT
Rule 11    condition -> INT
Rule 12    condition -> FLOAT
Rule 13    condition -> IDENTIFIER
Rule 14    variable_value_change -> IDENTIFIER EQUAL calculate
Rule 15    variable_value_change -> IDENTIFIER EQUAL string_plus
Rule 16    variable_declaration -> VAR IDENTIFIER EQUAL calculate
Rule 17    variable_declaration -> VAR IDENTIFIER EQUAL STRING
Rule 18    variable_declaration -> VAR IDENTIFIER EQUAL string_plus
Rule 19    variable_declaration -> VAR IDENTIFIER
Rule 20    string_plus -> string_plus PLUS STRING
Rule 21    string_plus -> STRING
Rule 22    calculate -> calculate PLUS calculate
Rule 23    calculate -> calculate MINUS calculate
Rule 24    calculate -> MINUS calculate
Rule 25    calculate -> calculate MUL calculate
Rule 26    calculate -> calculate DIV calculate
Rule 27    calculate -> INT
Rule 28    calculate -> FLOAT
Rule 29    calculate -> IDENTIFIER
Rule 30    calculate -> LSB calculate RSB

Terminals, with rules where they appear

COLON                : 9
DIV                  : 26
ELSE                 : 
EQUAL                : 14 15 16 17 18
FLOAT                : 12 28
IDENTIFIER           : 13 14 15 16 17 18 19 29
IF                   : 9
INT                  : 10 11 27
LB                   : 10
LMB                  : 
LSB                  : 30
MINUS                : 23 24
MUL                  : 25
NEWLINE              : 1 2 3 4 7 8
PLUS                 : 20 22
RB                   : 
RMB                  : 
RSB                  : 30
STRING               : 17 20 21
TAB                  : 8
VAR                  : 16 17 18 19
error                : 

Nonterminals, with rules where they appear

calculate            : 14 16 22 22 23 23 24 25 25 26 26 30
condition            : 9 10
expression           : 1 2 3 8 0
if_statement         : 3 6
if_statement_head    : 8
string_plus          : 15 18 20
variable_declaration : 1 4
variable_value_change : 2 5

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression variable_declaration NEWLINE
    (2) expression -> . expression variable_value_change NEWLINE
    (3) expression -> . expression if_statement NEWLINE
    (4) expression -> . variable_declaration NEWLINE
    (5) expression -> . variable_value_change
    (6) expression -> . if_statement
    (7) expression -> . NEWLINE
    (16) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (17) variable_declaration -> . VAR IDENTIFIER EQUAL STRING
    (18) variable_declaration -> . VAR IDENTIFIER EQUAL string_plus
    (19) variable_declaration -> . VAR IDENTIFIER
    (14) variable_value_change -> . IDENTIFIER EQUAL calculate
    (15) variable_value_change -> . IDENTIFIER EQUAL string_plus
    (8) if_statement -> . if_statement_head NEWLINE TAB expression
    (9) if_statement_head -> . IF condition COLON

    NEWLINE         shift and go to state 3
    VAR             shift and go to state 6
    IDENTIFIER      shift and go to state 7
    IF              shift and go to state 9

    expression                     shift and go to state 1
    variable_declaration           shift and go to state 2
    variable_value_change          shift and go to state 4
    if_statement                   shift and go to state 5
    if_statement_head              shift and go to state 8

state 1

    (0) S' -> expression .
    (1) expression -> expression . variable_declaration NEWLINE
    (2) expression -> expression . variable_value_change NEWLINE
    (3) expression -> expression . if_statement NEWLINE
    (16) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (17) variable_declaration -> . VAR IDENTIFIER EQUAL STRING
    (18) variable_declaration -> . VAR IDENTIFIER EQUAL string_plus
    (19) variable_declaration -> . VAR IDENTIFIER
    (14) variable_value_change -> . IDENTIFIER EQUAL calculate
    (15) variable_value_change -> . IDENTIFIER EQUAL string_plus
    (8) if_statement -> . if_statement_head NEWLINE TAB expression
    (9) if_statement_head -> . IF condition COLON

    VAR             shift and go to state 6
    IDENTIFIER      shift and go to state 7
    IF              shift and go to state 9

    variable_declaration           shift and go to state 10
    variable_value_change          shift and go to state 11
    if_statement                   shift and go to state 12
    if_statement_head              shift and go to state 8

state 2

    (4) expression -> variable_declaration . NEWLINE

    NEWLINE         shift and go to state 13


state 3

    (7) expression -> NEWLINE .

    VAR             reduce using rule 7 (expression -> NEWLINE .)
    IDENTIFIER      reduce using rule 7 (expression -> NEWLINE .)
    IF              reduce using rule 7 (expression -> NEWLINE .)
    $end            reduce using rule 7 (expression -> NEWLINE .)
    NEWLINE         reduce using rule 7 (expression -> NEWLINE .)


state 4

    (5) expression -> variable_value_change .

    VAR             reduce using rule 5 (expression -> variable_value_change .)
    IDENTIFIER      reduce using rule 5 (expression -> variable_value_change .)
    IF              reduce using rule 5 (expression -> variable_value_change .)
    $end            reduce using rule 5 (expression -> variable_value_change .)
    NEWLINE         reduce using rule 5 (expression -> variable_value_change .)


state 5

    (6) expression -> if_statement .

    VAR             reduce using rule 6 (expression -> if_statement .)
    IDENTIFIER      reduce using rule 6 (expression -> if_statement .)
    IF              reduce using rule 6 (expression -> if_statement .)
    $end            reduce using rule 6 (expression -> if_statement .)
    NEWLINE         reduce using rule 6 (expression -> if_statement .)


state 6

    (16) variable_declaration -> VAR . IDENTIFIER EQUAL calculate
    (17) variable_declaration -> VAR . IDENTIFIER EQUAL STRING
    (18) variable_declaration -> VAR . IDENTIFIER EQUAL string_plus
    (19) variable_declaration -> VAR . IDENTIFIER

    IDENTIFIER      shift and go to state 14


state 7

    (14) variable_value_change -> IDENTIFIER . EQUAL calculate
    (15) variable_value_change -> IDENTIFIER . EQUAL string_plus

    EQUAL           shift and go to state 15


state 8

    (8) if_statement -> if_statement_head . NEWLINE TAB expression

    NEWLINE         shift and go to state 16


state 9

    (9) if_statement_head -> IF . condition COLON
    (10) condition -> . condition LB INT
    (11) condition -> . INT
    (12) condition -> . FLOAT
    (13) condition -> . IDENTIFIER

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    IDENTIFIER      shift and go to state 20

    condition                      shift and go to state 17

state 10

    (1) expression -> expression variable_declaration . NEWLINE

    NEWLINE         shift and go to state 21


state 11

    (2) expression -> expression variable_value_change . NEWLINE

    NEWLINE         shift and go to state 22


state 12

    (3) expression -> expression if_statement . NEWLINE

    NEWLINE         shift and go to state 23


state 13

    (4) expression -> variable_declaration NEWLINE .

    VAR             reduce using rule 4 (expression -> variable_declaration NEWLINE .)
    IDENTIFIER      reduce using rule 4 (expression -> variable_declaration NEWLINE .)
    IF              reduce using rule 4 (expression -> variable_declaration NEWLINE .)
    $end            reduce using rule 4 (expression -> variable_declaration NEWLINE .)
    NEWLINE         reduce using rule 4 (expression -> variable_declaration NEWLINE .)


state 14

    (16) variable_declaration -> VAR IDENTIFIER . EQUAL calculate
    (17) variable_declaration -> VAR IDENTIFIER . EQUAL STRING
    (18) variable_declaration -> VAR IDENTIFIER . EQUAL string_plus
    (19) variable_declaration -> VAR IDENTIFIER .

    EQUAL           shift and go to state 24
    NEWLINE         reduce using rule 19 (variable_declaration -> VAR IDENTIFIER .)


state 15

    (14) variable_value_change -> IDENTIFIER EQUAL . calculate
    (15) variable_value_change -> IDENTIFIER EQUAL . string_plus
    (22) calculate -> . calculate PLUS calculate
    (23) calculate -> . calculate MINUS calculate
    (24) calculate -> . MINUS calculate
    (25) calculate -> . calculate MUL calculate
    (26) calculate -> . calculate DIV calculate
    (27) calculate -> . INT
    (28) calculate -> . FLOAT
    (29) calculate -> . IDENTIFIER
    (30) calculate -> . LSB calculate RSB
    (20) string_plus -> . string_plus PLUS STRING
    (21) string_plus -> . STRING

    MINUS           shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    IDENTIFIER      shift and go to state 25
    LSB             shift and go to state 31
    STRING          shift and go to state 32

    calculate                      shift and go to state 26
    string_plus                    shift and go to state 27

state 16

    (8) if_statement -> if_statement_head NEWLINE . TAB expression

    TAB             shift and go to state 33


state 17

    (9) if_statement_head -> IF condition . COLON
    (10) condition -> condition . LB INT

    COLON           shift and go to state 34
    LB              shift and go to state 35


state 18

    (11) condition -> INT .

    COLON           reduce using rule 11 (condition -> INT .)
    LB              reduce using rule 11 (condition -> INT .)


state 19

    (12) condition -> FLOAT .

    COLON           reduce using rule 12 (condition -> FLOAT .)
    LB              reduce using rule 12 (condition -> FLOAT .)


state 20

    (13) condition -> IDENTIFIER .

    COLON           reduce using rule 13 (condition -> IDENTIFIER .)
    LB              reduce using rule 13 (condition -> IDENTIFIER .)


state 21

    (1) expression -> expression variable_declaration NEWLINE .

    VAR             reduce using rule 1 (expression -> expression variable_declaration NEWLINE .)
    IDENTIFIER      reduce using rule 1 (expression -> expression variable_declaration NEWLINE .)
    IF              reduce using rule 1 (expression -> expression variable_declaration NEWLINE .)
    $end            reduce using rule 1 (expression -> expression variable_declaration NEWLINE .)
    NEWLINE         reduce using rule 1 (expression -> expression variable_declaration NEWLINE .)


state 22

    (2) expression -> expression variable_value_change NEWLINE .

    VAR             reduce using rule 2 (expression -> expression variable_value_change NEWLINE .)
    IDENTIFIER      reduce using rule 2 (expression -> expression variable_value_change NEWLINE .)
    IF              reduce using rule 2 (expression -> expression variable_value_change NEWLINE .)
    $end            reduce using rule 2 (expression -> expression variable_value_change NEWLINE .)
    NEWLINE         reduce using rule 2 (expression -> expression variable_value_change NEWLINE .)


state 23

    (3) expression -> expression if_statement NEWLINE .

    VAR             reduce using rule 3 (expression -> expression if_statement NEWLINE .)
    IDENTIFIER      reduce using rule 3 (expression -> expression if_statement NEWLINE .)
    IF              reduce using rule 3 (expression -> expression if_statement NEWLINE .)
    $end            reduce using rule 3 (expression -> expression if_statement NEWLINE .)
    NEWLINE         reduce using rule 3 (expression -> expression if_statement NEWLINE .)


state 24

    (16) variable_declaration -> VAR IDENTIFIER EQUAL . calculate
    (17) variable_declaration -> VAR IDENTIFIER EQUAL . STRING
    (18) variable_declaration -> VAR IDENTIFIER EQUAL . string_plus
    (22) calculate -> . calculate PLUS calculate
    (23) calculate -> . calculate MINUS calculate
    (24) calculate -> . MINUS calculate
    (25) calculate -> . calculate MUL calculate
    (26) calculate -> . calculate DIV calculate
    (27) calculate -> . INT
    (28) calculate -> . FLOAT
    (29) calculate -> . IDENTIFIER
    (30) calculate -> . LSB calculate RSB
    (20) string_plus -> . string_plus PLUS STRING
    (21) string_plus -> . STRING

    STRING          shift and go to state 37
    MINUS           shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    IDENTIFIER      shift and go to state 25
    LSB             shift and go to state 31

    calculate                      shift and go to state 36
    string_plus                    shift and go to state 38

state 25

    (29) calculate -> IDENTIFIER .

    PLUS            reduce using rule 29 (calculate -> IDENTIFIER .)
    MINUS           reduce using rule 29 (calculate -> IDENTIFIER .)
    MUL             reduce using rule 29 (calculate -> IDENTIFIER .)
    DIV             reduce using rule 29 (calculate -> IDENTIFIER .)
    VAR             reduce using rule 29 (calculate -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 29 (calculate -> IDENTIFIER .)
    IF              reduce using rule 29 (calculate -> IDENTIFIER .)
    $end            reduce using rule 29 (calculate -> IDENTIFIER .)
    NEWLINE         reduce using rule 29 (calculate -> IDENTIFIER .)
    RSB             reduce using rule 29 (calculate -> IDENTIFIER .)


state 26

    (14) variable_value_change -> IDENTIFIER EQUAL calculate .
    (22) calculate -> calculate . PLUS calculate
    (23) calculate -> calculate . MINUS calculate
    (25) calculate -> calculate . MUL calculate
    (26) calculate -> calculate . DIV calculate

    VAR             reduce using rule 14 (variable_value_change -> IDENTIFIER EQUAL calculate .)
    IDENTIFIER      reduce using rule 14 (variable_value_change -> IDENTIFIER EQUAL calculate .)
    IF              reduce using rule 14 (variable_value_change -> IDENTIFIER EQUAL calculate .)
    $end            reduce using rule 14 (variable_value_change -> IDENTIFIER EQUAL calculate .)
    NEWLINE         reduce using rule 14 (variable_value_change -> IDENTIFIER EQUAL calculate .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42


state 27

    (15) variable_value_change -> IDENTIFIER EQUAL string_plus .
    (20) string_plus -> string_plus . PLUS STRING

    VAR             reduce using rule 15 (variable_value_change -> IDENTIFIER EQUAL string_plus .)
    IDENTIFIER      reduce using rule 15 (variable_value_change -> IDENTIFIER EQUAL string_plus .)
    IF              reduce using rule 15 (variable_value_change -> IDENTIFIER EQUAL string_plus .)
    $end            reduce using rule 15 (variable_value_change -> IDENTIFIER EQUAL string_plus .)
    NEWLINE         reduce using rule 15 (variable_value_change -> IDENTIFIER EQUAL string_plus .)
    PLUS            shift and go to state 43


state 28

    (24) calculate -> MINUS . calculate
    (22) calculate -> . calculate PLUS calculate
    (23) calculate -> . calculate MINUS calculate
    (24) calculate -> . MINUS calculate
    (25) calculate -> . calculate MUL calculate
    (26) calculate -> . calculate DIV calculate
    (27) calculate -> . INT
    (28) calculate -> . FLOAT
    (29) calculate -> . IDENTIFIER
    (30) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    IDENTIFIER      shift and go to state 25
    LSB             shift and go to state 31

    calculate                      shift and go to state 44

state 29

    (27) calculate -> INT .

    PLUS            reduce using rule 27 (calculate -> INT .)
    MINUS           reduce using rule 27 (calculate -> INT .)
    MUL             reduce using rule 27 (calculate -> INT .)
    DIV             reduce using rule 27 (calculate -> INT .)
    VAR             reduce using rule 27 (calculate -> INT .)
    IDENTIFIER      reduce using rule 27 (calculate -> INT .)
    IF              reduce using rule 27 (calculate -> INT .)
    $end            reduce using rule 27 (calculate -> INT .)
    NEWLINE         reduce using rule 27 (calculate -> INT .)
    RSB             reduce using rule 27 (calculate -> INT .)


state 30

    (28) calculate -> FLOAT .

    PLUS            reduce using rule 28 (calculate -> FLOAT .)
    MINUS           reduce using rule 28 (calculate -> FLOAT .)
    MUL             reduce using rule 28 (calculate -> FLOAT .)
    DIV             reduce using rule 28 (calculate -> FLOAT .)
    VAR             reduce using rule 28 (calculate -> FLOAT .)
    IDENTIFIER      reduce using rule 28 (calculate -> FLOAT .)
    IF              reduce using rule 28 (calculate -> FLOAT .)
    $end            reduce using rule 28 (calculate -> FLOAT .)
    NEWLINE         reduce using rule 28 (calculate -> FLOAT .)
    RSB             reduce using rule 28 (calculate -> FLOAT .)


state 31

    (30) calculate -> LSB . calculate RSB
    (22) calculate -> . calculate PLUS calculate
    (23) calculate -> . calculate MINUS calculate
    (24) calculate -> . MINUS calculate
    (25) calculate -> . calculate MUL calculate
    (26) calculate -> . calculate DIV calculate
    (27) calculate -> . INT
    (28) calculate -> . FLOAT
    (29) calculate -> . IDENTIFIER
    (30) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    IDENTIFIER      shift and go to state 25
    LSB             shift and go to state 31

    calculate                      shift and go to state 45

state 32

    (21) string_plus -> STRING .

    PLUS            reduce using rule 21 (string_plus -> STRING .)
    VAR             reduce using rule 21 (string_plus -> STRING .)
    IDENTIFIER      reduce using rule 21 (string_plus -> STRING .)
    IF              reduce using rule 21 (string_plus -> STRING .)
    $end            reduce using rule 21 (string_plus -> STRING .)
    NEWLINE         reduce using rule 21 (string_plus -> STRING .)


state 33

    (8) if_statement -> if_statement_head NEWLINE TAB . expression
    (1) expression -> . expression variable_declaration NEWLINE
    (2) expression -> . expression variable_value_change NEWLINE
    (3) expression -> . expression if_statement NEWLINE
    (4) expression -> . variable_declaration NEWLINE
    (5) expression -> . variable_value_change
    (6) expression -> . if_statement
    (7) expression -> . NEWLINE
    (16) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (17) variable_declaration -> . VAR IDENTIFIER EQUAL STRING
    (18) variable_declaration -> . VAR IDENTIFIER EQUAL string_plus
    (19) variable_declaration -> . VAR IDENTIFIER
    (14) variable_value_change -> . IDENTIFIER EQUAL calculate
    (15) variable_value_change -> . IDENTIFIER EQUAL string_plus
    (8) if_statement -> . if_statement_head NEWLINE TAB expression
    (9) if_statement_head -> . IF condition COLON

    NEWLINE         shift and go to state 3
    VAR             shift and go to state 6
    IDENTIFIER      shift and go to state 7
    IF              shift and go to state 9

    if_statement_head              shift and go to state 8
    expression                     shift and go to state 46
    variable_declaration           shift and go to state 2
    variable_value_change          shift and go to state 4
    if_statement                   shift and go to state 5

state 34

    (9) if_statement_head -> IF condition COLON .

    NEWLINE         reduce using rule 9 (if_statement_head -> IF condition COLON .)


state 35

    (10) condition -> condition LB . INT

    INT             shift and go to state 47


state 36

    (16) variable_declaration -> VAR IDENTIFIER EQUAL calculate .
    (22) calculate -> calculate . PLUS calculate
    (23) calculate -> calculate . MINUS calculate
    (25) calculate -> calculate . MUL calculate
    (26) calculate -> calculate . DIV calculate

    NEWLINE         reduce using rule 16 (variable_declaration -> VAR IDENTIFIER EQUAL calculate .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42


state 37

    (17) variable_declaration -> VAR IDENTIFIER EQUAL STRING .
    (21) string_plus -> STRING .

  ! reduce/reduce conflict for NEWLINE resolved using rule 17 (variable_declaration -> VAR IDENTIFIER EQUAL STRING .)
    NEWLINE         reduce using rule 17 (variable_declaration -> VAR IDENTIFIER EQUAL STRING .)
    PLUS            reduce using rule 21 (string_plus -> STRING .)

  ! NEWLINE         [ reduce using rule 21 (string_plus -> STRING .) ]


state 38

    (18) variable_declaration -> VAR IDENTIFIER EQUAL string_plus .
    (20) string_plus -> string_plus . PLUS STRING

    NEWLINE         reduce using rule 18 (variable_declaration -> VAR IDENTIFIER EQUAL string_plus .)
    PLUS            shift and go to state 43


state 39

    (22) calculate -> calculate PLUS . calculate
    (22) calculate -> . calculate PLUS calculate
    (23) calculate -> . calculate MINUS calculate
    (24) calculate -> . MINUS calculate
    (25) calculate -> . calculate MUL calculate
    (26) calculate -> . calculate DIV calculate
    (27) calculate -> . INT
    (28) calculate -> . FLOAT
    (29) calculate -> . IDENTIFIER
    (30) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    IDENTIFIER      shift and go to state 25
    LSB             shift and go to state 31

    calculate                      shift and go to state 48

state 40

    (23) calculate -> calculate MINUS . calculate
    (22) calculate -> . calculate PLUS calculate
    (23) calculate -> . calculate MINUS calculate
    (24) calculate -> . MINUS calculate
    (25) calculate -> . calculate MUL calculate
    (26) calculate -> . calculate DIV calculate
    (27) calculate -> . INT
    (28) calculate -> . FLOAT
    (29) calculate -> . IDENTIFIER
    (30) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    IDENTIFIER      shift and go to state 25
    LSB             shift and go to state 31

    calculate                      shift and go to state 49

state 41

    (25) calculate -> calculate MUL . calculate
    (22) calculate -> . calculate PLUS calculate
    (23) calculate -> . calculate MINUS calculate
    (24) calculate -> . MINUS calculate
    (25) calculate -> . calculate MUL calculate
    (26) calculate -> . calculate DIV calculate
    (27) calculate -> . INT
    (28) calculate -> . FLOAT
    (29) calculate -> . IDENTIFIER
    (30) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    IDENTIFIER      shift and go to state 25
    LSB             shift and go to state 31

    calculate                      shift and go to state 50

state 42

    (26) calculate -> calculate DIV . calculate
    (22) calculate -> . calculate PLUS calculate
    (23) calculate -> . calculate MINUS calculate
    (24) calculate -> . MINUS calculate
    (25) calculate -> . calculate MUL calculate
    (26) calculate -> . calculate DIV calculate
    (27) calculate -> . INT
    (28) calculate -> . FLOAT
    (29) calculate -> . IDENTIFIER
    (30) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 28
    INT             shift and go to state 29
    FLOAT           shift and go to state 30
    IDENTIFIER      shift and go to state 25
    LSB             shift and go to state 31

    calculate                      shift and go to state 51

state 43

    (20) string_plus -> string_plus PLUS . STRING

    STRING          shift and go to state 52


state 44

    (24) calculate -> MINUS calculate .
    (22) calculate -> calculate . PLUS calculate
    (23) calculate -> calculate . MINUS calculate
    (25) calculate -> calculate . MUL calculate
    (26) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 24 (calculate -> MINUS calculate .)
    MINUS           reduce using rule 24 (calculate -> MINUS calculate .)
    MUL             reduce using rule 24 (calculate -> MINUS calculate .)
    DIV             reduce using rule 24 (calculate -> MINUS calculate .)
    VAR             reduce using rule 24 (calculate -> MINUS calculate .)
    IDENTIFIER      reduce using rule 24 (calculate -> MINUS calculate .)
    IF              reduce using rule 24 (calculate -> MINUS calculate .)
    $end            reduce using rule 24 (calculate -> MINUS calculate .)
    NEWLINE         reduce using rule 24 (calculate -> MINUS calculate .)
    RSB             reduce using rule 24 (calculate -> MINUS calculate .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! MUL             [ shift and go to state 41 ]
  ! DIV             [ shift and go to state 42 ]


state 45

    (30) calculate -> LSB calculate . RSB
    (22) calculate -> calculate . PLUS calculate
    (23) calculate -> calculate . MINUS calculate
    (25) calculate -> calculate . MUL calculate
    (26) calculate -> calculate . DIV calculate

    RSB             shift and go to state 53
    PLUS            shift and go to state 39
    MINUS           shift and go to state 40
    MUL             shift and go to state 41
    DIV             shift and go to state 42


state 46

    (8) if_statement -> if_statement_head NEWLINE TAB expression .
    (1) expression -> expression . variable_declaration NEWLINE
    (2) expression -> expression . variable_value_change NEWLINE
    (3) expression -> expression . if_statement NEWLINE
    (16) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (17) variable_declaration -> . VAR IDENTIFIER EQUAL STRING
    (18) variable_declaration -> . VAR IDENTIFIER EQUAL string_plus
    (19) variable_declaration -> . VAR IDENTIFIER
    (14) variable_value_change -> . IDENTIFIER EQUAL calculate
    (15) variable_value_change -> . IDENTIFIER EQUAL string_plus
    (8) if_statement -> . if_statement_head NEWLINE TAB expression
    (9) if_statement_head -> . IF condition COLON

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    $end            reduce using rule 8 (if_statement -> if_statement_head NEWLINE TAB expression .)
    NEWLINE         reduce using rule 8 (if_statement -> if_statement_head NEWLINE TAB expression .)
    VAR             shift and go to state 6
    IDENTIFIER      shift and go to state 7
    IF              shift and go to state 9

  ! VAR             [ reduce using rule 8 (if_statement -> if_statement_head NEWLINE TAB expression .) ]
  ! IDENTIFIER      [ reduce using rule 8 (if_statement -> if_statement_head NEWLINE TAB expression .) ]
  ! IF              [ reduce using rule 8 (if_statement -> if_statement_head NEWLINE TAB expression .) ]

    if_statement_head              shift and go to state 8
    variable_declaration           shift and go to state 10
    variable_value_change          shift and go to state 11
    if_statement                   shift and go to state 12

state 47

    (10) condition -> condition LB INT .

    COLON           reduce using rule 10 (condition -> condition LB INT .)
    LB              reduce using rule 10 (condition -> condition LB INT .)


state 48

    (22) calculate -> calculate PLUS calculate .
    (22) calculate -> calculate . PLUS calculate
    (23) calculate -> calculate . MINUS calculate
    (25) calculate -> calculate . MUL calculate
    (26) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 22 (calculate -> calculate PLUS calculate .)
    MINUS           reduce using rule 22 (calculate -> calculate PLUS calculate .)
    VAR             reduce using rule 22 (calculate -> calculate PLUS calculate .)
    IDENTIFIER      reduce using rule 22 (calculate -> calculate PLUS calculate .)
    IF              reduce using rule 22 (calculate -> calculate PLUS calculate .)
    $end            reduce using rule 22 (calculate -> calculate PLUS calculate .)
    NEWLINE         reduce using rule 22 (calculate -> calculate PLUS calculate .)
    RSB             reduce using rule 22 (calculate -> calculate PLUS calculate .)
    MUL             shift and go to state 41
    DIV             shift and go to state 42

  ! MUL             [ reduce using rule 22 (calculate -> calculate PLUS calculate .) ]
  ! DIV             [ reduce using rule 22 (calculate -> calculate PLUS calculate .) ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]


state 49

    (23) calculate -> calculate MINUS calculate .
    (22) calculate -> calculate . PLUS calculate
    (23) calculate -> calculate . MINUS calculate
    (25) calculate -> calculate . MUL calculate
    (26) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 23 (calculate -> calculate MINUS calculate .)
    MINUS           reduce using rule 23 (calculate -> calculate MINUS calculate .)
    VAR             reduce using rule 23 (calculate -> calculate MINUS calculate .)
    IDENTIFIER      reduce using rule 23 (calculate -> calculate MINUS calculate .)
    IF              reduce using rule 23 (calculate -> calculate MINUS calculate .)
    $end            reduce using rule 23 (calculate -> calculate MINUS calculate .)
    NEWLINE         reduce using rule 23 (calculate -> calculate MINUS calculate .)
    RSB             reduce using rule 23 (calculate -> calculate MINUS calculate .)
    MUL             shift and go to state 41
    DIV             shift and go to state 42

  ! MUL             [ reduce using rule 23 (calculate -> calculate MINUS calculate .) ]
  ! DIV             [ reduce using rule 23 (calculate -> calculate MINUS calculate .) ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]


state 50

    (25) calculate -> calculate MUL calculate .
    (22) calculate -> calculate . PLUS calculate
    (23) calculate -> calculate . MINUS calculate
    (25) calculate -> calculate . MUL calculate
    (26) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 25 (calculate -> calculate MUL calculate .)
    MINUS           reduce using rule 25 (calculate -> calculate MUL calculate .)
    MUL             reduce using rule 25 (calculate -> calculate MUL calculate .)
    DIV             reduce using rule 25 (calculate -> calculate MUL calculate .)
    VAR             reduce using rule 25 (calculate -> calculate MUL calculate .)
    IDENTIFIER      reduce using rule 25 (calculate -> calculate MUL calculate .)
    IF              reduce using rule 25 (calculate -> calculate MUL calculate .)
    $end            reduce using rule 25 (calculate -> calculate MUL calculate .)
    NEWLINE         reduce using rule 25 (calculate -> calculate MUL calculate .)
    RSB             reduce using rule 25 (calculate -> calculate MUL calculate .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! MUL             [ shift and go to state 41 ]
  ! DIV             [ shift and go to state 42 ]


state 51

    (26) calculate -> calculate DIV calculate .
    (22) calculate -> calculate . PLUS calculate
    (23) calculate -> calculate . MINUS calculate
    (25) calculate -> calculate . MUL calculate
    (26) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 26 (calculate -> calculate DIV calculate .)
    MINUS           reduce using rule 26 (calculate -> calculate DIV calculate .)
    MUL             reduce using rule 26 (calculate -> calculate DIV calculate .)
    DIV             reduce using rule 26 (calculate -> calculate DIV calculate .)
    VAR             reduce using rule 26 (calculate -> calculate DIV calculate .)
    IDENTIFIER      reduce using rule 26 (calculate -> calculate DIV calculate .)
    IF              reduce using rule 26 (calculate -> calculate DIV calculate .)
    $end            reduce using rule 26 (calculate -> calculate DIV calculate .)
    NEWLINE         reduce using rule 26 (calculate -> calculate DIV calculate .)
    RSB             reduce using rule 26 (calculate -> calculate DIV calculate .)

  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 40 ]
  ! MUL             [ shift and go to state 41 ]
  ! DIV             [ shift and go to state 42 ]


state 52

    (20) string_plus -> string_plus PLUS STRING .

    PLUS            reduce using rule 20 (string_plus -> string_plus PLUS STRING .)
    VAR             reduce using rule 20 (string_plus -> string_plus PLUS STRING .)
    IDENTIFIER      reduce using rule 20 (string_plus -> string_plus PLUS STRING .)
    IF              reduce using rule 20 (string_plus -> string_plus PLUS STRING .)
    $end            reduce using rule 20 (string_plus -> string_plus PLUS STRING .)
    NEWLINE         reduce using rule 20 (string_plus -> string_plus PLUS STRING .)


state 53

    (30) calculate -> LSB calculate RSB .

    PLUS            reduce using rule 30 (calculate -> LSB calculate RSB .)
    MINUS           reduce using rule 30 (calculate -> LSB calculate RSB .)
    MUL             reduce using rule 30 (calculate -> LSB calculate RSB .)
    DIV             reduce using rule 30 (calculate -> LSB calculate RSB .)
    VAR             reduce using rule 30 (calculate -> LSB calculate RSB .)
    IDENTIFIER      reduce using rule 30 (calculate -> LSB calculate RSB .)
    IF              reduce using rule 30 (calculate -> LSB calculate RSB .)
    $end            reduce using rule 30 (calculate -> LSB calculate RSB .)
    NEWLINE         reduce using rule 30 (calculate -> LSB calculate RSB .)
    RSB             reduce using rule 30 (calculate -> LSB calculate RSB .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 46 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 46 resolved as shift
WARNING: shift/reduce conflict for IF in state 46 resolved as shift
WARNING: reduce/reduce conflict in state 37 resolved using rule (variable_declaration -> VAR IDENTIFIER EQUAL STRING)
WARNING: rejected rule (string_plus -> STRING) in state 37
