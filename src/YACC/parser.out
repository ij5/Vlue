Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CATCH
    CLASS
    COLON
    COMMA
    DEBUG
    DIV
    DOT
    ELSE
    FLOAT
    FOR
    FUNCTION
    GLOBAL
    IDENTIFIER
    IN
    LIST
    MUL
    PYTHON
    REPEAT
    SEMI
    STRING
    TRY
    USE
    VAR
    WHILE

Grammar

Rule 0     S' -> statement
Rule 1     statement -> statement expression
Rule 2     statement -> statement if_statement
Rule 3     statement -> expression
Rule 4     statement -> if_statement
Rule 5     if_statement -> IF LSB expression RSB LMB statement RMB
Rule 6     expression -> condition
Rule 7     expression -> empty
Rule 8     condition -> INT operator INT
Rule 9     operator -> LB
Rule 10    operator -> RB
Rule 11    operator -> LB EQUAL
Rule 12    operator -> RB EQUAL
Rule 13    operator -> PLUS
Rule 14    operator -> MINUS
Rule 15    operator -> EQUAL
Rule 16    operator -> empty
Rule 17    empty -> <empty>

Terminals, with rules where they appear

CATCH                : 
CLASS                : 
COLON                : 
COMMA                : 
DEBUG                : 
DIV                  : 
DOT                  : 
ELSE                 : 
EQUAL                : 11 12 15
FLOAT                : 
FOR                  : 
FUNCTION             : 
GLOBAL               : 
IDENTIFIER           : 
IF                   : 5
IN                   : 
INT                  : 8 8
LB                   : 9 11
LIST                 : 
LMB                  : 5
LSB                  : 5
MINUS                : 14
MUL                  : 
PLUS                 : 13
PYTHON               : 
RB                   : 10 12
REPEAT               : 
RMB                  : 5
RSB                  : 5
SEMI                 : 
STRING               : 
TRY                  : 
USE                  : 
VAR                  : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

condition            : 6
empty                : 7 16
expression           : 1 3 5
if_statement         : 2 4
operator             : 8
statement            : 1 2 5 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . statement expression
    (2) statement -> . statement if_statement
    (3) statement -> . expression
    (4) statement -> . if_statement
    (6) expression -> . condition
    (7) expression -> . empty
    (5) if_statement -> . IF LSB expression RSB LMB statement RMB
    (8) condition -> . INT operator INT
    (17) empty -> .

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    IF              shift and go to state 6
    INT             shift and go to state 7
    $end            reduce using rule 17 (empty -> .)

  ! IF              [ reduce using rule 17 (empty -> .) ]
  ! INT             [ reduce using rule 17 (empty -> .) ]

    statement                      shift and go to state 1
    expression                     shift and go to state 2
    if_statement                   shift and go to state 3
    condition                      shift and go to state 4
    empty                          shift and go to state 5

state 1

    (0) S' -> statement .
    (1) statement -> statement . expression
    (2) statement -> statement . if_statement
    (6) expression -> . condition
    (7) expression -> . empty
    (5) if_statement -> . IF LSB expression RSB LMB statement RMB
    (8) condition -> . INT operator INT
    (17) empty -> .

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
