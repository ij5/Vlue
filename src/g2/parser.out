Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> root
Rule 1     root -> NEWLINE root
Rule 2     root -> head NEWLINE body
Rule 3     root -> head elements
Rule 4     root -> head
Rule 5     body -> TAB root
Rule 6     body -> TAB elements
Rule 7     elements -> elements IDENTIFIER
Rule 8     elements -> elements EQUAL
Rule 9     elements -> elements OTHER
Rule 10    elements -> IDENTIFIER
Rule 11    elements -> EQUAL
Rule 12    elements -> OTHER
Rule 13    head -> IDENTIFIER attr COLON
Rule 14    head -> IDENTIFIER empty COLON
Rule 15    attr -> attr_equal
Rule 16    attr -> empty
Rule 17    attr_equal -> IDENTIFIER EQUAL SQ other SQ
Rule 18    attr_equal -> IDENTIFIER EQUAL DQ other DQ
Rule 19    other -> other EQUAL
Rule 20    other -> other COMMA
Rule 21    other -> other COLON
Rule 22    other -> other IDENTIFIER
Rule 23    other -> other OTHER
Rule 24    other -> EQUAL
Rule 25    other -> COMMA
Rule 26    other -> COLON
Rule 27    other -> IDENTIFIER
Rule 28    other -> OTHER
Rule 29    empty -> <empty>

Terminals, with rules where they appear

COLON                : 13 14 21 26
COMMA                : 20 25
DQ                   : 18 18
EQUAL                : 8 11 17 18 19 24
IDENTIFIER           : 7 10 13 14 17 18 22 27
NEWLINE              : 1 2
OTHER                : 9 12 23 28
SQ                   : 17 17
TAB                  : 5 6
error                : 

Nonterminals, with rules where they appear

attr                 : 13
attr_equal           : 15
body                 : 2
elements             : 3 6 7 8 9
empty                : 14 16
head                 : 2 3 4
other                : 17 18 19 20 21 22 23
root                 : 1 5 0

Parsing method: LALR

state 0

    (0) S' -> . root
    (1) root -> . NEWLINE root
    (2) root -> . head NEWLINE body
    (3) root -> . head elements
    (4) root -> . head
    (13) head -> . IDENTIFIER attr COLON
    (14) head -> . IDENTIFIER empty COLON

    NEWLINE         shift and go to state 2
    IDENTIFIER      shift and go to state 4

    root                           shift and go to state 1
    head                           shift and go to state 3

state 1

    (0) S' -> root .



state 2

    (1) root -> NEWLINE . root
    (1) root -> . NEWLINE root
    (2) root -> . head NEWLINE body
    (3) root -> . head elements
    (4) root -> . head
    (13) head -> . IDENTIFIER attr COLON
    (14) head -> . IDENTIFIER empty COLON

    NEWLINE         shift and go to state 2
    IDENTIFIER      shift and go to state 4

    root                           shift and go to state 5
    head                           shift and go to state 3

state 3

    (2) root -> head . NEWLINE body
    (3) root -> head . elements
    (4) root -> head .
    (7) elements -> . elements IDENTIFIER
    (8) elements -> . elements EQUAL
    (9) elements -> . elements OTHER
    (10) elements -> . IDENTIFIER
    (11) elements -> . EQUAL
    (12) elements -> . OTHER

    NEWLINE         shift and go to state 6
    $end            reduce using rule 4 (root -> head .)
    IDENTIFIER      shift and go to state 8
    EQUAL           shift and go to state 9
    OTHER           shift and go to state 10

    elements                       shift and go to state 7

state 4

    (13) head -> IDENTIFIER . attr COLON
    (14) head -> IDENTIFIER . empty COLON
    (15) attr -> . attr_equal
    (16) attr -> . empty
    (29) empty -> .
    (17) attr_equal -> . IDENTIFIER EQUAL SQ other SQ
    (18) attr_equal -> . IDENTIFIER EQUAL DQ other DQ

    COLON           reduce using rule 29 (empty -> .)
    IDENTIFIER      shift and go to state 11

    attr                           shift and go to state 12
    empty                          shift and go to state 13
    attr_equal                     shift and go to state 14

state 5

    (1) root -> NEWLINE root .

    $end            reduce using rule 1 (root -> NEWLINE root .)


state 6

    (2) root -> head NEWLINE . body
    (5) body -> . TAB root
    (6) body -> . TAB elements

    TAB             shift and go to state 16

    body                           shift and go to state 15

state 7

    (3) root -> head elements .
    (7) elements -> elements . IDENTIFIER
    (8) elements -> elements . EQUAL
    (9) elements -> elements . OTHER

    $end            reduce using rule 3 (root -> head elements .)
    IDENTIFIER      shift and go to state 17
    EQUAL           shift and go to state 18
    OTHER           shift and go to state 19


state 8

    (10) elements -> IDENTIFIER .

    IDENTIFIER      reduce using rule 10 (elements -> IDENTIFIER .)
    EQUAL           reduce using rule 10 (elements -> IDENTIFIER .)
    OTHER           reduce using rule 10 (elements -> IDENTIFIER .)
    $end            reduce using rule 10 (elements -> IDENTIFIER .)


state 9

    (11) elements -> EQUAL .

    IDENTIFIER      reduce using rule 11 (elements -> EQUAL .)
    EQUAL           reduce using rule 11 (elements -> EQUAL .)
    OTHER           reduce using rule 11 (elements -> EQUAL .)
    $end            reduce using rule 11 (elements -> EQUAL .)


state 10

    (12) elements -> OTHER .

    IDENTIFIER      reduce using rule 12 (elements -> OTHER .)
    EQUAL           reduce using rule 12 (elements -> OTHER .)
    OTHER           reduce using rule 12 (elements -> OTHER .)
    $end            reduce using rule 12 (elements -> OTHER .)


state 11

    (17) attr_equal -> IDENTIFIER . EQUAL SQ other SQ
    (18) attr_equal -> IDENTIFIER . EQUAL DQ other DQ

    EQUAL           shift and go to state 20


state 12

    (13) head -> IDENTIFIER attr . COLON

    COLON           shift and go to state 21


state 13

    (14) head -> IDENTIFIER empty . COLON
    (16) attr -> empty .

  ! shift/reduce conflict for COLON resolved as shift
    COLON           shift and go to state 22

  ! COLON           [ reduce using rule 16 (attr -> empty .) ]


state 14

    (15) attr -> attr_equal .

    COLON           reduce using rule 15 (attr -> attr_equal .)


state 15

    (2) root -> head NEWLINE body .

    $end            reduce using rule 2 (root -> head NEWLINE body .)


state 16

    (5) body -> TAB . root
    (6) body -> TAB . elements
    (1) root -> . NEWLINE root
    (2) root -> . head NEWLINE body
    (3) root -> . head elements
    (4) root -> . head
    (7) elements -> . elements IDENTIFIER
    (8) elements -> . elements EQUAL
    (9) elements -> . elements OTHER
    (10) elements -> . IDENTIFIER
    (11) elements -> . EQUAL
    (12) elements -> . OTHER
    (13) head -> . IDENTIFIER attr COLON
    (14) head -> . IDENTIFIER empty COLON

    NEWLINE         shift and go to state 2
    IDENTIFIER      shift and go to state 25
    EQUAL           shift and go to state 9
    OTHER           shift and go to state 10

    root                           shift and go to state 23
    elements                       shift and go to state 24
    head                           shift and go to state 3

state 17

    (7) elements -> elements IDENTIFIER .

    IDENTIFIER      reduce using rule 7 (elements -> elements IDENTIFIER .)
    EQUAL           reduce using rule 7 (elements -> elements IDENTIFIER .)
    OTHER           reduce using rule 7 (elements -> elements IDENTIFIER .)
    $end            reduce using rule 7 (elements -> elements IDENTIFIER .)


state 18

    (8) elements -> elements EQUAL .

    IDENTIFIER      reduce using rule 8 (elements -> elements EQUAL .)
    EQUAL           reduce using rule 8 (elements -> elements EQUAL .)
    OTHER           reduce using rule 8 (elements -> elements EQUAL .)
    $end            reduce using rule 8 (elements -> elements EQUAL .)


state 19

    (9) elements -> elements OTHER .

    IDENTIFIER      reduce using rule 9 (elements -> elements OTHER .)
    EQUAL           reduce using rule 9 (elements -> elements OTHER .)
    OTHER           reduce using rule 9 (elements -> elements OTHER .)
    $end            reduce using rule 9 (elements -> elements OTHER .)


state 20

    (17) attr_equal -> IDENTIFIER EQUAL . SQ other SQ
    (18) attr_equal -> IDENTIFIER EQUAL . DQ other DQ

    SQ              shift and go to state 26
    DQ              shift and go to state 27


state 21

    (13) head -> IDENTIFIER attr COLON .

    NEWLINE         reduce using rule 13 (head -> IDENTIFIER attr COLON .)
    IDENTIFIER      reduce using rule 13 (head -> IDENTIFIER attr COLON .)
    EQUAL           reduce using rule 13 (head -> IDENTIFIER attr COLON .)
    OTHER           reduce using rule 13 (head -> IDENTIFIER attr COLON .)
    $end            reduce using rule 13 (head -> IDENTIFIER attr COLON .)


state 22

    (14) head -> IDENTIFIER empty COLON .

    NEWLINE         reduce using rule 14 (head -> IDENTIFIER empty COLON .)
    IDENTIFIER      reduce using rule 14 (head -> IDENTIFIER empty COLON .)
    EQUAL           reduce using rule 14 (head -> IDENTIFIER empty COLON .)
    OTHER           reduce using rule 14 (head -> IDENTIFIER empty COLON .)
    $end            reduce using rule 14 (head -> IDENTIFIER empty COLON .)


state 23

    (5) body -> TAB root .

    $end            reduce using rule 5 (body -> TAB root .)


state 24

    (6) body -> TAB elements .
    (7) elements -> elements . IDENTIFIER
    (8) elements -> elements . EQUAL
    (9) elements -> elements . OTHER

    $end            reduce using rule 6 (body -> TAB elements .)
    IDENTIFIER      shift and go to state 17
    EQUAL           shift and go to state 18
    OTHER           shift and go to state 19


state 25

    (10) elements -> IDENTIFIER .
    (13) head -> IDENTIFIER . attr COLON
    (14) head -> IDENTIFIER . empty COLON
    (15) attr -> . attr_equal
    (16) attr -> . empty
    (29) empty -> .
    (17) attr_equal -> . IDENTIFIER EQUAL SQ other SQ
    (18) attr_equal -> . IDENTIFIER EQUAL DQ other DQ

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    EQUAL           reduce using rule 10 (elements -> IDENTIFIER .)
    OTHER           reduce using rule 10 (elements -> IDENTIFIER .)
    $end            reduce using rule 10 (elements -> IDENTIFIER .)
    COLON           reduce using rule 29 (empty -> .)
    IDENTIFIER      shift and go to state 11

  ! IDENTIFIER      [ reduce using rule 10 (elements -> IDENTIFIER .) ]

    attr                           shift and go to state 12
    empty                          shift and go to state 13
    attr_equal                     shift and go to state 14

state 26

    (17) attr_equal -> IDENTIFIER EQUAL SQ . other SQ
    (19) other -> . other EQUAL
    (20) other -> . other COMMA
    (21) other -> . other COLON
    (22) other -> . other IDENTIFIER
    (23) other -> . other OTHER
    (24) other -> . EQUAL
    (25) other -> . COMMA
    (26) other -> . COLON
    (27) other -> . IDENTIFIER
    (28) other -> . OTHER

    EQUAL           shift and go to state 29
    COMMA           shift and go to state 31
    COLON           shift and go to state 32
    IDENTIFIER      shift and go to state 28
    OTHER           shift and go to state 33

    other                          shift and go to state 30

state 27

    (18) attr_equal -> IDENTIFIER EQUAL DQ . other DQ
    (19) other -> . other EQUAL
    (20) other -> . other COMMA
    (21) other -> . other COLON
    (22) other -> . other IDENTIFIER
    (23) other -> . other OTHER
    (24) other -> . EQUAL
    (25) other -> . COMMA
    (26) other -> . COLON
    (27) other -> . IDENTIFIER
    (28) other -> . OTHER

    EQUAL           shift and go to state 29
    COMMA           shift and go to state 31
    COLON           shift and go to state 32
    IDENTIFIER      shift and go to state 28
    OTHER           shift and go to state 33

    other                          shift and go to state 34

state 28

    (27) other -> IDENTIFIER .

    SQ              reduce using rule 27 (other -> IDENTIFIER .)
    EQUAL           reduce using rule 27 (other -> IDENTIFIER .)
    COMMA           reduce using rule 27 (other -> IDENTIFIER .)
    COLON           reduce using rule 27 (other -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 27 (other -> IDENTIFIER .)
    OTHER           reduce using rule 27 (other -> IDENTIFIER .)
    DQ              reduce using rule 27 (other -> IDENTIFIER .)


state 29

    (24) other -> EQUAL .

    SQ              reduce using rule 24 (other -> EQUAL .)
    EQUAL           reduce using rule 24 (other -> EQUAL .)
    COMMA           reduce using rule 24 (other -> EQUAL .)
    COLON           reduce using rule 24 (other -> EQUAL .)
    IDENTIFIER      reduce using rule 24 (other -> EQUAL .)
    OTHER           reduce using rule 24 (other -> EQUAL .)
    DQ              reduce using rule 24 (other -> EQUAL .)


state 30

    (17) attr_equal -> IDENTIFIER EQUAL SQ other . SQ
    (19) other -> other . EQUAL
    (20) other -> other . COMMA
    (21) other -> other . COLON
    (22) other -> other . IDENTIFIER
    (23) other -> other . OTHER

    SQ              shift and go to state 37
    EQUAL           shift and go to state 36
    COMMA           shift and go to state 38
    COLON           shift and go to state 39
    IDENTIFIER      shift and go to state 35
    OTHER           shift and go to state 40


state 31

    (25) other -> COMMA .

    SQ              reduce using rule 25 (other -> COMMA .)
    EQUAL           reduce using rule 25 (other -> COMMA .)
    COMMA           reduce using rule 25 (other -> COMMA .)
    COLON           reduce using rule 25 (other -> COMMA .)
    IDENTIFIER      reduce using rule 25 (other -> COMMA .)
    OTHER           reduce using rule 25 (other -> COMMA .)
    DQ              reduce using rule 25 (other -> COMMA .)


state 32

    (26) other -> COLON .

    SQ              reduce using rule 26 (other -> COLON .)
    EQUAL           reduce using rule 26 (other -> COLON .)
    COMMA           reduce using rule 26 (other -> COLON .)
    COLON           reduce using rule 26 (other -> COLON .)
    IDENTIFIER      reduce using rule 26 (other -> COLON .)
    OTHER           reduce using rule 26 (other -> COLON .)
    DQ              reduce using rule 26 (other -> COLON .)


state 33

    (28) other -> OTHER .

    SQ              reduce using rule 28 (other -> OTHER .)
    EQUAL           reduce using rule 28 (other -> OTHER .)
    COMMA           reduce using rule 28 (other -> OTHER .)
    COLON           reduce using rule 28 (other -> OTHER .)
    IDENTIFIER      reduce using rule 28 (other -> OTHER .)
    OTHER           reduce using rule 28 (other -> OTHER .)
    DQ              reduce using rule 28 (other -> OTHER .)


state 34

    (18) attr_equal -> IDENTIFIER EQUAL DQ other . DQ
    (19) other -> other . EQUAL
    (20) other -> other . COMMA
    (21) other -> other . COLON
    (22) other -> other . IDENTIFIER
    (23) other -> other . OTHER

    DQ              shift and go to state 41
    EQUAL           shift and go to state 36
    COMMA           shift and go to state 38
    COLON           shift and go to state 39
    IDENTIFIER      shift and go to state 35
    OTHER           shift and go to state 40


state 35

    (22) other -> other IDENTIFIER .

    SQ              reduce using rule 22 (other -> other IDENTIFIER .)
    EQUAL           reduce using rule 22 (other -> other IDENTIFIER .)
    COMMA           reduce using rule 22 (other -> other IDENTIFIER .)
    COLON           reduce using rule 22 (other -> other IDENTIFIER .)
    IDENTIFIER      reduce using rule 22 (other -> other IDENTIFIER .)
    OTHER           reduce using rule 22 (other -> other IDENTIFIER .)
    DQ              reduce using rule 22 (other -> other IDENTIFIER .)


state 36

    (19) other -> other EQUAL .

    SQ              reduce using rule 19 (other -> other EQUAL .)
    EQUAL           reduce using rule 19 (other -> other EQUAL .)
    COMMA           reduce using rule 19 (other -> other EQUAL .)
    COLON           reduce using rule 19 (other -> other EQUAL .)
    IDENTIFIER      reduce using rule 19 (other -> other EQUAL .)
    OTHER           reduce using rule 19 (other -> other EQUAL .)
    DQ              reduce using rule 19 (other -> other EQUAL .)


state 37

    (17) attr_equal -> IDENTIFIER EQUAL SQ other SQ .

    COLON           reduce using rule 17 (attr_equal -> IDENTIFIER EQUAL SQ other SQ .)


state 38

    (20) other -> other COMMA .

    SQ              reduce using rule 20 (other -> other COMMA .)
    EQUAL           reduce using rule 20 (other -> other COMMA .)
    COMMA           reduce using rule 20 (other -> other COMMA .)
    COLON           reduce using rule 20 (other -> other COMMA .)
    IDENTIFIER      reduce using rule 20 (other -> other COMMA .)
    OTHER           reduce using rule 20 (other -> other COMMA .)
    DQ              reduce using rule 20 (other -> other COMMA .)


state 39

    (21) other -> other COLON .

    SQ              reduce using rule 21 (other -> other COLON .)
    EQUAL           reduce using rule 21 (other -> other COLON .)
    COMMA           reduce using rule 21 (other -> other COLON .)
    COLON           reduce using rule 21 (other -> other COLON .)
    IDENTIFIER      reduce using rule 21 (other -> other COLON .)
    OTHER           reduce using rule 21 (other -> other COLON .)
    DQ              reduce using rule 21 (other -> other COLON .)


state 40

    (23) other -> other OTHER .

    SQ              reduce using rule 23 (other -> other OTHER .)
    EQUAL           reduce using rule 23 (other -> other OTHER .)
    COMMA           reduce using rule 23 (other -> other OTHER .)
    COLON           reduce using rule 23 (other -> other OTHER .)
    IDENTIFIER      reduce using rule 23 (other -> other OTHER .)
    OTHER           reduce using rule 23 (other -> other OTHER .)
    DQ              reduce using rule 23 (other -> other OTHER .)


state 41

    (18) attr_equal -> IDENTIFIER EQUAL DQ other DQ .

    COLON           reduce using rule 18 (attr_equal -> IDENTIFIER EQUAL DQ other DQ .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COLON in state 13 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 25 resolved as shift
