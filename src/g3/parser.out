Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    ELSE

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression variable_declaration SEMI
Rule 2     expression -> expression variable_value_change SEMI
Rule 3     expression -> expression if_statement SEMI
Rule 4     expression -> variable_declaration SEMI
Rule 5     expression -> variable_value_change SEMI
Rule 6     expression -> if_statement SEMI
Rule 7     if_statement -> if_statement_head if_statement_body
Rule 8     if_statement_head -> IF LSB condition RSB
Rule 9     if_statement_body -> LMB expression RMB
Rule 10    condition -> condition LB calculate
Rule 11    condition -> condition RB calculate
Rule 12    condition -> condition LB EQUAL calculate
Rule 13    condition -> condition RB EQUAL calculate
Rule 14    condition -> calculate
Rule 15    variable_value_change -> IDENTIFIER EQUAL calculate
Rule 16    variable_value_change -> IDENTIFIER EQUAL string_plus
Rule 17    variable_declaration -> VAR IDENTIFIER EQUAL calculate
Rule 18    variable_declaration -> VAR IDENTIFIER EQUAL string_plus
Rule 19    variable_declaration -> VAR IDENTIFIER
Rule 20    string_plus -> string_plus PLUS STRING
Rule 21    string_plus -> STRING
Rule 22    string_plus -> IDENTIFIER
Rule 23    calculate -> calculate PLUS calculate
Rule 24    calculate -> calculate MINUS calculate
Rule 25    calculate -> MINUS calculate
Rule 26    calculate -> calculate MUL calculate
Rule 27    calculate -> calculate DIV calculate
Rule 28    calculate -> INT
Rule 29    calculate -> FLOAT
Rule 30    calculate -> IDENTIFIER
Rule 31    calculate -> LSB calculate RSB

Terminals, with rules where they appear

COLON                : 
DIV                  : 27
ELSE                 : 
EQUAL                : 12 13 15 16 17 18
FLOAT                : 29
IDENTIFIER           : 15 16 17 18 19 22 30
IF                   : 8
INT                  : 28
LB                   : 10 12
LMB                  : 9
LSB                  : 8 31
MINUS                : 24 25
MUL                  : 26
PLUS                 : 20 23
RB                   : 11 13
RMB                  : 9
RSB                  : 8 31
SEMI                 : 1 2 3 4 5 6
STRING               : 20 21
VAR                  : 17 18 19
error                : 

Nonterminals, with rules where they appear

calculate            : 10 11 12 13 14 15 17 23 23 24 24 25 26 26 27 27 31
condition            : 8 10 11 12 13
expression           : 1 2 3 9 0
if_statement         : 3 6
if_statement_body    : 7
if_statement_head    : 7
string_plus          : 16 18 20
variable_declaration : 1 4
variable_value_change : 2 5

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression variable_declaration SEMI
    (2) expression -> . expression variable_value_change SEMI
    (3) expression -> . expression if_statement SEMI
    (4) expression -> . variable_declaration SEMI
    (5) expression -> . variable_value_change SEMI
    (6) expression -> . if_statement SEMI
    (17) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (18) variable_declaration -> . VAR IDENTIFIER EQUAL string_plus
    (19) variable_declaration -> . VAR IDENTIFIER
    (15) variable_value_change -> . IDENTIFIER EQUAL calculate
    (16) variable_value_change -> . IDENTIFIER EQUAL string_plus
    (7) if_statement -> . if_statement_head if_statement_body
    (8) if_statement_head -> . IF LSB condition RSB

    VAR             shift and go to state 5
    IDENTIFIER      shift and go to state 6
    IF              shift and go to state 8

    expression                     shift and go to state 1
    variable_declaration           shift and go to state 2
    variable_value_change          shift and go to state 3
    if_statement                   shift and go to state 4
    if_statement_head              shift and go to state 7

state 1

    (0) S' -> expression .
    (1) expression -> expression . variable_declaration SEMI
    (2) expression -> expression . variable_value_change SEMI
    (3) expression -> expression . if_statement SEMI
    (17) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (18) variable_declaration -> . VAR IDENTIFIER EQUAL string_plus
    (19) variable_declaration -> . VAR IDENTIFIER
    (15) variable_value_change -> . IDENTIFIER EQUAL calculate
    (16) variable_value_change -> . IDENTIFIER EQUAL string_plus
    (7) if_statement -> . if_statement_head if_statement_body
    (8) if_statement_head -> . IF LSB condition RSB

    VAR             shift and go to state 5
    IDENTIFIER      shift and go to state 6
    IF              shift and go to state 8

    variable_declaration           shift and go to state 9
    variable_value_change          shift and go to state 10
    if_statement                   shift and go to state 11
    if_statement_head              shift and go to state 7

state 2

    (4) expression -> variable_declaration . SEMI

    SEMI            shift and go to state 12


state 3

    (5) expression -> variable_value_change . SEMI

    SEMI            shift and go to state 13


state 4

    (6) expression -> if_statement . SEMI

    SEMI            shift and go to state 14


state 5

    (17) variable_declaration -> VAR . IDENTIFIER EQUAL calculate
    (18) variable_declaration -> VAR . IDENTIFIER EQUAL string_plus
    (19) variable_declaration -> VAR . IDENTIFIER

    IDENTIFIER      shift and go to state 15


state 6

    (15) variable_value_change -> IDENTIFIER . EQUAL calculate
    (16) variable_value_change -> IDENTIFIER . EQUAL string_plus

    EQUAL           shift and go to state 16


state 7

    (7) if_statement -> if_statement_head . if_statement_body
    (9) if_statement_body -> . LMB expression RMB

    LMB             shift and go to state 18

    if_statement_body              shift and go to state 17

state 8

    (8) if_statement_head -> IF . LSB condition RSB

    LSB             shift and go to state 19


state 9

    (1) expression -> expression variable_declaration . SEMI

    SEMI            shift and go to state 20


state 10

    (2) expression -> expression variable_value_change . SEMI

    SEMI            shift and go to state 21


state 11

    (3) expression -> expression if_statement . SEMI

    SEMI            shift and go to state 22


state 12

    (4) expression -> variable_declaration SEMI .

    VAR             reduce using rule 4 (expression -> variable_declaration SEMI .)
    IDENTIFIER      reduce using rule 4 (expression -> variable_declaration SEMI .)
    IF              reduce using rule 4 (expression -> variable_declaration SEMI .)
    $end            reduce using rule 4 (expression -> variable_declaration SEMI .)
    RMB             reduce using rule 4 (expression -> variable_declaration SEMI .)


state 13

    (5) expression -> variable_value_change SEMI .

    VAR             reduce using rule 5 (expression -> variable_value_change SEMI .)
    IDENTIFIER      reduce using rule 5 (expression -> variable_value_change SEMI .)
    IF              reduce using rule 5 (expression -> variable_value_change SEMI .)
    $end            reduce using rule 5 (expression -> variable_value_change SEMI .)
    RMB             reduce using rule 5 (expression -> variable_value_change SEMI .)


state 14

    (6) expression -> if_statement SEMI .

    VAR             reduce using rule 6 (expression -> if_statement SEMI .)
    IDENTIFIER      reduce using rule 6 (expression -> if_statement SEMI .)
    IF              reduce using rule 6 (expression -> if_statement SEMI .)
    $end            reduce using rule 6 (expression -> if_statement SEMI .)
    RMB             reduce using rule 6 (expression -> if_statement SEMI .)


state 15

    (17) variable_declaration -> VAR IDENTIFIER . EQUAL calculate
    (18) variable_declaration -> VAR IDENTIFIER . EQUAL string_plus
    (19) variable_declaration -> VAR IDENTIFIER .

    EQUAL           shift and go to state 23
    SEMI            reduce using rule 19 (variable_declaration -> VAR IDENTIFIER .)


state 16

    (15) variable_value_change -> IDENTIFIER EQUAL . calculate
    (16) variable_value_change -> IDENTIFIER EQUAL . string_plus
    (23) calculate -> . calculate PLUS calculate
    (24) calculate -> . calculate MINUS calculate
    (25) calculate -> . MINUS calculate
    (26) calculate -> . calculate MUL calculate
    (27) calculate -> . calculate DIV calculate
    (28) calculate -> . INT
    (29) calculate -> . FLOAT
    (30) calculate -> . IDENTIFIER
    (31) calculate -> . LSB calculate RSB
    (20) string_plus -> . string_plus PLUS STRING
    (21) string_plus -> . STRING
    (22) string_plus -> . IDENTIFIER

    MINUS           shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30
    STRING          shift and go to state 31

    calculate                      shift and go to state 25
    string_plus                    shift and go to state 26

state 17

    (7) if_statement -> if_statement_head if_statement_body .

    SEMI            reduce using rule 7 (if_statement -> if_statement_head if_statement_body .)


state 18

    (9) if_statement_body -> LMB . expression RMB
    (1) expression -> . expression variable_declaration SEMI
    (2) expression -> . expression variable_value_change SEMI
    (3) expression -> . expression if_statement SEMI
    (4) expression -> . variable_declaration SEMI
    (5) expression -> . variable_value_change SEMI
    (6) expression -> . if_statement SEMI
    (17) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (18) variable_declaration -> . VAR IDENTIFIER EQUAL string_plus
    (19) variable_declaration -> . VAR IDENTIFIER
    (15) variable_value_change -> . IDENTIFIER EQUAL calculate
    (16) variable_value_change -> . IDENTIFIER EQUAL string_plus
    (7) if_statement -> . if_statement_head if_statement_body
    (8) if_statement_head -> . IF LSB condition RSB

    VAR             shift and go to state 5
    IDENTIFIER      shift and go to state 6
    IF              shift and go to state 8

    expression                     shift and go to state 32
    variable_declaration           shift and go to state 2
    variable_value_change          shift and go to state 3
    if_statement                   shift and go to state 4
    if_statement_head              shift and go to state 7

state 19

    (8) if_statement_head -> IF LSB . condition RSB
    (10) condition -> . condition LB calculate
    (11) condition -> . condition RB calculate
    (12) condition -> . condition LB EQUAL calculate
    (13) condition -> . condition RB EQUAL calculate
    (14) condition -> . calculate
    (23) calculate -> . calculate PLUS calculate
    (24) calculate -> . calculate MINUS calculate
    (25) calculate -> . MINUS calculate
    (26) calculate -> . calculate MUL calculate
    (27) calculate -> . calculate DIV calculate
    (28) calculate -> . INT
    (29) calculate -> . FLOAT
    (30) calculate -> . IDENTIFIER
    (31) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    IDENTIFIER      shift and go to state 35
    LSB             shift and go to state 30

    condition                      shift and go to state 33
    calculate                      shift and go to state 34

state 20

    (1) expression -> expression variable_declaration SEMI .

    VAR             reduce using rule 1 (expression -> expression variable_declaration SEMI .)
    IDENTIFIER      reduce using rule 1 (expression -> expression variable_declaration SEMI .)
    IF              reduce using rule 1 (expression -> expression variable_declaration SEMI .)
    $end            reduce using rule 1 (expression -> expression variable_declaration SEMI .)
    RMB             reduce using rule 1 (expression -> expression variable_declaration SEMI .)


state 21

    (2) expression -> expression variable_value_change SEMI .

    VAR             reduce using rule 2 (expression -> expression variable_value_change SEMI .)
    IDENTIFIER      reduce using rule 2 (expression -> expression variable_value_change SEMI .)
    IF              reduce using rule 2 (expression -> expression variable_value_change SEMI .)
    $end            reduce using rule 2 (expression -> expression variable_value_change SEMI .)
    RMB             reduce using rule 2 (expression -> expression variable_value_change SEMI .)


state 22

    (3) expression -> expression if_statement SEMI .

    VAR             reduce using rule 3 (expression -> expression if_statement SEMI .)
    IDENTIFIER      reduce using rule 3 (expression -> expression if_statement SEMI .)
    IF              reduce using rule 3 (expression -> expression if_statement SEMI .)
    $end            reduce using rule 3 (expression -> expression if_statement SEMI .)
    RMB             reduce using rule 3 (expression -> expression if_statement SEMI .)


state 23

    (17) variable_declaration -> VAR IDENTIFIER EQUAL . calculate
    (18) variable_declaration -> VAR IDENTIFIER EQUAL . string_plus
    (23) calculate -> . calculate PLUS calculate
    (24) calculate -> . calculate MINUS calculate
    (25) calculate -> . MINUS calculate
    (26) calculate -> . calculate MUL calculate
    (27) calculate -> . calculate DIV calculate
    (28) calculate -> . INT
    (29) calculate -> . FLOAT
    (30) calculate -> . IDENTIFIER
    (31) calculate -> . LSB calculate RSB
    (20) string_plus -> . string_plus PLUS STRING
    (21) string_plus -> . STRING
    (22) string_plus -> . IDENTIFIER

    MINUS           shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    IDENTIFIER      shift and go to state 24
    LSB             shift and go to state 30
    STRING          shift and go to state 31

    calculate                      shift and go to state 36
    string_plus                    shift and go to state 37

state 24

    (30) calculate -> IDENTIFIER .
    (22) string_plus -> IDENTIFIER .

  ! reduce/reduce conflict for PLUS resolved using rule 22 (string_plus -> IDENTIFIER .)
  ! reduce/reduce conflict for SEMI resolved using rule 22 (string_plus -> IDENTIFIER .)
    MINUS           reduce using rule 30 (calculate -> IDENTIFIER .)
    MUL             reduce using rule 30 (calculate -> IDENTIFIER .)
    DIV             reduce using rule 30 (calculate -> IDENTIFIER .)
    PLUS            reduce using rule 22 (string_plus -> IDENTIFIER .)
    SEMI            reduce using rule 22 (string_plus -> IDENTIFIER .)

  ! PLUS            [ reduce using rule 30 (calculate -> IDENTIFIER .) ]
  ! SEMI            [ reduce using rule 30 (calculate -> IDENTIFIER .) ]


state 25

    (15) variable_value_change -> IDENTIFIER EQUAL calculate .
    (23) calculate -> calculate . PLUS calculate
    (24) calculate -> calculate . MINUS calculate
    (26) calculate -> calculate . MUL calculate
    (27) calculate -> calculate . DIV calculate

    SEMI            reduce using rule 15 (variable_value_change -> IDENTIFIER EQUAL calculate .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41


state 26

    (16) variable_value_change -> IDENTIFIER EQUAL string_plus .
    (20) string_plus -> string_plus . PLUS STRING

    SEMI            reduce using rule 16 (variable_value_change -> IDENTIFIER EQUAL string_plus .)
    PLUS            shift and go to state 42


state 27

    (25) calculate -> MINUS . calculate
    (23) calculate -> . calculate PLUS calculate
    (24) calculate -> . calculate MINUS calculate
    (25) calculate -> . MINUS calculate
    (26) calculate -> . calculate MUL calculate
    (27) calculate -> . calculate DIV calculate
    (28) calculate -> . INT
    (29) calculate -> . FLOAT
    (30) calculate -> . IDENTIFIER
    (31) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    IDENTIFIER      shift and go to state 35
    LSB             shift and go to state 30

    calculate                      shift and go to state 43

state 28

    (28) calculate -> INT .

    PLUS            reduce using rule 28 (calculate -> INT .)
    MINUS           reduce using rule 28 (calculate -> INT .)
    MUL             reduce using rule 28 (calculate -> INT .)
    DIV             reduce using rule 28 (calculate -> INT .)
    SEMI            reduce using rule 28 (calculate -> INT .)
    RSB             reduce using rule 28 (calculate -> INT .)
    LB              reduce using rule 28 (calculate -> INT .)
    RB              reduce using rule 28 (calculate -> INT .)


state 29

    (29) calculate -> FLOAT .

    PLUS            reduce using rule 29 (calculate -> FLOAT .)
    MINUS           reduce using rule 29 (calculate -> FLOAT .)
    MUL             reduce using rule 29 (calculate -> FLOAT .)
    DIV             reduce using rule 29 (calculate -> FLOAT .)
    SEMI            reduce using rule 29 (calculate -> FLOAT .)
    RSB             reduce using rule 29 (calculate -> FLOAT .)
    LB              reduce using rule 29 (calculate -> FLOAT .)
    RB              reduce using rule 29 (calculate -> FLOAT .)


state 30

    (31) calculate -> LSB . calculate RSB
    (23) calculate -> . calculate PLUS calculate
    (24) calculate -> . calculate MINUS calculate
    (25) calculate -> . MINUS calculate
    (26) calculate -> . calculate MUL calculate
    (27) calculate -> . calculate DIV calculate
    (28) calculate -> . INT
    (29) calculate -> . FLOAT
    (30) calculate -> . IDENTIFIER
    (31) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    IDENTIFIER      shift and go to state 35
    LSB             shift and go to state 30

    calculate                      shift and go to state 44

state 31

    (21) string_plus -> STRING .

    PLUS            reduce using rule 21 (string_plus -> STRING .)
    SEMI            reduce using rule 21 (string_plus -> STRING .)


state 32

    (9) if_statement_body -> LMB expression . RMB
    (1) expression -> expression . variable_declaration SEMI
    (2) expression -> expression . variable_value_change SEMI
    (3) expression -> expression . if_statement SEMI
    (17) variable_declaration -> . VAR IDENTIFIER EQUAL calculate
    (18) variable_declaration -> . VAR IDENTIFIER EQUAL string_plus
    (19) variable_declaration -> . VAR IDENTIFIER
    (15) variable_value_change -> . IDENTIFIER EQUAL calculate
    (16) variable_value_change -> . IDENTIFIER EQUAL string_plus
    (7) if_statement -> . if_statement_head if_statement_body
    (8) if_statement_head -> . IF LSB condition RSB

    RMB             shift and go to state 45
    VAR             shift and go to state 5
    IDENTIFIER      shift and go to state 6
    IF              shift and go to state 8

    variable_declaration           shift and go to state 9
    variable_value_change          shift and go to state 10
    if_statement                   shift and go to state 11
    if_statement_head              shift and go to state 7

state 33

    (8) if_statement_head -> IF LSB condition . RSB
    (10) condition -> condition . LB calculate
    (11) condition -> condition . RB calculate
    (12) condition -> condition . LB EQUAL calculate
    (13) condition -> condition . RB EQUAL calculate

    RSB             shift and go to state 46
    LB              shift and go to state 47
    RB              shift and go to state 48


state 34

    (14) condition -> calculate .
    (23) calculate -> calculate . PLUS calculate
    (24) calculate -> calculate . MINUS calculate
    (26) calculate -> calculate . MUL calculate
    (27) calculate -> calculate . DIV calculate

    RSB             reduce using rule 14 (condition -> calculate .)
    LB              reduce using rule 14 (condition -> calculate .)
    RB              reduce using rule 14 (condition -> calculate .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41


state 35

    (30) calculate -> IDENTIFIER .

    PLUS            reduce using rule 30 (calculate -> IDENTIFIER .)
    MINUS           reduce using rule 30 (calculate -> IDENTIFIER .)
    MUL             reduce using rule 30 (calculate -> IDENTIFIER .)
    DIV             reduce using rule 30 (calculate -> IDENTIFIER .)
    RSB             reduce using rule 30 (calculate -> IDENTIFIER .)
    LB              reduce using rule 30 (calculate -> IDENTIFIER .)
    RB              reduce using rule 30 (calculate -> IDENTIFIER .)
    SEMI            reduce using rule 30 (calculate -> IDENTIFIER .)


state 36

    (17) variable_declaration -> VAR IDENTIFIER EQUAL calculate .
    (23) calculate -> calculate . PLUS calculate
    (24) calculate -> calculate . MINUS calculate
    (26) calculate -> calculate . MUL calculate
    (27) calculate -> calculate . DIV calculate

    SEMI            reduce using rule 17 (variable_declaration -> VAR IDENTIFIER EQUAL calculate .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41


state 37

    (18) variable_declaration -> VAR IDENTIFIER EQUAL string_plus .
    (20) string_plus -> string_plus . PLUS STRING

    SEMI            reduce using rule 18 (variable_declaration -> VAR IDENTIFIER EQUAL string_plus .)
    PLUS            shift and go to state 42


state 38

    (23) calculate -> calculate PLUS . calculate
    (23) calculate -> . calculate PLUS calculate
    (24) calculate -> . calculate MINUS calculate
    (25) calculate -> . MINUS calculate
    (26) calculate -> . calculate MUL calculate
    (27) calculate -> . calculate DIV calculate
    (28) calculate -> . INT
    (29) calculate -> . FLOAT
    (30) calculate -> . IDENTIFIER
    (31) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    IDENTIFIER      shift and go to state 35
    LSB             shift and go to state 30

    calculate                      shift and go to state 49

state 39

    (24) calculate -> calculate MINUS . calculate
    (23) calculate -> . calculate PLUS calculate
    (24) calculate -> . calculate MINUS calculate
    (25) calculate -> . MINUS calculate
    (26) calculate -> . calculate MUL calculate
    (27) calculate -> . calculate DIV calculate
    (28) calculate -> . INT
    (29) calculate -> . FLOAT
    (30) calculate -> . IDENTIFIER
    (31) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    IDENTIFIER      shift and go to state 35
    LSB             shift and go to state 30

    calculate                      shift and go to state 50

state 40

    (26) calculate -> calculate MUL . calculate
    (23) calculate -> . calculate PLUS calculate
    (24) calculate -> . calculate MINUS calculate
    (25) calculate -> . MINUS calculate
    (26) calculate -> . calculate MUL calculate
    (27) calculate -> . calculate DIV calculate
    (28) calculate -> . INT
    (29) calculate -> . FLOAT
    (30) calculate -> . IDENTIFIER
    (31) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    IDENTIFIER      shift and go to state 35
    LSB             shift and go to state 30

    calculate                      shift and go to state 51

state 41

    (27) calculate -> calculate DIV . calculate
    (23) calculate -> . calculate PLUS calculate
    (24) calculate -> . calculate MINUS calculate
    (25) calculate -> . MINUS calculate
    (26) calculate -> . calculate MUL calculate
    (27) calculate -> . calculate DIV calculate
    (28) calculate -> . INT
    (29) calculate -> . FLOAT
    (30) calculate -> . IDENTIFIER
    (31) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    IDENTIFIER      shift and go to state 35
    LSB             shift and go to state 30

    calculate                      shift and go to state 52

state 42

    (20) string_plus -> string_plus PLUS . STRING

    STRING          shift and go to state 53


state 43

    (25) calculate -> MINUS calculate .
    (23) calculate -> calculate . PLUS calculate
    (24) calculate -> calculate . MINUS calculate
    (26) calculate -> calculate . MUL calculate
    (27) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 25 (calculate -> MINUS calculate .)
    MINUS           reduce using rule 25 (calculate -> MINUS calculate .)
    MUL             reduce using rule 25 (calculate -> MINUS calculate .)
    DIV             reduce using rule 25 (calculate -> MINUS calculate .)
    SEMI            reduce using rule 25 (calculate -> MINUS calculate .)
    RSB             reduce using rule 25 (calculate -> MINUS calculate .)
    LB              reduce using rule 25 (calculate -> MINUS calculate .)
    RB              reduce using rule 25 (calculate -> MINUS calculate .)

  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]
  ! MUL             [ shift and go to state 40 ]
  ! DIV             [ shift and go to state 41 ]


state 44

    (31) calculate -> LSB calculate . RSB
    (23) calculate -> calculate . PLUS calculate
    (24) calculate -> calculate . MINUS calculate
    (26) calculate -> calculate . MUL calculate
    (27) calculate -> calculate . DIV calculate

    RSB             shift and go to state 54
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41


state 45

    (9) if_statement_body -> LMB expression RMB .

    SEMI            reduce using rule 9 (if_statement_body -> LMB expression RMB .)


state 46

    (8) if_statement_head -> IF LSB condition RSB .

    LMB             reduce using rule 8 (if_statement_head -> IF LSB condition RSB .)


state 47

    (10) condition -> condition LB . calculate
    (12) condition -> condition LB . EQUAL calculate
    (23) calculate -> . calculate PLUS calculate
    (24) calculate -> . calculate MINUS calculate
    (25) calculate -> . MINUS calculate
    (26) calculate -> . calculate MUL calculate
    (27) calculate -> . calculate DIV calculate
    (28) calculate -> . INT
    (29) calculate -> . FLOAT
    (30) calculate -> . IDENTIFIER
    (31) calculate -> . LSB calculate RSB

    EQUAL           shift and go to state 56
    MINUS           shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    IDENTIFIER      shift and go to state 35
    LSB             shift and go to state 30

    calculate                      shift and go to state 55

state 48

    (11) condition -> condition RB . calculate
    (13) condition -> condition RB . EQUAL calculate
    (23) calculate -> . calculate PLUS calculate
    (24) calculate -> . calculate MINUS calculate
    (25) calculate -> . MINUS calculate
    (26) calculate -> . calculate MUL calculate
    (27) calculate -> . calculate DIV calculate
    (28) calculate -> . INT
    (29) calculate -> . FLOAT
    (30) calculate -> . IDENTIFIER
    (31) calculate -> . LSB calculate RSB

    EQUAL           shift and go to state 58
    MINUS           shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    IDENTIFIER      shift and go to state 35
    LSB             shift and go to state 30

    calculate                      shift and go to state 57

state 49

    (23) calculate -> calculate PLUS calculate .
    (23) calculate -> calculate . PLUS calculate
    (24) calculate -> calculate . MINUS calculate
    (26) calculate -> calculate . MUL calculate
    (27) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 23 (calculate -> calculate PLUS calculate .)
    MINUS           reduce using rule 23 (calculate -> calculate PLUS calculate .)
    SEMI            reduce using rule 23 (calculate -> calculate PLUS calculate .)
    RSB             reduce using rule 23 (calculate -> calculate PLUS calculate .)
    LB              reduce using rule 23 (calculate -> calculate PLUS calculate .)
    RB              reduce using rule 23 (calculate -> calculate PLUS calculate .)
    MUL             shift and go to state 40
    DIV             shift and go to state 41

  ! MUL             [ reduce using rule 23 (calculate -> calculate PLUS calculate .) ]
  ! DIV             [ reduce using rule 23 (calculate -> calculate PLUS calculate .) ]
  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]


state 50

    (24) calculate -> calculate MINUS calculate .
    (23) calculate -> calculate . PLUS calculate
    (24) calculate -> calculate . MINUS calculate
    (26) calculate -> calculate . MUL calculate
    (27) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 24 (calculate -> calculate MINUS calculate .)
    MINUS           reduce using rule 24 (calculate -> calculate MINUS calculate .)
    SEMI            reduce using rule 24 (calculate -> calculate MINUS calculate .)
    RSB             reduce using rule 24 (calculate -> calculate MINUS calculate .)
    LB              reduce using rule 24 (calculate -> calculate MINUS calculate .)
    RB              reduce using rule 24 (calculate -> calculate MINUS calculate .)
    MUL             shift and go to state 40
    DIV             shift and go to state 41

  ! MUL             [ reduce using rule 24 (calculate -> calculate MINUS calculate .) ]
  ! DIV             [ reduce using rule 24 (calculate -> calculate MINUS calculate .) ]
  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]


state 51

    (26) calculate -> calculate MUL calculate .
    (23) calculate -> calculate . PLUS calculate
    (24) calculate -> calculate . MINUS calculate
    (26) calculate -> calculate . MUL calculate
    (27) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 26 (calculate -> calculate MUL calculate .)
    MINUS           reduce using rule 26 (calculate -> calculate MUL calculate .)
    MUL             reduce using rule 26 (calculate -> calculate MUL calculate .)
    DIV             reduce using rule 26 (calculate -> calculate MUL calculate .)
    SEMI            reduce using rule 26 (calculate -> calculate MUL calculate .)
    RSB             reduce using rule 26 (calculate -> calculate MUL calculate .)
    LB              reduce using rule 26 (calculate -> calculate MUL calculate .)
    RB              reduce using rule 26 (calculate -> calculate MUL calculate .)

  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]
  ! MUL             [ shift and go to state 40 ]
  ! DIV             [ shift and go to state 41 ]


state 52

    (27) calculate -> calculate DIV calculate .
    (23) calculate -> calculate . PLUS calculate
    (24) calculate -> calculate . MINUS calculate
    (26) calculate -> calculate . MUL calculate
    (27) calculate -> calculate . DIV calculate

    PLUS            reduce using rule 27 (calculate -> calculate DIV calculate .)
    MINUS           reduce using rule 27 (calculate -> calculate DIV calculate .)
    MUL             reduce using rule 27 (calculate -> calculate DIV calculate .)
    DIV             reduce using rule 27 (calculate -> calculate DIV calculate .)
    SEMI            reduce using rule 27 (calculate -> calculate DIV calculate .)
    RSB             reduce using rule 27 (calculate -> calculate DIV calculate .)
    LB              reduce using rule 27 (calculate -> calculate DIV calculate .)
    RB              reduce using rule 27 (calculate -> calculate DIV calculate .)

  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]
  ! MUL             [ shift and go to state 40 ]
  ! DIV             [ shift and go to state 41 ]


state 53

    (20) string_plus -> string_plus PLUS STRING .

    PLUS            reduce using rule 20 (string_plus -> string_plus PLUS STRING .)
    SEMI            reduce using rule 20 (string_plus -> string_plus PLUS STRING .)


state 54

    (31) calculate -> LSB calculate RSB .

    PLUS            reduce using rule 31 (calculate -> LSB calculate RSB .)
    MINUS           reduce using rule 31 (calculate -> LSB calculate RSB .)
    MUL             reduce using rule 31 (calculate -> LSB calculate RSB .)
    DIV             reduce using rule 31 (calculate -> LSB calculate RSB .)
    SEMI            reduce using rule 31 (calculate -> LSB calculate RSB .)
    RSB             reduce using rule 31 (calculate -> LSB calculate RSB .)
    LB              reduce using rule 31 (calculate -> LSB calculate RSB .)
    RB              reduce using rule 31 (calculate -> LSB calculate RSB .)


state 55

    (10) condition -> condition LB calculate .
    (23) calculate -> calculate . PLUS calculate
    (24) calculate -> calculate . MINUS calculate
    (26) calculate -> calculate . MUL calculate
    (27) calculate -> calculate . DIV calculate

    RSB             reduce using rule 10 (condition -> condition LB calculate .)
    LB              reduce using rule 10 (condition -> condition LB calculate .)
    RB              reduce using rule 10 (condition -> condition LB calculate .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41


state 56

    (12) condition -> condition LB EQUAL . calculate
    (23) calculate -> . calculate PLUS calculate
    (24) calculate -> . calculate MINUS calculate
    (25) calculate -> . MINUS calculate
    (26) calculate -> . calculate MUL calculate
    (27) calculate -> . calculate DIV calculate
    (28) calculate -> . INT
    (29) calculate -> . FLOAT
    (30) calculate -> . IDENTIFIER
    (31) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    IDENTIFIER      shift and go to state 35
    LSB             shift and go to state 30

    calculate                      shift and go to state 59

state 57

    (11) condition -> condition RB calculate .
    (23) calculate -> calculate . PLUS calculate
    (24) calculate -> calculate . MINUS calculate
    (26) calculate -> calculate . MUL calculate
    (27) calculate -> calculate . DIV calculate

    RSB             reduce using rule 11 (condition -> condition RB calculate .)
    LB              reduce using rule 11 (condition -> condition RB calculate .)
    RB              reduce using rule 11 (condition -> condition RB calculate .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41


state 58

    (13) condition -> condition RB EQUAL . calculate
    (23) calculate -> . calculate PLUS calculate
    (24) calculate -> . calculate MINUS calculate
    (25) calculate -> . MINUS calculate
    (26) calculate -> . calculate MUL calculate
    (27) calculate -> . calculate DIV calculate
    (28) calculate -> . INT
    (29) calculate -> . FLOAT
    (30) calculate -> . IDENTIFIER
    (31) calculate -> . LSB calculate RSB

    MINUS           shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    IDENTIFIER      shift and go to state 35
    LSB             shift and go to state 30

    calculate                      shift and go to state 60

state 59

    (12) condition -> condition LB EQUAL calculate .
    (23) calculate -> calculate . PLUS calculate
    (24) calculate -> calculate . MINUS calculate
    (26) calculate -> calculate . MUL calculate
    (27) calculate -> calculate . DIV calculate

    RSB             reduce using rule 12 (condition -> condition LB EQUAL calculate .)
    LB              reduce using rule 12 (condition -> condition LB EQUAL calculate .)
    RB              reduce using rule 12 (condition -> condition LB EQUAL calculate .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41


state 60

    (13) condition -> condition RB EQUAL calculate .
    (23) calculate -> calculate . PLUS calculate
    (24) calculate -> calculate . MINUS calculate
    (26) calculate -> calculate . MUL calculate
    (27) calculate -> calculate . DIV calculate

    RSB             reduce using rule 13 (condition -> condition RB EQUAL calculate .)
    LB              reduce using rule 13 (condition -> condition RB EQUAL calculate .)
    RB              reduce using rule 13 (condition -> condition RB EQUAL calculate .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    MUL             shift and go to state 40
    DIV             shift and go to state 41

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 24 resolved using rule (string_plus -> IDENTIFIER)
WARNING: rejected rule (calculate -> IDENTIFIER) in state 24
