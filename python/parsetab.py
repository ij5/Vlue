
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA EQUAL ESCAPE IDENTIFIER LMB LSB OTHER RMB RSB\n    root : head_expr inside\n    \n    root : head_expr\n    \n    root : root root\n    \n    inside : LMB inside_content RMB\n        | LMB root RMB\n        | empty\n    \n    inside_content : attr\n        | empty\n    \n    head_expr : IDENTIFIER elements_outside\n    \n    elements_outside : LSB elements_inside_comma RSB\n    \n    elements_inside_comma : elements_inside_equal COMMA elements_inside_equal\n    \n    elements_inside_comma : elements_inside_equal\n        | empty\n    \n    elements_inside_equal : attr_root EQUAL attr_root\n    \n    attr_root : attr attr\n    attr_root : attr\n    attr : attr IDENTIFIER\n        | attr OTHER\n    \n    attr : IDENTIFIER\n        | OTHER\n    empty : '
    
_lr_action_items = {'IDENTIFIER':([0,1,2,4,5,6,7,8,9,11,12,14,15,20,21,22,23,24,25,26,27,28,29,30,31,],[3,3,-2,3,-1,14,-6,-9,21,3,24,-19,-20,30,-19,-4,-5,-17,-18,-10,21,21,24,-17,-18,]),'$end':([1,2,4,5,7,8,22,23,26,],[0,-2,-3,-1,-6,-9,-4,-5,-10,]),'RMB':([2,4,5,6,7,8,10,11,12,13,14,15,22,23,24,25,26,],[-2,-3,-1,-21,-6,-9,22,23,-7,-8,-19,-20,-4,-5,-17,-18,-10,]),'LMB':([2,8,26,],[6,-9,-10,]),'LSB':([3,14,],[9,9,]),'OTHER':([6,9,12,14,15,20,21,24,25,27,28,29,30,31,],[15,15,25,-19,-20,31,-19,-17,-18,15,15,25,-17,-18,]),'RSB':([9,15,16,17,18,20,21,24,25,29,30,31,32,33,],[-21,-20,26,-12,-13,-16,-19,-17,-18,-15,-17,-18,-11,-14,]),'EQUAL':([15,19,20,21,24,25,29,30,31,],[-20,28,-16,-19,-17,-18,-15,-17,-18,]),'COMMA':([15,17,20,21,24,25,29,30,31,33,],[-20,27,-16,-19,-17,-18,-15,-17,-18,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'root':([0,1,4,6,11,],[1,4,4,11,4,]),'head_expr':([0,1,4,6,11,],[2,2,2,2,2,]),'inside':([2,],[5,]),'empty':([2,6,9,],[7,13,18,]),'elements_outside':([3,14,],[8,8,]),'inside_content':([6,],[10,]),'attr':([6,9,20,27,28,],[12,20,29,20,20,]),'elements_inside_comma':([9,],[16,]),'elements_inside_equal':([9,27,],[17,32,]),'attr_root':([9,27,28,],[19,19,33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> root","S'",1,None,None,None),
  ('root -> head_expr inside','root',2,'p_root','parser.py',12),
  ('root -> head_expr','root',1,'p_root2','parser.py',20),
  ('root -> root root','root',2,'p_root3','parser.py',26),
  ('inside -> LMB inside_content RMB','inside',3,'p_inside','parser.py',35),
  ('inside -> LMB root RMB','inside',3,'p_inside','parser.py',36),
  ('inside -> empty','inside',1,'p_inside','parser.py',37),
  ('inside_content -> attr','inside_content',1,'p_inside_content','parser.py',46),
  ('inside_content -> empty','inside_content',1,'p_inside_content','parser.py',47),
  ('head_expr -> IDENTIFIER elements_outside','head_expr',2,'p_head','parser.py',56),
  ('elements_outside -> LSB elements_inside_comma RSB','elements_outside',3,'p_elements_outside','parser.py',65),
  ('elements_inside_comma -> elements_inside_equal COMMA elements_inside_equal','elements_inside_comma',3,'p_elements_inside_comma1','parser.py',71),
  ('elements_inside_comma -> elements_inside_equal','elements_inside_comma',1,'p_elements_inside_comma2','parser.py',77),
  ('elements_inside_comma -> empty','elements_inside_comma',1,'p_elements_inside_comma2','parser.py',78),
  ('elements_inside_equal -> attr_root EQUAL attr_root','elements_inside_equal',3,'p_elements_inside_equal','parser.py',87),
  ('attr_root -> attr attr','attr_root',2,'p_attr0','parser.py',93),
  ('attr_root -> attr','attr_root',1,'p_attr00','parser.py',98),
  ('attr -> attr IDENTIFIER','attr',2,'p_attr1','parser.py',103),
  ('attr -> attr OTHER','attr',2,'p_attr1','parser.py',104),
  ('attr -> IDENTIFIER','attr',1,'p_attr2','parser.py',110),
  ('attr -> OTHER','attr',1,'p_attr2','parser.py',111),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',117),
]
