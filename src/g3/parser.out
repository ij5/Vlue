Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NEWLINE

Grammar

Rule 0     S' -> variable_declaration
Rule 1     variable_declaration -> VAR IDENTIFIER
Rule 2     variable_declaration -> VAR IDENTIFIER EQUAL INT

Terminals, with rules where they appear

EQUAL                : 2
IDENTIFIER           : 1 2
INT                  : 2
NEWLINE              : 
VAR                  : 1 2
error                : 

Nonterminals, with rules where they appear

variable_declaration : 0

Parsing method: LALR

state 0

    (0) S' -> . variable_declaration
    (1) variable_declaration -> . VAR IDENTIFIER
    (2) variable_declaration -> . VAR IDENTIFIER EQUAL INT

    VAR             shift and go to state 2

    variable_declaration           shift and go to state 1

state 1

    (0) S' -> variable_declaration .



state 2

    (1) variable_declaration -> VAR . IDENTIFIER
    (2) variable_declaration -> VAR . IDENTIFIER EQUAL INT

    IDENTIFIER      shift and go to state 3


state 3

    (1) variable_declaration -> VAR IDENTIFIER .
    (2) variable_declaration -> VAR IDENTIFIER . EQUAL INT

    $end            reduce using rule 1 (variable_declaration -> VAR IDENTIFIER .)
    EQUAL           shift and go to state 4


state 4

    (2) variable_declaration -> VAR IDENTIFIER EQUAL . INT

    INT             shift and go to state 5


state 5

    (2) variable_declaration -> VAR IDENTIFIER EQUAL INT .

    $end            reduce using rule 2 (variable_declaration -> VAR IDENTIFIER EQUAL INT .)

