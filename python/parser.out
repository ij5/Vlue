Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    A
    BODY
    DIV
    HEAD
    HTML
    LMB
    RMB

Grammar

Rule 0     S' -> elements_outside
Rule 1     elements_outside -> LSB elements_inside_comma RSB
Rule 2     elements_inside_comma -> elements_inside_equal COMMA elements_inside_equal
Rule 3     elements_inside_comma -> elements_inside_equal
Rule 4     elements_inside_equal -> attr EQUAL attr
Rule 5     attr -> attr IDENTIFIER
Rule 6     attr -> attr OTHER
Rule 7     attr -> IDENTIFIER
Rule 8     attr -> OTHER

Terminals, with rules where they appear

A                    : 
BODY                 : 
COMMA                : 2
DIV                  : 
EQUAL                : 4
HEAD                 : 
HTML                 : 
IDENTIFIER           : 5 7
LMB                  : 
LSB                  : 1
OTHER                : 6 8
RMB                  : 
RSB                  : 1
error                : 

Nonterminals, with rules where they appear

attr                 : 4 4 5 6
elements_inside_comma : 1
elements_inside_equal : 2 2 3
elements_outside     : 0

Parsing method: LALR

state 0

    (0) S' -> . elements_outside
    (1) elements_outside -> . LSB elements_inside_comma RSB

    LSB             shift and go to state 2

    elements_outside               shift and go to state 1

state 1

    (0) S' -> elements_outside .



state 2

    (1) elements_outside -> LSB . elements_inside_comma RSB
    (2) elements_inside_comma -> . elements_inside_equal COMMA elements_inside_equal
    (3) elements_inside_comma -> . elements_inside_equal
    (4) elements_inside_equal -> . attr EQUAL attr
    (5) attr -> . attr IDENTIFIER
    (6) attr -> . attr OTHER
    (7) attr -> . IDENTIFIER
    (8) attr -> . OTHER

    IDENTIFIER      shift and go to state 6
    OTHER           shift and go to state 7

    elements_inside_comma          shift and go to state 3
    elements_inside_equal          shift and go to state 4
    attr                           shift and go to state 5

state 3

    (1) elements_outside -> LSB elements_inside_comma . RSB

    RSB             shift and go to state 8


state 4

    (2) elements_inside_comma -> elements_inside_equal . COMMA elements_inside_equal
    (3) elements_inside_comma -> elements_inside_equal .

    COMMA           shift and go to state 9
    RSB             reduce using rule 3 (elements_inside_comma -> elements_inside_equal .)


state 5

    (4) elements_inside_equal -> attr . EQUAL attr
    (5) attr -> attr . IDENTIFIER
    (6) attr -> attr . OTHER

    EQUAL           shift and go to state 10
    IDENTIFIER      shift and go to state 11
    OTHER           shift and go to state 12


state 6

    (7) attr -> IDENTIFIER .

    EQUAL           reduce using rule 7 (attr -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 7 (attr -> IDENTIFIER .)
    OTHER           reduce using rule 7 (attr -> IDENTIFIER .)
    COMMA           reduce using rule 7 (attr -> IDENTIFIER .)
    RSB             reduce using rule 7 (attr -> IDENTIFIER .)


state 7

    (8) attr -> OTHER .

    EQUAL           reduce using rule 8 (attr -> OTHER .)
    IDENTIFIER      reduce using rule 8 (attr -> OTHER .)
    OTHER           reduce using rule 8 (attr -> OTHER .)
    COMMA           reduce using rule 8 (attr -> OTHER .)
    RSB             reduce using rule 8 (attr -> OTHER .)


state 8

    (1) elements_outside -> LSB elements_inside_comma RSB .

    $end            reduce using rule 1 (elements_outside -> LSB elements_inside_comma RSB .)


state 9

    (2) elements_inside_comma -> elements_inside_equal COMMA . elements_inside_equal
    (4) elements_inside_equal -> . attr EQUAL attr
    (5) attr -> . attr IDENTIFIER
    (6) attr -> . attr OTHER
    (7) attr -> . IDENTIFIER
    (8) attr -> . OTHER

    IDENTIFIER      shift and go to state 6
    OTHER           shift and go to state 7

    elements_inside_equal          shift and go to state 13
    attr                           shift and go to state 5

state 10

    (4) elements_inside_equal -> attr EQUAL . attr
    (5) attr -> . attr IDENTIFIER
    (6) attr -> . attr OTHER
    (7) attr -> . IDENTIFIER
    (8) attr -> . OTHER

    IDENTIFIER      shift and go to state 6
    OTHER           shift and go to state 7

    attr                           shift and go to state 14

state 11

    (5) attr -> attr IDENTIFIER .

    EQUAL           reduce using rule 5 (attr -> attr IDENTIFIER .)
    IDENTIFIER      reduce using rule 5 (attr -> attr IDENTIFIER .)
    OTHER           reduce using rule 5 (attr -> attr IDENTIFIER .)
    COMMA           reduce using rule 5 (attr -> attr IDENTIFIER .)
    RSB             reduce using rule 5 (attr -> attr IDENTIFIER .)


state 12

    (6) attr -> attr OTHER .

    EQUAL           reduce using rule 6 (attr -> attr OTHER .)
    IDENTIFIER      reduce using rule 6 (attr -> attr OTHER .)
    OTHER           reduce using rule 6 (attr -> attr OTHER .)
    COMMA           reduce using rule 6 (attr -> attr OTHER .)
    RSB             reduce using rule 6 (attr -> attr OTHER .)


state 13

    (2) elements_inside_comma -> elements_inside_equal COMMA elements_inside_equal .

    RSB             reduce using rule 2 (elements_inside_comma -> elements_inside_equal COMMA elements_inside_equal .)


state 14

    (4) elements_inside_equal -> attr EQUAL attr .
    (5) attr -> attr . IDENTIFIER
    (6) attr -> attr . OTHER

    COMMA           reduce using rule 4 (elements_inside_equal -> attr EQUAL attr .)
    RSB             reduce using rule 4 (elements_inside_equal -> attr EQUAL attr .)
    IDENTIFIER      shift and go to state 11
    OTHER           shift and go to state 12

