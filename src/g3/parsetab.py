
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'EQUAL IDENTIFIER INT NEWLINE TAB VAR\n    expression : expression variable_declaration\n        | variable_declaration\n    variable_declaration : VAR IDENTIFIER EQUAL INTvariable_declaration : VAR IDENTIFIER'
    
_lr_action_items = {'VAR':([0,1,2,4,5,7,],[3,3,-2,-1,-4,-3,]),'$end':([1,2,4,5,7,],[0,-2,-1,-4,-3,]),'IDENTIFIER':([3,],[5,]),'EQUAL':([5,],[6,]),'INT':([6,],[7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,],[1,]),'variable_declaration':([0,1,],[2,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression variable_declaration','expression',2,'p_expression','main.py',68),
  ('expression -> variable_declaration','expression',1,'p_expression','main.py',69),
  ('variable_declaration -> VAR IDENTIFIER EQUAL INT','variable_declaration',4,'p_variable_declaration_2','main.py',73),
  ('variable_declaration -> VAR IDENTIFIER','variable_declaration',2,'p_variable_declaration_1','main.py',77),
]
