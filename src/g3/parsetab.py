
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULDIVrightUMINUSCOLON COMMA DIV ELSE EQUAL FLOAT FUNCTION IDENTIFIER IF INT LB LMB LSB MINUS MUL PLUS RB RMB RSB SEMI STRING VAR\n    root : expression\n    \n    expression : expression variable_declaration SEMI\n        | expression variable_value_change SEMI\n    \n    expression : expression if_statement\n    \n    expression : expression function\n        | expression function_call SEMI\n    \n    expression : variable_declaration SEMI\n        | variable_value_change SEMI\n    \n    expression : if_statement\n    \n    expression : function\n        | function_call\n    \n    expression : empty\n    \n    function : function_head function_body\n    \n    function_head : FUNCTION IDENTIFIER LSB empty RSB\n        | FUNCTION IDENTIFIER LSB parameter RSB\n    \n    function_body : LMB expression RMB\n    \n    function_call : IDENTIFIER LSB parameter RSB\n    \n    parameter : parameter COMMA calculate\n    \n    parameter : calculate\n        | empty\n    \n    if_statement : if_statement_head if_statement_body\n    \n    if_statement_head : IF LSB condition RSB\n    \n    if_statement_body : LMB expression RMB\n    \n    condition : condition LB calculate\n        | condition RB calculate\n    \n    condition : condition LB EQUAL calculate\n        | condition RB EQUAL calculate\n    \n    condition : condition EQUAL calculate\n    \n    condition : calculate\n    \n    variable_value_change : IDENTIFIER EQUAL calculate\n    \n    variable_declaration : VAR IDENTIFIER EQUAL calculate\n    \n    variable_declaration : VAR IDENTIFIER\n    calculate : calculate PLUS calculatecalculate : calculate MINUS calculatecalculate : MINUS calculate %prec UMINUS\n    calculate : calculate MUL calculate\n        | calculate DIV calculate\n    \n    calculate : INT\n        | FLOAT\n        | STRING\n    \n    calculate : IDENTIFIER\n    calculate : LSB calculate RSBempty : '
    
_lr_action_items = {'VAR':([0,2,5,6,7,8,17,18,20,21,25,26,27,28,31,32,33,45,46,57,59,60,],[9,9,-9,-10,-11,-12,-4,-5,-7,-8,-21,9,-13,9,-2,-3,-6,9,9,-17,-23,-16,]),'IDENTIFIER':([0,2,5,6,7,8,9,14,17,18,20,21,23,24,25,26,27,28,29,31,32,33,34,37,41,45,46,49,51,52,53,54,57,58,59,60,62,63,64,74,76,],[10,10,-9,-10,-11,-12,22,30,-4,-5,-7,-8,35,35,-21,10,-13,10,35,-2,-3,-6,35,35,35,10,10,35,35,35,35,35,-17,35,-23,-16,35,35,35,35,35,]),'IF':([0,2,5,6,7,8,17,18,20,21,25,26,27,28,31,32,33,45,46,57,59,60,],[13,13,-9,-10,-11,-12,-4,-5,-7,-8,-21,13,-13,13,-2,-3,-6,13,13,-17,-23,-16,]),'FUNCTION':([0,2,5,6,7,8,17,18,20,21,25,26,27,28,31,32,33,45,46,57,59,60,],[14,14,-9,-10,-11,-12,-4,-5,-7,-8,-21,14,-13,14,-2,-3,-6,14,14,-17,-23,-16,]),'$end':([0,1,2,5,6,7,8,17,18,20,21,25,27,31,32,33,57,59,60,],[-43,0,-1,-9,-10,-11,-12,-4,-5,-7,-8,-21,-13,-2,-3,-6,-17,-23,-16,]),'SEMI':([3,4,15,16,19,22,35,36,38,39,40,50,55,57,67,68,69,70,71,],[20,21,31,32,33,-32,-41,-30,-38,-39,-40,-31,-35,-17,-33,-34,-36,-37,-42,]),'RMB':([5,6,7,8,17,18,20,21,25,26,27,28,31,32,33,45,46,57,59,60,],[-9,-10,-11,-12,-4,-5,-7,-8,-21,-43,-13,-43,-2,-3,-6,59,60,-17,-23,-16,]),'EQUAL':([10,22,35,38,39,40,47,48,55,62,63,67,68,69,70,71,73,75,77,80,81,],[23,34,-41,-38,-39,-40,64,-29,-35,74,76,-33,-34,-36,-37,-42,-24,-25,-28,-26,-27,]),'LSB':([10,13,23,24,29,30,34,37,41,49,51,52,53,54,58,62,63,64,74,76,],[24,29,41,41,41,49,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'LMB':([11,12,61,78,79,],[26,28,-22,-14,-15,]),'MINUS':([23,24,29,34,35,36,37,38,39,40,41,43,48,49,50,51,52,53,54,55,56,58,62,63,64,67,68,69,70,71,72,73,74,75,76,77,80,81,],[37,37,37,37,-41,52,37,-38,-39,-40,37,52,52,37,52,37,37,37,37,-35,52,37,37,37,37,-33,-34,-36,-37,-42,52,52,37,52,37,52,52,52,]),'INT':([23,24,29,34,37,41,49,51,52,53,54,58,62,63,64,74,76,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'FLOAT':([23,24,29,34,37,41,49,51,52,53,54,58,62,63,64,74,76,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'STRING':([23,24,29,34,37,41,49,51,52,53,54,58,62,63,64,74,76,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'RSB':([24,35,38,39,40,42,43,44,47,48,49,55,56,65,66,67,68,69,70,71,72,73,75,77,80,81,],[-43,-41,-38,-39,-40,57,-19,-20,61,-29,-43,-35,71,78,79,-33,-34,-36,-37,-42,-18,-24,-25,-28,-26,-27,]),'COMMA':([24,35,38,39,40,42,43,44,49,55,65,66,67,68,69,70,71,72,],[-43,-41,-38,-39,-40,58,-19,-20,-43,-35,-20,58,-33,-34,-36,-37,-42,-18,]),'PLUS':([35,36,38,39,40,43,48,50,55,56,67,68,69,70,71,72,73,75,77,80,81,],[-41,51,-38,-39,-40,51,51,51,-35,51,-33,-34,-36,-37,-42,51,51,51,51,51,51,]),'MUL':([35,36,38,39,40,43,48,50,55,56,67,68,69,70,71,72,73,75,77,80,81,],[-41,53,-38,-39,-40,53,53,53,-35,53,53,53,-36,-37,-42,53,53,53,53,53,53,]),'DIV':([35,36,38,39,40,43,48,50,55,56,67,68,69,70,71,72,73,75,77,80,81,],[-41,54,-38,-39,-40,54,54,54,-35,54,54,54,-36,-37,-42,54,54,54,54,54,54,]),'LB':([35,38,39,40,47,48,55,67,68,69,70,71,73,75,77,80,81,],[-41,-38,-39,-40,62,-29,-35,-33,-34,-36,-37,-42,-24,-25,-28,-26,-27,]),'RB':([35,38,39,40,47,48,55,67,68,69,70,71,73,75,77,80,81,],[-41,-38,-39,-40,63,-29,-35,-33,-34,-36,-37,-42,-24,-25,-28,-26,-27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'root':([0,],[1,]),'expression':([0,26,28,],[2,45,46,]),'variable_declaration':([0,2,26,28,45,46,],[3,15,3,3,15,15,]),'variable_value_change':([0,2,26,28,45,46,],[4,16,4,4,16,16,]),'if_statement':([0,2,26,28,45,46,],[5,17,5,5,17,17,]),'function':([0,2,26,28,45,46,],[6,18,6,6,18,18,]),'function_call':([0,2,26,28,45,46,],[7,19,7,7,19,19,]),'empty':([0,24,26,28,49,],[8,44,8,8,65,]),'if_statement_head':([0,2,26,28,45,46,],[11,11,11,11,11,11,]),'function_head':([0,2,26,28,45,46,],[12,12,12,12,12,12,]),'if_statement_body':([11,],[25,]),'function_body':([12,],[27,]),'calculate':([23,24,29,34,37,41,49,51,52,53,54,58,62,63,64,74,76,],[36,43,48,50,55,56,43,67,68,69,70,72,73,75,77,80,81,]),'parameter':([24,49,],[42,66,]),'condition':([29,],[47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> root","S'",1,None,None,None),
  ('root -> expression','root',1,'p_root','main.py',132),
  ('expression -> expression variable_declaration SEMI','expression',3,'p_expression_variable','main.py',146),
  ('expression -> expression variable_value_change SEMI','expression',3,'p_expression_variable','main.py',147),
  ('expression -> expression if_statement','expression',2,'p_expression_if_statement','main.py',164),
  ('expression -> expression function','expression',2,'p_expression_function','main.py',175),
  ('expression -> expression function_call SEMI','expression',3,'p_expression_function','main.py',176),
  ('expression -> variable_declaration SEMI','expression',2,'p_expression_variable_2','main.py',184),
  ('expression -> variable_value_change SEMI','expression',2,'p_expression_variable_2','main.py',185),
  ('expression -> if_statement','expression',1,'p_expression_if_statement_2','main.py',196),
  ('expression -> function','expression',1,'p_expression_function_2','main.py',204),
  ('expression -> function_call','expression',1,'p_expression_function_2','main.py',205),
  ('expression -> empty','expression',1,'p_expression_empty','main.py',213),
  ('function -> function_head function_body','function',2,'p_function','main.py',224),
  ('function_head -> FUNCTION IDENTIFIER LSB empty RSB','function_head',5,'p_function_head','main.py',231),
  ('function_head -> FUNCTION IDENTIFIER LSB parameter RSB','function_head',5,'p_function_head','main.py',232),
  ('function_body -> LMB expression RMB','function_body',3,'p_function_body','main.py',241),
  ('function_call -> IDENTIFIER LSB parameter RSB','function_call',4,'p_function_call','main.py',252),
  ('parameter -> parameter COMMA calculate','parameter',3,'p_parameter','main.py',260),
  ('parameter -> calculate','parameter',1,'p_parameter_2','main.py',266),
  ('parameter -> empty','parameter',1,'p_parameter_2','main.py',267),
  ('if_statement -> if_statement_head if_statement_body','if_statement',2,'p_if_statement','main.py',278),
  ('if_statement_head -> IF LSB condition RSB','if_statement_head',4,'p_if_statement_head','main.py',285),
  ('if_statement_body -> LMB expression RMB','if_statement_body',3,'p_if_statement_body','main.py',291),
  ('condition -> condition LB calculate','condition',3,'p_condition','main.py',302),
  ('condition -> condition RB calculate','condition',3,'p_condition','main.py',303),
  ('condition -> condition LB EQUAL calculate','condition',4,'p_condition_2','main.py',309),
  ('condition -> condition RB EQUAL calculate','condition',4,'p_condition_2','main.py',310),
  ('condition -> condition EQUAL calculate','condition',3,'p_condition_3','main.py',316),
  ('condition -> calculate','condition',1,'p_condition_4','main.py',322),
  ('variable_value_change -> IDENTIFIER EQUAL calculate','variable_value_change',3,'p_variable_value_change','main.py',330),
  ('variable_declaration -> VAR IDENTIFIER EQUAL calculate','variable_declaration',4,'p_variable_declaration_2','main.py',355),
  ('variable_declaration -> VAR IDENTIFIER','variable_declaration',2,'p_variable_declaration_1','main.py',371),
  ('calculate -> calculate PLUS calculate','calculate',3,'p_add','main.py',400),
  ('calculate -> calculate MINUS calculate','calculate',3,'p_sub','main.py',415),
  ('calculate -> MINUS calculate','calculate',2,'p_calculate2uminus','main.py',419),
  ('calculate -> calculate MUL calculate','calculate',3,'p_mul_div','main.py',424),
  ('calculate -> calculate DIV calculate','calculate',3,'p_mul_div','main.py',425),
  ('calculate -> INT','calculate',1,'p_calculate2num','main.py',436),
  ('calculate -> FLOAT','calculate',1,'p_calculate2num','main.py',437),
  ('calculate -> STRING','calculate',1,'p_calculate2num','main.py',438),
  ('calculate -> IDENTIFIER','calculate',1,'p_calculate2str','main.py',444),
  ('calculate -> LSB calculate RSB','calculate',3,'p_parens','main.py',452),
  ('empty -> <empty>','empty',0,'p_empty','main.py',458),
]
