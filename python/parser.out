Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ESCAPE

Grammar

Rule 0     S' -> root
Rule 1     root -> head_expr inside
Rule 2     root -> root root
Rule 3     inside -> LMB inside_content RMB
Rule 4     inside -> LMB root RMB
Rule 5     inside -> empty
Rule 6     inside_content -> attr
Rule 7     inside_content -> empty
Rule 8     head_expr -> IDENTIFIER elements_outside
Rule 9     elements_outside -> LSB elements_inside_comma RSB
Rule 10    elements_inside_comma -> elements_inside_equal COMMA elements_inside_equal
Rule 11    elements_inside_comma -> elements_inside_equal
Rule 12    elements_inside_comma -> empty
Rule 13    elements_inside_equal -> attr_root EQUAL attr_root
Rule 14    attr_root -> attr attr
Rule 15    attr_root -> attr
Rule 16    attr -> attr IDENTIFIER
Rule 17    attr -> attr OTHER
Rule 18    attr -> IDENTIFIER
Rule 19    attr -> OTHER
Rule 20    empty -> <empty>

Terminals, with rules where they appear

COMMA                : 10
EQUAL                : 13
ESCAPE               : 
IDENTIFIER           : 8 16 18
LMB                  : 3 4
LSB                  : 9
OTHER                : 17 19
RMB                  : 3 4
RSB                  : 9
error                : 

Nonterminals, with rules where they appear

attr                 : 6 14 14 15 16 17
attr_root            : 13 13
elements_inside_comma : 9
elements_inside_equal : 10 10 11
elements_outside     : 8
empty                : 5 7 12
head_expr            : 1
inside               : 1
inside_content       : 3
root                 : 2 2 4 0

Parsing method: LALR

state 0

    (0) S' -> . root
    (1) root -> . head_expr inside
    (2) root -> . root root
    (8) head_expr -> . IDENTIFIER elements_outside

    IDENTIFIER      shift and go to state 3

    root                           shift and go to state 1
    head_expr                      shift and go to state 2

state 1

    (0) S' -> root .
    (2) root -> root . root
    (1) root -> . head_expr inside
    (2) root -> . root root
    (8) head_expr -> . IDENTIFIER elements_outside

    IDENTIFIER      shift and go to state 3

    root                           shift and go to state 4
    head_expr                      shift and go to state 2

state 2

    (1) root -> head_expr . inside
    (3) inside -> . LMB inside_content RMB
    (4) inside -> . LMB root RMB
    (5) inside -> . empty
    (20) empty -> .

    LMB             shift and go to state 6
    IDENTIFIER      reduce using rule 20 (empty -> .)
    $end            reduce using rule 20 (empty -> .)
    RMB             reduce using rule 20 (empty -> .)

    inside                         shift and go to state 5
    empty                          shift and go to state 7

state 3

    (8) head_expr -> IDENTIFIER . elements_outside
    (9) elements_outside -> . LSB elements_inside_comma RSB

    LSB             shift and go to state 9

    elements_outside               shift and go to state 8

state 4

    (2) root -> root root .
    (2) root -> root . root
    (1) root -> . head_expr inside
    (2) root -> . root root
    (8) head_expr -> . IDENTIFIER elements_outside

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    $end            reduce using rule 2 (root -> root root .)
    RMB             reduce using rule 2 (root -> root root .)
    IDENTIFIER      shift and go to state 3

  ! IDENTIFIER      [ reduce using rule 2 (root -> root root .) ]

    root                           shift and go to state 4
    head_expr                      shift and go to state 2

state 5

    (1) root -> head_expr inside .

    IDENTIFIER      reduce using rule 1 (root -> head_expr inside .)
    $end            reduce using rule 1 (root -> head_expr inside .)
    RMB             reduce using rule 1 (root -> head_expr inside .)


state 6

    (3) inside -> LMB . inside_content RMB
    (4) inside -> LMB . root RMB
    (6) inside_content -> . attr
    (7) inside_content -> . empty
    (1) root -> . head_expr inside
    (2) root -> . root root
    (16) attr -> . attr IDENTIFIER
    (17) attr -> . attr OTHER
    (18) attr -> . IDENTIFIER
    (19) attr -> . OTHER
    (20) empty -> .
    (8) head_expr -> . IDENTIFIER elements_outside

    IDENTIFIER      shift and go to state 14
    OTHER           shift and go to state 15
    RMB             reduce using rule 20 (empty -> .)

    inside_content                 shift and go to state 10
    root                           shift and go to state 11
    attr                           shift and go to state 12
    empty                          shift and go to state 13
    head_expr                      shift and go to state 2

state 7

    (5) inside -> empty .

    IDENTIFIER      reduce using rule 5 (inside -> empty .)
    $end            reduce using rule 5 (inside -> empty .)
    RMB             reduce using rule 5 (inside -> empty .)


state 8

    (8) head_expr -> IDENTIFIER elements_outside .

    LMB             reduce using rule 8 (head_expr -> IDENTIFIER elements_outside .)
    IDENTIFIER      reduce using rule 8 (head_expr -> IDENTIFIER elements_outside .)
    $end            reduce using rule 8 (head_expr -> IDENTIFIER elements_outside .)
    RMB             reduce using rule 8 (head_expr -> IDENTIFIER elements_outside .)


state 9

    (9) elements_outside -> LSB . elements_inside_comma RSB
    (10) elements_inside_comma -> . elements_inside_equal COMMA elements_inside_equal
    (11) elements_inside_comma -> . elements_inside_equal
    (12) elements_inside_comma -> . empty
    (13) elements_inside_equal -> . attr_root EQUAL attr_root
    (20) empty -> .
    (14) attr_root -> . attr attr
    (15) attr_root -> . attr
    (16) attr -> . attr IDENTIFIER
    (17) attr -> . attr OTHER
    (18) attr -> . IDENTIFIER
    (19) attr -> . OTHER

    RSB             reduce using rule 20 (empty -> .)
    IDENTIFIER      shift and go to state 21
    OTHER           shift and go to state 15

    elements_inside_comma          shift and go to state 16
    elements_inside_equal          shift and go to state 17
    empty                          shift and go to state 18
    attr_root                      shift and go to state 19
    attr                           shift and go to state 20

state 10

    (3) inside -> LMB inside_content . RMB

    RMB             shift and go to state 22


state 11

    (4) inside -> LMB root . RMB
    (2) root -> root . root
    (1) root -> . head_expr inside
    (2) root -> . root root
    (8) head_expr -> . IDENTIFIER elements_outside

    RMB             shift and go to state 23
    IDENTIFIER      shift and go to state 3

    root                           shift and go to state 4
    head_expr                      shift and go to state 2

state 12

    (6) inside_content -> attr .
    (16) attr -> attr . IDENTIFIER
    (17) attr -> attr . OTHER

    RMB             reduce using rule 6 (inside_content -> attr .)
    IDENTIFIER      shift and go to state 24
    OTHER           shift and go to state 25


state 13

    (7) inside_content -> empty .

    RMB             reduce using rule 7 (inside_content -> empty .)


state 14

    (18) attr -> IDENTIFIER .
    (8) head_expr -> IDENTIFIER . elements_outside
    (9) elements_outside -> . LSB elements_inside_comma RSB

    IDENTIFIER      reduce using rule 18 (attr -> IDENTIFIER .)
    OTHER           reduce using rule 18 (attr -> IDENTIFIER .)
    RMB             reduce using rule 18 (attr -> IDENTIFIER .)
    LSB             shift and go to state 9

    elements_outside               shift and go to state 8

state 15

    (19) attr -> OTHER .

    IDENTIFIER      reduce using rule 19 (attr -> OTHER .)
    OTHER           reduce using rule 19 (attr -> OTHER .)
    RMB             reduce using rule 19 (attr -> OTHER .)
    EQUAL           reduce using rule 19 (attr -> OTHER .)
    COMMA           reduce using rule 19 (attr -> OTHER .)
    RSB             reduce using rule 19 (attr -> OTHER .)


state 16

    (9) elements_outside -> LSB elements_inside_comma . RSB

    RSB             shift and go to state 26


state 17

    (10) elements_inside_comma -> elements_inside_equal . COMMA elements_inside_equal
    (11) elements_inside_comma -> elements_inside_equal .

    COMMA           shift and go to state 27
    RSB             reduce using rule 11 (elements_inside_comma -> elements_inside_equal .)


state 18

    (12) elements_inside_comma -> empty .

    RSB             reduce using rule 12 (elements_inside_comma -> empty .)


state 19

    (13) elements_inside_equal -> attr_root . EQUAL attr_root

    EQUAL           shift and go to state 28


state 20

    (14) attr_root -> attr . attr
    (15) attr_root -> attr .
    (16) attr -> attr . IDENTIFIER
    (17) attr -> attr . OTHER
    (16) attr -> . attr IDENTIFIER
    (17) attr -> . attr OTHER
    (18) attr -> . IDENTIFIER
    (19) attr -> . OTHER

    EQUAL           reduce using rule 15 (attr_root -> attr .)
    COMMA           reduce using rule 15 (attr_root -> attr .)
    RSB             reduce using rule 15 (attr_root -> attr .)
    IDENTIFIER      shift and go to state 30
    OTHER           shift and go to state 31

    attr                           shift and go to state 29

state 21

    (18) attr -> IDENTIFIER .

    IDENTIFIER      reduce using rule 18 (attr -> IDENTIFIER .)
    OTHER           reduce using rule 18 (attr -> IDENTIFIER .)
    EQUAL           reduce using rule 18 (attr -> IDENTIFIER .)
    COMMA           reduce using rule 18 (attr -> IDENTIFIER .)
    RSB             reduce using rule 18 (attr -> IDENTIFIER .)


state 22

    (3) inside -> LMB inside_content RMB .

    IDENTIFIER      reduce using rule 3 (inside -> LMB inside_content RMB .)
    $end            reduce using rule 3 (inside -> LMB inside_content RMB .)
    RMB             reduce using rule 3 (inside -> LMB inside_content RMB .)


state 23

    (4) inside -> LMB root RMB .

    IDENTIFIER      reduce using rule 4 (inside -> LMB root RMB .)
    $end            reduce using rule 4 (inside -> LMB root RMB .)
    RMB             reduce using rule 4 (inside -> LMB root RMB .)


state 24

    (16) attr -> attr IDENTIFIER .

    IDENTIFIER      reduce using rule 16 (attr -> attr IDENTIFIER .)
    OTHER           reduce using rule 16 (attr -> attr IDENTIFIER .)
    RMB             reduce using rule 16 (attr -> attr IDENTIFIER .)
    EQUAL           reduce using rule 16 (attr -> attr IDENTIFIER .)
    COMMA           reduce using rule 16 (attr -> attr IDENTIFIER .)
    RSB             reduce using rule 16 (attr -> attr IDENTIFIER .)


state 25

    (17) attr -> attr OTHER .

    IDENTIFIER      reduce using rule 17 (attr -> attr OTHER .)
    OTHER           reduce using rule 17 (attr -> attr OTHER .)
    RMB             reduce using rule 17 (attr -> attr OTHER .)
    EQUAL           reduce using rule 17 (attr -> attr OTHER .)
    COMMA           reduce using rule 17 (attr -> attr OTHER .)
    RSB             reduce using rule 17 (attr -> attr OTHER .)


state 26

    (9) elements_outside -> LSB elements_inside_comma RSB .

    LMB             reduce using rule 9 (elements_outside -> LSB elements_inside_comma RSB .)
    IDENTIFIER      reduce using rule 9 (elements_outside -> LSB elements_inside_comma RSB .)
    $end            reduce using rule 9 (elements_outside -> LSB elements_inside_comma RSB .)
    RMB             reduce using rule 9 (elements_outside -> LSB elements_inside_comma RSB .)


state 27

    (10) elements_inside_comma -> elements_inside_equal COMMA . elements_inside_equal
    (13) elements_inside_equal -> . attr_root EQUAL attr_root
    (14) attr_root -> . attr attr
    (15) attr_root -> . attr
    (16) attr -> . attr IDENTIFIER
    (17) attr -> . attr OTHER
    (18) attr -> . IDENTIFIER
    (19) attr -> . OTHER

    IDENTIFIER      shift and go to state 21
    OTHER           shift and go to state 15

    elements_inside_equal          shift and go to state 32
    attr_root                      shift and go to state 19
    attr                           shift and go to state 20

state 28

    (13) elements_inside_equal -> attr_root EQUAL . attr_root
    (14) attr_root -> . attr attr
    (15) attr_root -> . attr
    (16) attr -> . attr IDENTIFIER
    (17) attr -> . attr OTHER
    (18) attr -> . IDENTIFIER
    (19) attr -> . OTHER

    IDENTIFIER      shift and go to state 21
    OTHER           shift and go to state 15

    attr_root                      shift and go to state 33
    attr                           shift and go to state 20

state 29

    (14) attr_root -> attr attr .
    (16) attr -> attr . IDENTIFIER
    (17) attr -> attr . OTHER

    EQUAL           reduce using rule 14 (attr_root -> attr attr .)
    COMMA           reduce using rule 14 (attr_root -> attr attr .)
    RSB             reduce using rule 14 (attr_root -> attr attr .)
    IDENTIFIER      shift and go to state 24
    OTHER           shift and go to state 25


state 30

    (16) attr -> attr IDENTIFIER .
    (18) attr -> IDENTIFIER .

  ! reduce/reduce conflict for IDENTIFIER resolved using rule 16 (attr -> attr IDENTIFIER .)
  ! reduce/reduce conflict for OTHER resolved using rule 16 (attr -> attr IDENTIFIER .)
  ! reduce/reduce conflict for EQUAL resolved using rule 16 (attr -> attr IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 16 (attr -> attr IDENTIFIER .)
  ! reduce/reduce conflict for RSB resolved using rule 16 (attr -> attr IDENTIFIER .)
    IDENTIFIER      reduce using rule 16 (attr -> attr IDENTIFIER .)
    OTHER           reduce using rule 16 (attr -> attr IDENTIFIER .)
    EQUAL           reduce using rule 16 (attr -> attr IDENTIFIER .)
    COMMA           reduce using rule 16 (attr -> attr IDENTIFIER .)
    RSB             reduce using rule 16 (attr -> attr IDENTIFIER .)

  ! IDENTIFIER      [ reduce using rule 18 (attr -> IDENTIFIER .) ]
  ! OTHER           [ reduce using rule 18 (attr -> IDENTIFIER .) ]
  ! EQUAL           [ reduce using rule 18 (attr -> IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 18 (attr -> IDENTIFIER .) ]
  ! RSB             [ reduce using rule 18 (attr -> IDENTIFIER .) ]


state 31

    (17) attr -> attr OTHER .
    (19) attr -> OTHER .

  ! reduce/reduce conflict for IDENTIFIER resolved using rule 17 (attr -> attr OTHER .)
  ! reduce/reduce conflict for OTHER resolved using rule 17 (attr -> attr OTHER .)
  ! reduce/reduce conflict for EQUAL resolved using rule 17 (attr -> attr OTHER .)
  ! reduce/reduce conflict for COMMA resolved using rule 17 (attr -> attr OTHER .)
  ! reduce/reduce conflict for RSB resolved using rule 17 (attr -> attr OTHER .)
    IDENTIFIER      reduce using rule 17 (attr -> attr OTHER .)
    OTHER           reduce using rule 17 (attr -> attr OTHER .)
    EQUAL           reduce using rule 17 (attr -> attr OTHER .)
    COMMA           reduce using rule 17 (attr -> attr OTHER .)
    RSB             reduce using rule 17 (attr -> attr OTHER .)

  ! IDENTIFIER      [ reduce using rule 19 (attr -> OTHER .) ]
  ! OTHER           [ reduce using rule 19 (attr -> OTHER .) ]
  ! EQUAL           [ reduce using rule 19 (attr -> OTHER .) ]
  ! COMMA           [ reduce using rule 19 (attr -> OTHER .) ]
  ! RSB             [ reduce using rule 19 (attr -> OTHER .) ]


state 32

    (10) elements_inside_comma -> elements_inside_equal COMMA elements_inside_equal .

    RSB             reduce using rule 10 (elements_inside_comma -> elements_inside_equal COMMA elements_inside_equal .)


state 33

    (13) elements_inside_equal -> attr_root EQUAL attr_root .

    COMMA           reduce using rule 13 (elements_inside_equal -> attr_root EQUAL attr_root .)
    RSB             reduce using rule 13 (elements_inside_equal -> attr_root EQUAL attr_root .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENTIFIER in state 4 resolved as shift
WARNING: reduce/reduce conflict in state 30 resolved using rule (attr -> attr IDENTIFIER)
WARNING: rejected rule (attr -> IDENTIFIER) in state 30
WARNING: reduce/reduce conflict in state 31 resolved using rule (attr -> attr OTHER)
WARNING: rejected rule (attr -> OTHER) in state 31
